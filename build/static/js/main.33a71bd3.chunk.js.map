{"version":3,"sources":["constants/index.js","utils/api-utils.js","common/ProtectedRoute.js","pages/login/login-api.js","pages/login/login.js","pages/signup/sign-api.js","pages/signup/signup.js","partials/header.js","partials/navbar.js","partials/breadcrumb.js","pages/doctor/dashboardpage/dashboard.js","pages/doctor/drugpage/drug-api.js","pages/doctor/drugpage/drug.js","pages/doctor/auditTrail/auditTrails-api.js","common/AuditTableComponent.js","pages/doctor/auditTrail/auditTrail.js","pages/doctor/user/user-api.js","pages/doctor/user/userpage.js","pages/doctor/userinfo/userinfo-api.js","pages/doctor/userinfo/userinfo.js","App.js","serviceWorker.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","API_BASE_URL","APP_CLIENT","APP_PASS","APP_ACCESS_TOKEN","USER_ACCESS_TOKEN","USER_AUTHORITIES","USER_TOKEN_EXPIRATION","TOKEN_DATE","FORBIDDEN_COUNT","GETMETHOD","POSTMETHOD","PUTMETHOD","DELETEMETHOD","axiosRequest","options","setHeader","useBasic","tempHeaders","Authorization","concat","getBasicAuth","Object","_Users_ddada_Documents_danpersonal_livejavaproject_medthreat_medthreat_ui2_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","useAppAccessToken","localStorage","getItem","userAccessToken","headerType","Content-Type","headerRequest","headers","headerTypeData","data","console","log","apiRequest","method","axios","get","url","post","put","delete","checkifStatusIsForbidden","response","then","catch","error","status","count","parseInt","setItem","username","password","hash","Buffer","toString","axiosLoginRequest","head","storeJwtAccessToken","accessToken","decodedToken","jwtDecode","authorities","storeJwtExpireToken","tokenExpirationTime","Date","now","isUserAuthenticated","startDate","endDate","timeExpiration","timeDifferenceInSeconds","hasAuthority","requiredAuthorities","assignedAuthority","split","truthvalue","forEach","authority","includes","getForbiddenCount","redirect","ProtectedRoute","_ref","Component","component","rest","authenticated","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","props","to","pathname","state","from","location","storeToken","token","access_token","expires_in","FormItem","es_form","Item","Login","AntWrappedLoginForm","create","LoginForm","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSubmitExperience","e","preventDefault","setState","isloading","form","validateFields","err","values","logReq","objectSpread","loginRequest","grant_type","scope","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","login","notification","message","description","resetFields","setRoute","error_description","path","redirectMe","bind","assertThisInitialized","clear","getFieldDecorator","className","style","height","display","alignItems","justifyContent","width","spin","spinning","onSubmit","rules","required","input","prefix","icon","type","name","placeholder","react_router_dom","getBasicAuthentication","asyncToGenerator","regenerator_default","mark","_callee","formData","wrap","_context","prev","next","FormData","append","stop","apply","arguments","signUp","_ref2","_callee2","_context2","abrupt","_x","Signup","SignupForm","onLogin","signup_FormItem","Header","id","class","aria-label","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","href","alt","src","data-target","aria-controls","BreadCrumb","menu","submenu","fetchAllDrugs","createDrug","requestBody","_x2","updateDeleteDrug","_ref3","_callee3","_context3","_x3","updateCreatedDrug","_ref4","_callee4","_context4","_x4","DrugPage","AntWrappedDrug","Drug","rediredt","history","onsubmitDrug","getAllDrugs","drugs","deleteDrug","updateDrug","visible","_this$state","drug","amount","alias","updatedDrugRequest","value","enableDrugModal","validateStatus","cancelDrugModal","cancelDrug","validateInput","errorMsg","insiderAttackSwitch","insiderAttackStatus","mapDrugTables","items","map","key","popconfirm","title","onConfirm","onCancel","okText","cancelText","margin","onClick","event","validationFun","target","inputName","inputValue","defineProperty","_this2","background","fontFamily","fontSize","navbar","header","breadcrumb","modal","onOk","okButtonProps","disabled","isFormInvalid","handleSubmit","drug_FormItem","label","help","size","autoComplete","onChange","handleInputChange","for","es_switch","checkedChildren","unCheckedChildren","fetchAllAuditTrails","AuditTrailTable","getLegalStatusTag","legal_status","clazzName","getTableHeader","dataIndex","user","getUserFullName","fullname","firstName","lastName","table","columns","expandedRowRender","record","request","dataSource","auditTrails","AuditTrailPage","getAllAuditTrails","AuditTableComponent","fetchAllUsers","blockUser","email","unBlockUser","UserPage","getAccontLockedInfo","block","badge","clazz","unblockUzer","getAllUsers","blockUzer","roles","role","text","marginBottom","divider","users","fetchOneUser","userid","fetchOneUserAuditTrail","fetchAllroles","updateUserRoles","Meta","UserInfoPage","getSingleUser","userId","isUserloading","getSingleUserAuditTrails","onSelectRole","length","newUserRoles","addRolesToUser","userRoles","unAllocatedRoles","systemRoles","systemRole","unAllocatedRole","obj","checkBoxModal","removeRolesToUser","userRole","updateRoles","roleIds","canUpdateRole","cancelUpdates","params","match","getAllRoles","_this3","plusRole","minusRole","es_checkbox","Group","card","marginTop","actions","avatar","phoneNo","illegalCount","App","currentUser","isLoading","exact","common_ProtectedRoute","Drugpage","withRouter","Boolean","window","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.33a71bd3.chunk.js","sourcesContent":["export const API_BASE_URL = 'https://medthreatapp.herokuapp.com';\n\n\nexport const APP_NAME = 'Recharge Portal';\nexport const APP_CLIENT = 'medthreat';\nexport const APP_PASS = '123456';\n\nexport const APP_ACCESS_TOKEN = \"app_access_token\";\nexport const USER_ACCESS_TOKEN = \"user_access_token\"\nexport const USER_AUTHORITIES = \"user_authorities\"\nexport const USER_TOKEN_EXPIRATION = \"user_token_expiration\"\nexport const TOKEN_DATE = \"token_date\"\n\nexport const FORBIDDEN_COUNT = \"fobidden_count\"\n\n\nexport const GETMETHOD = \"GET\";\nexport const POSTMETHOD = \"POST\";\nexport const PUTMETHOD = \"PUT\";\nexport const DELETEMETHOD = \"DELETE\";","import axios from 'axios';\nimport {APP_ACCESS_TOKEN, FORBIDDEN_COUNT, APP_CLIENT, APP_PASS, GETMETHOD,POSTMETHOD,PUTMETHOD,USER_ACCESS_TOKEN,USER_AUTHORITIES,USER_TOKEN_EXPIRATION,TOKEN_DATE, DELETEMETHOD} from '../constants'\nimport jwtDecode from \"jwt-decode\";\n\n export const axiosRequest = options =>{\n    let setHeader = {}\n    \n\n    if (options.useBasic) {\n        let tempHeaders={Authorization:`${getBasicAuth(APP_CLIENT, APP_PASS)}`}\n        setHeader = {...setHeader, ...tempHeaders}\n    }\n\n    if (options.useAppAccessToken && localStorage.getItem(APP_ACCESS_TOKEN)) {\n        let tempHeaders = {Authorization:`Bearer ${localStorage.getItem(APP_ACCESS_TOKEN)}`}\n        setHeader = {...setHeader, ...tempHeaders}\n    }\n\n    if (options.userAccessToken && localStorage.getItem(USER_ACCESS_TOKEN)) {\n        let tempHeaders = {Authorization:`Bearer ${localStorage.getItem(USER_ACCESS_TOKEN)}`}\n        setHeader = {...setHeader, ...tempHeaders}\n    }\n\n    if(options.headerType){\n        let tempHeaders = {'Content-Type' : options.headerType}\n        setHeader = {...setHeader, ...tempHeaders}\n    }\n\n    \n\n    // if(options.useClientToken){\n    //     let tempHeaders={Authorization:`Bearer ${getClientToken()}`}\n    //     setHeader = {...setHeader, ...tempHeaders}\n    // }\n\n    options.headerRequest = {headers:setHeader}\n    \n    if(options.headerTypeData){\n        options.headerRequest.data = {}\n    }\n\n    console.log(\"options.headerRequest\");\n\n    console.log(options.headerRequest);\n\n    let apiRequest = null;\n\n    switch (options.method) {\n        case GETMETHOD:\n            apiRequest = axios.get(options.url,options.headerRequest)\n        break;\n        \n        case POSTMETHOD:\n            apiRequest= axios.post(options.url, options.data, options.headerRequest);\n        break;\n        \n        case PUTMETHOD:\n            apiRequest= axios.put(options.url, options.data,options.headerRequest);\n        break;\n\n        case DELETEMETHOD:\n            apiRequest = axios.delete(options.url,options.headerRequest)\n        break;\n\n        default:\n          apiRequest = null;\n    }\n\n    // console.log(\"apiRequest\")\n\n    // console.log(apiRequest);\n\n    checkifStatusIsForbidden(apiRequest);\n\n    return apiRequest;\n\n}\n\nconst checkifStatusIsForbidden = (response)=>{\n    response.\n    then(response =>{\n        \n    })\n    .catch((error)=> {\n        console.log(\"checkifStatusIsForbidden\");\n        if(error.response.status== 403){\n            let count=0;\n            if(localStorage.getItem(FORBIDDEN_COUNT)){\n                count=parseInt(localStorage.getItem(FORBIDDEN_COUNT))\n            };\n            count = count + 1\n            localStorage.setItem(FORBIDDEN_COUNT, count)\n        }\n        // localStorage.setItem()\n        console.log(error.response.status);\n\n    });\n}\n\nconst getBasicAuth = (username, password) => {\n    const hash = new Buffer(username + ':' + password).toString('base64');\n    console.log(hash);\n    return \"Basic \" + hash;\n};\n\nexport const axiosLoginRequest = options =>{\n    let setHeader = {}\n    \n\n    if (options.useBasic) {\n        let tempHeaders={\"Authorization\":`${getBasicAuth(APP_CLIENT, APP_PASS)}`}\n        setHeader = {...setHeader, ...tempHeaders}\n    }\n\n    \n    if(options.headerType){\n        let tempHeaders = {'Content-Type' : options.headerType}\n        setHeader = {...setHeader, ...tempHeaders}\n    }\n\n    let basic = getBasicAuth(APP_CLIENT, APP_PASS)\n    let head = {headers:{\"Authorization\": basic,'Content-Type': \"application/x-www-form-urlencoded\"}, data:{}}\n    // options.headerRequest = {headers:setHeader, data:{}}\n    // options.headerRequest.data = {}\n\n    console.log(\"options.headerRequest\");\n\n    console.log(head);\n\n    let apiRequest= axios.post(options.url, options.data, head);\n\n    return apiRequest;\n\n}\n\nexport const storeJwtAccessToken = (accessToken)=>{\n    localStorage.setItem(USER_ACCESS_TOKEN, accessToken);\n    let decodedToken = jwtDecode(accessToken);\n    localStorage.setItem(USER_AUTHORITIES,decodedToken.authorities)\n\n}\nexport const storeJwtExpireToken = (tokenExpirationTime) =>{\n    localStorage.setItem(TOKEN_DATE, Date.now())\n    localStorage.setItem(USER_TOKEN_EXPIRATION,tokenExpirationTime)  \n}\n\nexport const isUserAuthenticated = () =>{\n    // let accessToken = localStorage.getItem(USER_ACCESS_TOKEN);\n    if(localStorage.getItem(USER_ACCESS_TOKEN)==null){\n        console.log(\"false\")\n        return false\n    }\n    else if(localStorage.getItem(USER_ACCESS_TOKEN)){\n        let startDate = localStorage.getItem(TOKEN_DATE);\n        let endDate = Date.now();\n        let timeExpiration = localStorage.getItem(USER_TOKEN_EXPIRATION);\n        console.log(\"TimeExpiration\");\n        console.log(timeExpiration)\n        let timeDifference = endDate-startDate;\n        let timeDifferenceInSeconds = timeDifference/1000\n        console.log(\"TimeDifferenceInSeconds\")\n        console.log(timeDifferenceInSeconds)\n\n        if(timeDifferenceInSeconds > timeExpiration){\n            return false;\n        }\n        return true;\n    }\n    \n    return false;\n\n}\n\nexport const hasAuthority=(requiredAuthorities)=>{\n    let assignedAuthority = localStorage.getItem(USER_AUTHORITIES)\n    // console.log(\"assignedAuthority\")\n    // console.log(assignedAuthority)\n    assignedAuthority = assignedAuthority.split(\",\");\n    // console.log(\"assignedAuthority in split format\")\n    // console.log(assignedAuthority)\n    let truthvalue = false;\n    requiredAuthorities.forEach(authority => {\n        if(assignedAuthority.includes(authority)){\n            truthvalue = true;\n            return ;\n        }    \n     });\n     return truthvalue;\n}\n\nexport const getForbiddenCount=(redirect)=>{\n    // this.props.history.push(`/single-user/${record.id}`)\n    if(localStorage.getItem(FORBIDDEN_COUNT)){\n        let count=parseInt(localStorage.getItem(FORBIDDEN_COUNT))\n        if(count >= 3){\n            redirect(`/`)\n        }\n    };\n\n}\n\n\n\n\n","import React from 'react';\nimport {Redirect, Route} from \"react-router-dom\";\nimport {isUserAuthenticated} from  '../utils/api-utils'\n\n\nconst ProtectedRoute = ({component: Component, authenticated, ...rest}) => (\n    <Route\n        {...rest}\n        render={props =>\n            isUserAuthenticated() ? (\n                <Component {...rest} {...props} />\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: '/',\n                        state: {from: props.location}\n                    }}\n                />\n            )\n        }\n    />\n);\n\nexport default ProtectedRoute","import {API_BASE_URL, APP_CLIENT, APP_PASS, PAGE_SIZE, CLIENT_TOKEN,GETMETHOD,POSTMETHOD,PUTMETHOD} from '../../constants';\nimport {axiosLoginRequest,storeJwtAccessToken,storeJwtExpireToken} from  '../../utils/api-utils'\nimport axios from 'axios';\n\n\n\nexport function login(loginRequest) {\n    loginRequest.grant_type = 'password';\n    loginRequest.scope = 'profile';\n\n    let formBody = [];\n    for (let property in loginRequest) {\n        let encodedKey = encodeURIComponent(property);\n        let encodedValue = encodeURIComponent(loginRequest[property]);\n        formBody.push(`${encodedKey}=${encodedValue}`);\n    }\n\n    // const formData = new FormData();\n\n    // for (let property in loginRequest) {\n    //     let formDataKey = property;\n    //     let formDataValue = loginRequest[property];\n    //     formData.append(formDataKey,formDataValue )\n    // }\n    formBody = formBody.join('&');\n    console.log(formBody);\n\n    // let head = {headers:{\"Authorization\": \"Basic bWVkdGhyZWF0OjEyMzQ1Ng==\",'Content-Type': \"application/x-www-form-urlencoded\"}, data:{}}\n    // console.log(head);\n    // return axios.post(API_BASE_URL + '/oauth/token',formBody, head)\n\n    // options.url, options.data, options.headerRequest\n    return axiosLoginRequest({\n        url: API_BASE_URL + '/oauth/token',\n        method: POSTMETHOD,\n        data: formBody,\n        useBasic: true,\n        // headerType: 'application/json'\n\n        headerType: 'application/x-www-form-urlencoded'\n    });\n}\n\nexport const storeToken= (token) =>{\n    storeJwtAccessToken(token.access_token);\n    storeJwtExpireToken(token.expires_in)\n}\n\n\n","import React, { Component } from 'react';\nimport {login,storeToken} from '../login/login-api'\nimport { Redirect,Link } from 'react-router-dom';\nimport {\n    Form,\n    Input,\n    // Tooltip,\n    Icon,\n    // Cascader,\n    // Select,\n    // Row,\n    // Col,\n    // Checkbox,\n    // Button,\n    Spin,\n    notification\n  } from 'antd';\n  import jwtDecode from \"jwt-decode\";\n\n\nconst FormItem = Form.Item;\n\nclass Login extends Component {\n    render() {\n        const AntWrappedLoginForm = Form.create()(LoginForm);\n        return (\n            <AntWrappedLoginForm />           \n        );\n    }\n}\n\nclass LoginForm extends Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirectMe: {\n                status:false,\n                path:''\n            },\n            isloading:false\n           }\n        this.onSubmitExperience = this.onSubmitExperience.bind(this);\n\n    }\n    componentDidMount(){\n        localStorage.clear()\n    }\n\n    onSubmitExperience = (e) => {\n        e.preventDefault();\n        this.setState({isloading:true})\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log(values);\n                const logReq = {...values};\n                console.log(logReq);\n                login(values)\n                .then(response=>{\n                    console.log(Date.now())\n                    // console.log(response);\n                    // console.log(response.data.access_token)\n                    // console.log(jwtDecode(response.data.access_token));\n                    storeToken(response.data)\n                    notification['success']({\n                        message: 'MEDTHREAT',\n                        description:\n                          'Successfully Logged In.',\n                      });\n                    this.props.form.resetFields();\n                    this.setState({isloading:false})\n                    this.setRoute(\"drug\")\n                }).\n                catch((error)=> {\n                    if(error.response){\n                      console.log(error.response);\n                      if(error.response.status==400 && error.response.data.error==\"invalid_grant\" && error.response.data.error_description==\"User account is locked\"){\n                        this.setState({isloading:false})\n                        notification['error']({\n                            message: 'MEDTHREAT',\n                            description:\n                              `This Account Has been Blocked, Contact Administrator.`,\n                          });\n                      }\n                      else if(error.response.status == 400 ){\n                        \n                        this.setState({isloading:false})\n                        notification['error']({\n                            message: 'MEDTHREAT',\n                            description:\n                              `Username / Password  is Incorrect.`,\n                          });\n                        \n                            console.log(error.response.status);\n                      }else{\n                        \n                        this.setState({isloading:false})\n                        notification['error']({\n                            message: 'MEDTHREAT',\n                            description:\n                              `An Error occured Contact Administrator.`,\n                          });\n                          \n                        console.log(error.response.status);\n                      }\n                    }else{\n                        this.setState({isloading:false})\n                        notification['error']({\n                            message: 'MEDTHREAT',\n                            description:\n                              `An Error occured Contact Administrator.`,\n                          });  \n                          \n                    }\n                    \n                });\n        \n            }else{\n                this.setState({isloading:false})\n\n            }\n\n            // this.setState({isloading:false})\n\n        });\n    }\n    setRoute=(path)=>{\n        this.setState({redirectMe: {\n                status:true,\n                path:`/${path}`\n            }\n        })\n    }\n\n  render() {\n    if(this.state.redirectMe.status){\n        console.log(\"Reiercting\");\n        return <Redirect to={this.state.redirectMe.path} />\n    }\n    const {getFieldDecorator} = this.props.form;\n\n    return (\n        <div className=\"bg-dark\" \n        style={{height: \"100vh\", display: \"flex\", alignItems: \"center\",justifyContent: \"center\"}}>\n            <div className=\"bg-dark sufee-login d-flex align-content-center flex-wrap\" style={{height:\"100%\", width:\"100%\"}}>\n                <div className=\"container\">\n                    <div className=\"login-content\">\n                        <div className=\"login-logo\">\n                            <h2>MEDTHREAT</h2>\n                        </div>\n                        <div className=\"login-form\">\n                            <Spin spinning={this.state.isloading}>\n                                <form onSubmit={this.onSubmitExperience}>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <FormItem>\n                                                {getFieldDecorator('username', {\n                                                    rules: [\n                                                        {\n                                                            required: true,\n                                                            message: 'Please input your email!'\n                                                        }\n                                                    ]\n                                                })(\n                                                    <Input\n                                                        className=\"form-control\"\n                                                        prefix={<Icon type=\"user\"/>}\n                                                        name=\"username\"\n                                                        placeholder=\" Email\"\n                                                    />\n                                                )}\n                                            </FormItem>\n                                        </div>\n                                    </div>\n                                    \n\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <FormItem>\n                                                {getFieldDecorator('password', {\n                                                    rules: [\n                                                        {\n                                                            required: true,\n                                                            message: 'Please input your Password!'\n                                                        }\n                                                    ]\n                                                })(\n                                                    <Input\n                                                        prefix={<Icon type=\"lock\"/>}\n                                                        name=\"password\"\n                                                        type=\"password\"\n                                                        placeholder=\"Password\"\n                                                    />\n\n                                                )}\n                                            </FormItem> \n                                        </div>\n                                    </div>\n                                    \n                                    <FormItem>\n                                        <button type=\"submit\" className=\"btn btn-primary btn-flat m-b-30 m-t-30\">Login</button>\n                                    </FormItem>                                        \n                                    <div className=\"register-link m-t-15 text-center\">\n                                        <p>Don't have account ? <Link to={`/sign-up`} >Sign up</Link></p>\n                                    </div>\n                                </form>\n                            </Spin>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default Login;","import {APP_ACCESS_TOKEN,API_BASE_URL,GETMETHOD,POSTMETHOD,PUTMETHOD,DELETEMETHOD} from '../../constants';\nimport { notification} from 'antd';\nimport {axiosRequest} from  '../../utils/api-utils'\n\n\n\nexport function login(loginRequest) {\n    loginRequest.grant_type = 'password';\n    loginRequest.scope = 'profile';\n\n    let formBody = [];\n    for (let property in loginRequest) {\n        let encodedKey = encodeURIComponent(property);\n        let encodedValue = encodeURIComponent(loginRequest[property]);\n        formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n    formBody = formBody.join(\"&\");\n\n    return axiosRequest({\n        url: API_BASE_URL + '/oauth/token',\n        method: POSTMETHOD,\n        body: formBody,\n        useBasic: true\n    });\n} \n\nconst getBasicAuthentication = async ()=>{\n    // const options =  \n    // { headers:\n    //      {'Content-Type': 'application/json', 'Authorization': `${getBasicAuth(APP_CLIENT, APP_PASS)}` } \n    // };\n    const formData = new FormData();\n    formData.append(\"grant_type\",\"client_credentials\")\n    // let data = {\"grant_type\":\"client_credentials\"}\n    // this doesnt work\n    // return axios.post(`${API_BASE_URL}/oauth/token`,formData, options)\n\n    await axiosRequest({\n        useBasic: true,\n        data: formData,\n        url: `${API_BASE_URL}/oauth/token`,\n        method: POSTMETHOD\n    }).then(response =>{\n        console.log(\"calling getBasicAuthentication\")\n        localStorage.setItem(APP_ACCESS_TOKEN, response.data.access_token);\n\n    }).catch((error)=> {\n        \n        notification['error']({\n            message: 'MEDTHREAT',\n            description:\n              `Server Error occured .`,\n          });\n          \n        console.log(error);\n\n    });;\n}\n\nexport const signUp= async(form)=>{\n    console.log(\"signUp\")\n     await getBasicAuthentication()\n    \n     return axiosRequest({\n        useAppAccessToken: true,\n        data: form,\n        url: `${API_BASE_URL}/api/v1/user/create-sign-up`,\n        method: POSTMETHOD,\n    })\n}\n\n","import React, { Component } from 'react';\nimport {signUp} from '../signup/sign-api'\nimport {\n    Link,\n  } from \"react-router-dom\";\nimport {\n    Form,\n    Input,\n    Tooltip,\n    Icon,\n    Cascader,\n    Select,\n    Row,\n    Col,\n    Checkbox,\n    Button,\n    Spin,\n    notification\n  } from 'antd';\n\nconst FormItem = Form.Item;\n\nclass Signup extends Component {\n    render() {\n        const AntWrappedLoginForm = Form.create()(SignupForm);\n        return (\n            <AntWrappedLoginForm onLogin={this.props.onLogin}/>           \n        );\n    }\n}\n\nclass SignupForm extends Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isloading:false\n           }\n        this.onSubmitExperience = this.onSubmitExperience.bind(this);\n\n    }\n\n    onSubmitExperience = (e) => {\n        e.preventDefault();\n        this.setState({isloading:true})\n\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log(values);\n                signUp(values)\n                .then(response=>{\n                    console.log(response);\n                    notification['success']({\n                        message: 'MEDTHREAT',\n                        description:\n                          'Successfully registered.',\n                      });\n                    this.props.form.resetFields();\n                    this.setState({isloading:false})\n\n                }).\n                catch((error)=> {\n                    if(error.response){\n                      console.log(error.response);\n                      if(error.response.data.status == 400){\n                        notification['error']({\n                            message: 'MEDTHREAT',\n                            description:\n                              `${error.response.data.status} Error occured .`,\n                          });\n                            console.log(error.response.status);\n                            this.setState({isloading:false})\n\n                      }\n                      notification['error']({\n                        message: 'MEDTHREAT',\n                        description:\n                          `An Error occured .`,\n                      });\n                      \n                      console.log(error.response.status);\n                      this.setState({isloading:false})\n\n\n                    }\n                    this.setState({isloading:false})\n\n                });\n                // let loginRequests=values;\n                // console.log(loginRequests);\n                // loginRequest.data={};\n                // console.log(loginRequest);\n                // console.log(loginRequests.username);\n                // console.log(loginRequests.password);\n\n\n\n\n                // login(loginRequest)\n                //     .then(response => {\n                //         initiateUser(response.access_token);\n                //         this.props.onLogin();\n                //     })\n                //     .catch(error => {\n                //         if (error.status === 401 || (error.error_description === 'Bad credentials')) {\n                //             notification.error({\n                //                 message: APP_NAME,\n                //                 description:\n                //                     'Your Username or Password is incorrect. Please try again!'\n                //             });\n                //         } else {\n                //             notification.error({\n                //                 message: APP_NAME,\n                //                 description:\n                //                     error.message ||\n                //                     'Sorry! Something went wrong. Please try again!'\n                //             });\n                //         }\n                //     });\n            }\n        });\n    }\n\n  render() {\n    const {getFieldDecorator} = this.props.form;\n\n    return (\n        <div className=\"bg-dark\" style={{height: \"100vh\"}}>\n            <div className=\"bg-dark sufee-login d-flex align-content-center flex-wrap\">\n                <div className=\"container\">\n                    <div className=\"login-content\">\n                        <div className=\"login-logo\">\n                            <h2>MEDTHREAT</h2>\n                        </div>\n                        <div className=\"login-form\">\n                            <Spin spinning={this.state.isloading}>\n                                <form onSubmit={this.onSubmitExperience}>\n                                    {/* <div className=\"form-group\">\n                                        <label>User Name</label>\n                                        <input type=\"email\" className=\"form-control\" placeholder=\"User Name\">\n                                    </div> */}\n\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <FormItem>\n                                                {getFieldDecorator('firstName', {\n                                                    rules: [\n                                                        {\n                                                            required: true,\n                                                            message: 'Please input your First Name!'\n                                                        }\n                                                    ]\n                                                })(\n                                                    <Input\n                                                        prefix={<Icon type=\"lock\"/>}\n                                                        name=\"firstName\"\n                                                        placeholder=\"First Name\"\n                                                    />\n\n                                                )}\n                                            </FormItem> \n                                        </div>\n                                    </div>\n\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <FormItem>\n                                                {getFieldDecorator('lastName', {\n                                                    rules: [\n                                                        {\n                                                            required: true,\n                                                            message: 'Please input your lastName!'\n                                                        }\n                                                    ]\n                                                })(\n                                                    <Input\n                                                        prefix={<Icon type=\"lock\"/>}\n                                                        name=\"lastName\"\n                                                        placeholder=\"Last Name\"\n                                                    />\n\n                                                )}\n                                            </FormItem> \n                                        </div>\n                                    </div>\n\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <FormItem>\n                                                {getFieldDecorator('email', {\n                                                    rules: [\n                                                        {\n                                                            required: true,\n                                                            message: 'Please input your email!'\n                                                        }\n                                                    ]\n                                                })(\n                                                    <Input\n                                                        className=\"form-control\"\n                                                        prefix={<Icon type=\"user\"/>}\n                                                        name=\"email\"\n                                                        placeholder=\" Email\"\n                                                    />\n                                                )}\n                                            </FormItem>\n                                        </div>\n                                    </div>\n                                    \n                                    \n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <FormItem>\n                                                {getFieldDecorator('phoneNo', {\n                                                    rules: [\n                                                        {\n                                                            required: true,\n                                                            message: 'Please input your phoneNo!'\n                                                        }\n                                                    ]\n                                                })(\n                                                    <Input\n                                                        prefix={<Icon type=\"lock\"/>}\n                                                        name=\"phoneNo\"\n                                                        placeholder=\"Phnoe Number\"\n                                                    />\n\n                                                )}\n                                            </FormItem> \n                                        </div>\n                                    </div>\n\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <FormItem>\n                                                {getFieldDecorator('password', {\n                                                    rules: [\n                                                        {\n                                                            required: true,\n                                                            message: 'Please input your Password!'\n                                                        }\n                                                    ]\n                                                })(\n                                                    <Input\n                                                        prefix={<Icon type=\"lock\"/>}\n                                                        name=\"password\"\n                                                        type=\"password\"\n                                                        placeholder=\"Password\"\n                                                    />\n\n                                                )}\n                                            </FormItem> \n                                        </div>\n                                    </div>\n                                    \n                                    <FormItem>\n                                        <button type=\"submit\" className=\"btn btn-primary btn-flat m-b-30 m-t-30\">Register</button>\n                                    </FormItem>                                        \n                                    <div className=\"register-link m-t-15 text-center\">\n                                        <p>Already have account ? <Link to={`/`} >Sign in</Link></p>\n                                    </div>\n                                </form>\n                            </Spin>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default Signup;","\nimport React, { Component } from 'react';\nimport {\n    Link,\n    Redirect,\n  } from \"react-router-dom\";\n\nclass Header extends Component  {\n    constructor(props) {\n        super(props);\n\n    }\n\n    onSubmitExperience = (e) => {\n        e.preventDefault();\n    }\n\n  render() {\n\n    return (\n        /* <!-- Header--> */\n        <header id=\"header\" class=\"header\">\n\n            <div class=\"header-menu\">\n\n                <div class=\"col-sm-7\">\n                    <a id=\"menuToggle\" class=\"menutoggle pull-left\"><i class=\"fa fa fa-tasks\"></i></a>\n                    <div class=\"header-left\">\n                        <button class=\"search-trigger\"><i class=\"fa fa-search\"></i></button>\n                        <div class=\"form-inline\">\n                            <form class=\"search-form\">\n                                <input class=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search ...\" aria-label=\"Search\" />\n                                <button class=\"search-close\" type=\"submit\"><i class=\"fa fa-close\"></i></button>\n                            </form>\n                        </div>\n\n                        <div class=\"dropdown for-notification\">\n                            <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"notification\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                <i class=\"fa fa-bell\"></i>\n                                <span class=\"count bg-danger\">5</span>\n                            </button>\n                            <div class=\"dropdown-menu\" aria-labelledby=\"notification\">\n                                <p class=\"red\">You have 3 Notification</p>\n                                <a class=\"dropdown-item media bg-flat-color-1\" href=\"#\">\n                                <i class=\"fa fa-check\"></i>\n                                <p>Server #1 overloaded.</p>\n                            </a>\n                                <a class=\"dropdown-item media bg-flat-color-4\" href=\"#\">\n                                <i class=\"fa fa-info\"></i>\n                                <p>Server #2 overloaded.</p>\n                            </a>\n                                <a class=\"dropdown-item media bg-flat-color-5\" href=\"#\">\n                                <i class=\"fa fa-warning\"></i>\n                                <p>Server #3 overloaded.</p>\n                            </a>\n                            </div>\n                        </div>\n\n                        <div class=\"dropdown for-message\">\n                            <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\"\n                                id=\"message\"\n                                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                <i class=\"ti-email\"></i>\n                                <span class=\"count bg-primary\">9</span>\n                            </button>\n                            <div class=\"dropdown-menu\" aria-labelledby=\"message\">\n                                <p class=\"red\">You have 4 Mails</p>\n                                <a class=\"dropdown-item media bg-flat-color-1\" href=\"#\">\n                                <span class=\"photo media-left\"><img alt=\"avatar\" src=\"images/avatar/1.jpg\" /></span>\n                                <span class=\"message media-body\">\n                                    <span class=\"name float-left\">Jonathan Smith</span>\n                                    <span class=\"time float-right\">Just now</span>\n                                        <p>Hello, this is an example msg</p>\n                                </span>\n                            </a>\n                                <a class=\"dropdown-item media bg-flat-color-4\" href=\"#\">\n                                <span class=\"photo media-left\"><img alt=\"avatar\" src=\"images/avatar/2.jpg\" /></span>\n                                <span class=\"message media-body\">\n                                    <span class=\"name float-left\">Jack Sanders</span>\n                                    <span class=\"time float-right\">5 minutes ago</span>\n                                        <p>Lorem ipsum dolor sit amet, consectetur</p>\n                                </span>\n                            </a>\n                                <a class=\"dropdown-item media bg-flat-color-5\" href=\"#\">\n                                <span class=\"photo media-left\"><img alt=\"avatar\" src=\"images/avatar/3.jpg\" /></span>\n                                <span class=\"message media-body\">\n                                    <span class=\"name float-left\">Cheryl Wheeler</span>\n                                    <span class=\"time float-right\">10 minutes ago</span>\n                                        <p>Hello, this is an example msg</p>\n                                </span>\n                            </a>\n                                <a class=\"dropdown-item media bg-flat-color-3\" href=\"#\">\n                                <span class=\"photo media-left\"><img alt=\"avatar\" src=\"images/avatar/4.jpg\" /></span>\n                                <span class=\"message media-body\">\n                                    <span class=\"name float-left\">Rachel Santos</span>\n                                    <span class=\"time float-right\">15 minutes ago</span>\n                                        <p>Lorem ipsum dolor sit amet, consectetur</p>\n                                </span>\n                            </a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"col-sm-5\">\n                    <div class=\"user-area dropdown float-right\">\n                        <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            <img class=\"user-avatar rounded-circle\" src=\"images/admin.jpg\" alt=\"User Avatar\" />\n                        </a>\n\n                        <div class=\"user-menu dropdown-menu\">\n                            <a class=\"nav-link\" href=\"#\"><i class=\"fa fa-user\"></i> My Profile</a>\n\n                            <a class=\"nav-link\" href=\"#\"><i class=\"fa fa-user\"></i> Notifications <span class=\"count\">13</span></a>\n\n                            <a class=\"nav-link\" href=\"#\"><i class=\"fa fa-cog\"></i> Settings</a>\n\n                            <a class=\"nav-link\" ><Link to={`/`} ><i class=\"fa fa-power-off\"></i> Logout</Link></a>\n                        </div>\n                    </div>\n\n                    <div class=\"language-select dropdown\" id=\"language-select\">\n                        <a class=\"dropdown-toggle\" href=\"#\" data-toggle=\"dropdown\"  id=\"language\" aria-haspopup=\"true\" aria-expanded=\"true\">\n                            <i class=\"flag-icon flag-icon-us\"></i>\n                        </a>\n                        <div class=\"dropdown-menu\" aria-labelledby=\"language\">\n                            <div class=\"dropdown-item\">\n                                <span class=\"flag-icon flag-icon-fr\"></span>\n                            </div>\n                            <div class=\"dropdown-item\">\n                                <i class=\"flag-icon flag-icon-es\"></i>\n                            </div>\n                            <div class=\"dropdown-item\">\n                                <i class=\"flag-icon flag-icon-us\"></i>\n                            </div>\n                            <div class=\"dropdown-item\">\n                                <i class=\"flag-icon flag-icon-it\"></i>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n        </header>\n        /* <!-- /header --> */\n        /* <!-- Header--> */\n    );\n  }\n}\n\nexport default Header;\n\n\n","\nimport React, { Component } from 'react';\nimport {hasAuthority} from  '../utils/api-utils'\n\nimport {\n    Link,\n    Redirect,\n  } from \"react-router-dom\";\n\nclass Header extends Component  {\n    constructor(props) {\n        super(props);\n        this.onSubmitExperience = this.onSubmitExperience.bind(this);\n\n    }\n\n    onSubmitExperience = (e) => {\n        e.preventDefault();\n    }\n\n  render() {\n    return (\n        // <!-- Left Panel -->\n        <aside id=\"left-panel\" class=\"left-panel\">\n            <nav class=\"navbar navbar-expand-sm navbar-default\">\n\n                <div class=\"navbar-header\">\n                    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#main-menu\" aria-controls=\"main-menu\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <i class=\"fa fa-bars\"></i>\n                    </button>\n                    <a class=\"navbar-brand\" href=\"./\"><h5>MEDthreat</h5></a>\n                    <a class=\"navbar-brand hidden\" href=\"./\">M</a>\n                </div>\n\n                <div id=\"main-menu\" class=\"main-menu collapse navbar-collapse\">\n                    <ul class=\"nav navbar-nav\">\n                        \n                            {/* <li class=\"active\">\n                                <Link to={`/dashboard`} ><i className=\"menu-icon fa fa-dashboard\"></i>Dashboard</Link>\n                            </li> */}\n                            \n                       \n                           \n                            <h3 class=\"menu-title\">User</h3>\n                           \n                        \n                                 {/* <!-- /.menu-title --> */}\n                            <li class=\"menu-item-has-children dropdown\">\n                                <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i class=\"menu-icon fa fa-laptop\"></i>Actions</a>\n                                <ul class=\"sub-menu children dropdown-menu\">\n                                    <li>\n                                        <Link to={`/drug`} ><i className=\"fa fa-puzzle-piece\"></i>Drug</Link>\n                                    </li>\n                                    {/* <li><i class=\"fa fa-puzzle-piece\"></i><a href=\"ui-buttons.html\">Buttons</a></li>\n                                    <li><i class=\"fa fa-id-badge\"></i><a href=\"ui-badges.html\">Badges</a></li>\n                                    <li><i class=\"fa fa-bars\"></i><a href=\"ui-tabs.html\">Tabs</a></li> */}\n                                    \n                                </ul>\n                            </li>\n                            \n                        \n                        \n                        \n                        \n                        {\n                            hasAuthority([\"ROLE_ADMIN\"])\n                            ?\n                                <h3 class=\"menu-title\">Admin</h3>\n                            :\n                            \"\"\n\n                        }\n                        {\n                            hasAuthority([\"ROLE_ADMIN\"])\n                            ?\n                            <li class=\"menu-item-has-children dropdown\">\n                                <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> <i class=\"menu-icon fa fa-tasks\"></i>Actions</a>\n                                <ul class=\"sub-menu children dropdown-menu\">\n                                    <li>\n                                        <Link to={`/users`} ><i className=\"fa fa-puzzle-piece\"></i>Users</Link>\n                                    </li>\n                                    <li>\n                                        <Link to={`/audit-trails`} ><i className=\"fa fa-puzzle-piece\"></i>Audit</Link>\n                                    </li>\n                                </ul>\n                            </li>\n                            :\n                            \"\"\n                        }\n\n                        {/* <h3 class=\"menu-title\">Admin</h3> */}\n                        {/* <!-- /.menu-title --> */}\n\n                        \n                        \n                        \n                    </ul>\n                </div>\n                {/* <!-- /.navbar-collapse --> */}\n            </nav>\n        </aside>\n        \n        /* <!-- /#left-panel --> */\n    \n    );\n  }\n}\n\nexport default Header;\n\n\n\n\n","\nimport React, { Component } from 'react';\n\nclass BreadCrumb extends Component  {\n    constructor(props) {\n        super(props);\n\n    }\n\n    \n  render() {\n\n    return (\n        /* <!-- BreadCrumb--> */\n        <div class=\"breadcrumbs\">\n            <div class=\"col-sm-4\">\n                <div class=\"page-header float-left\">\n                    <div class=\"page-title\">\n                        <h1>{this.props.menu}</h1>\n                    </div>\n                </div>\n            </div>\n            <div class=\"col-sm-8\">\n                <div class=\"page-header float-right\">\n                    <div class=\"page-title\">\n                        <ol class=\"breadcrumb text-right\">\n                            <li class=\"active\">{this.props.submenu}</li>\n                        </ol>\n                    </div>\n                </div>\n            </div>\n        </div>\n        /* <!-- BreadCrumb--> */\n    );\n  }\n}\n\nexport default BreadCrumb;\n\n\n","\nimport React, { Component } from 'react';\nimport Header from '../../../partials/header';\nimport Navbar from '../../../partials/navbar'\nimport BreadCrumb from '../../../partials/breadcrumb'\n\nclass Dashboard extends Component  {\n    constructor(props) {\n        super(props);\n            // this.onSubmitExperience = this.onSubmitExperience.bind(this);\n\n    }\n\n    onSubmitExperience = (e) => {\n        e.preventDefault();\n    }\n\n  render() {\n    return (\n        <div>\n        {/* <!-- Left Panel --> */}\n\n            <Navbar></Navbar>\n            {/* <!-- /#left-panel --> */}\n            {/* <!-- Left Panel --> */}\n\n            {/* <!-- Right Panel --> */}\n\n            <div id=\"right-panel\" class=\"right-panel\">\n                <Header></Header>\n                {/* <!-- /header --> */}\n                {/* <!-- Header--> */}\n\n                <BreadCrumb menu=\"Dashboard\" submenu=\" \"></BreadCrumb>\n\n                <div class=\"content mt-3\">\n\n                    <div class=\"col-sm-12\">\n                        <div class=\"alert  alert-success alert-dismissible fade show\" role=\"alert\">\n                            <span class=\"badge badge-pill badge-success\">Success</span> You successfully read this important alert message.\n                            <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                    </div>\n\n\n                    <div class=\"col-sm-6 col-lg-3\">\n                        <div class=\"card text-white bg-flat-color-1\">\n                            <div class=\"card-body pb-0\">\n                                <div class=\"dropdown float-right\">\n                                    <button class=\"btn bg-transparent dropdown-toggle theme-toggle text-light\" type=\"button\" id=\"dropdownMenuButton1\" data-toggle=\"dropdown\">\n                                        <i class=\"fa fa-cog\"></i>\n                                    </button>\n                                    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n                                        <div class=\"dropdown-menu-content\">\n                                            <a class=\"dropdown-item\" href=\"#\">Action</a>\n                                            <a class=\"dropdown-item\" href=\"#\">Another action</a>\n                                            <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n                                        </div>\n                                    </div>\n                                </div>\n                                <h4 class=\"mb-0\">\n                                    <span class=\"count\">10468</span>\n                                </h4>\n                                <p class=\"text-light\">Members online</p>\n\n                                <div class=\"chart-wrapper px-0\" style={{height:\"70px\"}} height=\"70\">\n                                    <canvas id=\"widgetChart1\"></canvas>\n                                </div>\n\n                            </div>\n\n                        </div>\n                    </div>\n                    {/* <!--/.col--> */}\n\n                    <div class=\"col-sm-6 col-lg-3\">\n                        <div class=\"card text-white bg-flat-color-2\">\n                            <div class=\"card-body pb-0\">\n                                <div class=\"dropdown float-right\">\n                                    <button class=\"btn bg-transparent dropdown-toggle theme-toggle text-light\" type=\"button\" id=\"dropdownMenuButton2\" data-toggle=\"dropdown\">\n                                        <i class=\"fa fa-cog\"></i>\n                                    </button>\n                                    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton2\">\n                                        <div class=\"dropdown-menu-content\">\n                                            <a class=\"dropdown-item\" href=\"#\">Action</a>\n                                            <a class=\"dropdown-item\" href=\"#\">Another action</a>\n                                            <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n                                        </div>\n                                    </div>\n                                </div>\n                                <h4 class=\"mb-0\">\n                                    <span class=\"count\">10468</span>\n                                </h4>\n                                <p class=\"text-light\">Members online</p>\n\n                                <div class=\"chart-wrapper px-0\" style={{height:\"70px\"}} height=\"70\">\n                                    <canvas id=\"widgetChart2\"></canvas>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                    {/* <!--/.col--> */}\n\n                    <div class=\"col-sm-6 col-lg-3\">\n                        <div class=\"card text-white bg-flat-color-3\">\n                            <div class=\"card-body pb-0\">\n                                <div class=\"dropdown float-right\">\n                                    <button class=\"btn bg-transparent dropdown-toggle theme-toggle text-light\" type=\"button\" id=\"dropdownMenuButton3\" data-toggle=\"dropdown\">\n                                        <i class=\"fa fa-cog\"></i>\n                                    </button>\n                                    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton3\">\n                                        <div class=\"dropdown-menu-content\">\n                                            <a class=\"dropdown-item\" href=\"#\">Action</a>\n                                            <a class=\"dropdown-item\" href=\"#\">Another action</a>\n                                            <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n                                        </div>\n                                    </div>\n                                </div>\n                                <h4 class=\"mb-0\">\n                                    <span class=\"count\">10468</span>\n                                </h4>\n                                <p class=\"text-light\">Members online</p>\n\n                            </div>\n\n                            <div class=\"chart-wrapper px-0\" style={{height:\"70px\"}} height=\"70\">\n                                <canvas id=\"widgetChart3\"></canvas>\n                            </div>\n                        </div>\n                    </div>\n                    {/* <!--/.col--> */}\n\n                    <div class=\"col-sm-6 col-lg-3\">\n                        <div class=\"card text-white bg-flat-color-4\">\n                            <div class=\"card-body pb-0\">\n                                <div class=\"dropdown float-right\">\n                                    <button class=\"btn bg-transparent dropdown-toggle theme-toggle text-light\" type=\"button\" id=\"dropdownMenuButton4\" data-toggle=\"dropdown\">\n                                        <i class=\"fa fa-cog\"></i>\n                                    </button>\n                                    <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton4\">\n                                        <div class=\"dropdown-menu-content\">\n                                            <a class=\"dropdown-item\" href=\"#\">Action</a>\n                                            <a class=\"dropdown-item\" href=\"#\">Another action</a>\n                                            <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n                                        </div>\n                                    </div>\n                                </div>\n                                <h4 class=\"mb-0\">\n                                    <span class=\"count\">10468</span>\n                                </h4>\n                                <p class=\"text-light\">Members online</p>\n\n                                <div class=\"chart-wrapper px-3\" style={{height:\"70px\"}} height=\"70\">\n                                    <canvas id=\"widgetChart4\"></canvas>\n                                </div>\n\n                            </div>\n                        </div>\n                    </div>\n                    {/* <!--/.col--> */}\n\n                    <div class=\"col-lg-3 col-md-6\">\n                        <div class=\"social-box facebook\">\n                            <i class=\"fa fa-facebook\"></i>\n                            <ul>\n                                <li>\n                                    <span class=\"count\">40</span> k\n                                    <span>friends</span>\n                                </li>\n                                <li>\n                                    <span class=\"count\">450</span>\n                                    <span>feeds</span>\n                                </li>\n                            </ul>\n                        </div>\n                        {/* <!--/social-box--> */}\n                    </div>\n                    {/* <!--/.col--> */}\n\n\n                    <div class=\"col-lg-3 col-md-6\">\n                        <div class=\"social-box twitter\">\n                            <i class=\"fa fa-twitter\"></i>\n                            <ul>\n                                <li>\n                                    <span class=\"count\">30</span> k\n                                    <span>friends</span>\n                                </li>\n                                <li>\n                                    <span class=\"count\">450</span>\n                                    <span>tweets</span>\n                                </li>\n                            </ul>\n                        </div>\n                        {/* <!--/social-box--> */}\n                    </div>\n                    {/* <!--/.col--> */}\n\n\n                    <div class=\"col-lg-3 col-md-6\">\n                        <div class=\"social-box linkedin\">\n                            <i class=\"fa fa-linkedin\"></i>\n                            <ul>\n                                <li>\n                                    <span class=\"count\">40</span> +\n                                    <span>contacts</span>\n                                </li>\n                                <li>\n                                    <span class=\"count\">250</span>\n                                    <span>feeds</span>\n                                </li>\n                            </ul>\n                        </div>\n                        {/* <!--/social-box--> */}\n                    </div>\n                    {/* <!--/.col--> */}\n\n\n                    <div class=\"col-lg-3 col-md-6\">\n                        <div class=\"social-box google-plus\">\n                            <i class=\"fa fa-google-plus\"></i>\n                            <ul>\n                                <li>\n                                    <span class=\"count\">94</span> k\n                                    <span>followers</span>\n                                </li>\n                                <li>\n                                    <span class=\"count\">92</span>\n                                    <span>circles</span>\n                                </li>\n                            </ul>\n                        </div>\n                        {/* <!--/social-box--> */}\n                    </div>\n                    {/* <!--/.col--> */}\n\n                    <div class=\"col-xl-6\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-4\">\n                                        <h4 class=\"card-title mb-0\">Traffic</h4>\n                                        <div class=\"small text-muted\">October 2017</div>\n                                    </div>\n                                    {/* <!--/.col--> */}\n                                    <div class=\"col-sm-8 hidden-sm-down\">\n                                        <button type=\"button\" class=\"btn btn-primary float-right bg-flat-color-1\"><i class=\"fa fa-cloud-download\"></i></button>\n                                        <div class=\"btn-toolbar float-right\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                                            <div class=\"btn-group mr-3\" data-toggle=\"buttons\" aria-label=\"First group\">\n                                                <label class=\"btn btn-outline-secondary\">\n                                                    <input type=\"radio\" name=\"options\" id=\"option1\" /> Day\n                                                </label>\n                                                <label class=\"btn btn-outline-secondary active\">\n                                                    <input type=\"radio\" name=\"options\" id=\"option2\" checked=\"\" /> Month\n                                                </label>\n                                                <label class=\"btn btn-outline-secondary\">\n                                                    <input type=\"radio\" name=\"options\" id=\"option3\"/> Year\n                                                </label>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    {/* <!--/.col--> */}\n\n\n                                </div>\n                                {/* <!--/.row--> */}\n                                <div class=\"chart-wrapper mt-4\">\n                                    <canvas id=\"trafficChart\" style={{height:\"200px\"}} height=\"200\"></canvas>\n                                </div>\n\n                            </div>\n                            <div class=\"card-footer\">\n                                <ul>\n                                    <li>\n                                        <div class=\"text-muted\">Visits</div>\n                                        <strong>29.703 Users (40%)</strong>\n                                        <div class=\"progress progress-xs mt-2\" style={{height:\"5px\"}}>\n                                            <div class=\"progress-bar bg-success\" role=\"progressbar\" style={{width:\"40%\"}}  aria-valuenow=\"40\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                                        </div>\n                                    </li>\n                                    <li class=\"hidden-sm-down\">\n                                        <div class=\"text-muted\">Unique</div>\n                                        <strong>24.093 Users (20%)</strong>\n                                        <div class=\"progress progress-xs mt-2\" style={{height:\"5px\"}}>\n                                            <div class=\"progress-bar bg-info\" role=\"progressbar\" style={{width:\"20%\"}}  aria-valuenow=\"20\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                                        </div>\n                                    </li>\n                                    <li>\n                                        <div class=\"text-muted\">Pageviews</div>\n                                        <strong>78.706 Views (60%)</strong>\n                                        <div class=\"progress progress-xs mt-2\" style={{height: \"5px\"}}>\n                                            <div class=\"progress-bar bg-warning\" role=\"progressbar\" style={{width:\"60%\"}}  aria-valuenow=\"60\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                                        </div>\n                                    </li>\n                                    <li class=\"hidden-sm-down\">\n                                        <div class=\"text-muted\">New Users</div>\n                                        <strong>22.123 Users (80%)</strong>\n                                        <div class=\"progress progress-xs mt-2\" style={{height: \"5px\"}}>\n                                            <div class=\"progress-bar bg-danger\" role=\"progressbar\" style={{width:\"80%\"}} aria-valuenow=\"80\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                                        </div>\n                                    </li>\n                                    <li class=\"hidden-sm-down\">\n                                        <div class=\"text-muted\">Bounce Rate</div>\n                                        <strong>40.15%</strong>\n                                        <div class=\"progress progress-xs mt-2\" style={{height: \"5px\"}}>\n                                            <div class=\"progress-bar\" role=\"progressbar\" style={{width:\"40%\"}}  aria-valuenow=\"40\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                                        </div>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-xl-3 col-lg-6\">\n                        <section class=\"card\">\n                            <div class=\"twt-feed blue-bg\">\n                                <div class=\"corner-ribon black-ribon\">\n                                    <i class=\"fa fa-twitter\"></i>\n                                </div>\n                                <div class=\"fa fa-twitter wtt-mark\"></div>\n\n                                <div class=\"media\">\n                                    <a href=\"#\">\n                                        <img class=\"align-self-center rounded-circle mr-3\" style={{width:\"85px\",height:\"85px\"}} alt=\"\" src=\"images/admin.jpg\" />\n                                    </a>\n                                    <div class=\"media-body\">\n                                        <h2 class=\"text-white display-6\">Jim Doe</h2>\n                                        <p class=\"text-light\">Project Manager</p>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"weather-category twt-category\">\n                                <ul>\n                                    <li class=\"active\">\n                                        <h5>750</h5>\n                                        Tweets\n                                    </li>\n                                    <li>\n                                        <h5>865</h5>\n                                        Following\n                                    </li>\n                                    <li>\n                                        <h5>3645</h5>\n                                        Followers\n                                    </li>\n                                </ul>\n                            </div>\n                            <div class=\"twt-write col-sm-12\">\n                                <textarea placeholder=\"Write your Tweet and Enter\" rows=\"1\" class=\"form-control t-text-area\"></textarea>\n                            </div>\n                            <footer class=\"twt-footer\">\n                                <a href=\"#\"><i class=\"fa fa-camera\"></i></a>\n                                <a href=\"#\"><i class=\"fa fa-map-marker\"></i></a>\n                                New Castle, UK\n                                <span class=\"pull-right\">\n                                    32\n                                </span>\n                            </footer>\n                        </section>\n                    </div>\n\n\n                    <div class=\"col-xl-3 col-lg-6\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n                                <div class=\"stat-widget-one\">\n                                    <div class=\"stat-icon dib\"><i class=\"ti-money text-success border-success\"></i></div>\n                                    <div class=\"stat-content dib\">\n                                        <div class=\"stat-text\">Total Profit</div>\n                                        <div class=\"stat-digit\">1,012</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n\n                    <div class=\"col-xl-3 col-lg-6\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n                                <div class=\"stat-widget-one\">\n                                    <div class=\"stat-icon dib\"><i class=\"ti-user text-primary border-primary\"></i></div>\n                                    <div class=\"stat-content dib\">\n                                        <div class=\"stat-text\">New Customer</div>\n                                        <div class=\"stat-digit\">961</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-xl-3 col-lg-6\">\n                        <div class=\"card\">\n                            <div class=\"card-body\">\n                                <div class=\"stat-widget-one\">\n                                    <div class=\"stat-icon dib\"><i class=\"ti-layout-grid2 text-warning border-warning\"></i></div>\n                                    <div class=\"stat-content dib\">\n                                        <div class=\"stat-text\">Active Projects</div>\n                                        <div class=\"stat-digit\">770</div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div class=\"col-xl-6\">\n                        <div class=\"card\">\n                            <div class=\"card-header\">\n                                <h4>World</h4>\n                            </div>\n                            <div class=\"Vector-map-js\">\n                                <div id=\"vmap\" class=\"vmap\" style={{height: \"265px\"}}></div>\n                            </div>\n                        </div>\n                        {/* <!-- /# card --> */}\n                    </div>\n\n\n                </div> \n                {/* <!-- .content --> */}\n            </div>\n            {/* <!-- /#right-panel --> */}\n\n            {/* <!-- Right Panel --> */}\n        </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import {APP_ACCESS_TOKEN,API_BASE_URL,GETMETHOD,POSTMETHOD,PUTMETHOD,DELETEMETHOD} from '../../../constants';\nimport { notification} from 'antd';\nimport {axiosRequest} from  '../../../utils/api-utils'\n\n\n\n\n\nexport const fetchAllDrugs= async(form)=>{\n    console.log(\"fetchAllDrugs\")    \n     return axiosRequest({\n        userAccessToken: true,\n        headerType:`application/json`,\n        headerTypeData:true,\n        url: `${API_BASE_URL}/api/v1/drug/get-all-drugs/validate`,\n        method: GETMETHOD\n    })\n}\n\nexport const createDrug= async(form)=>{\n    console.log(\"createDrug\")    \n     return axiosRequest({\n        userAccessToken: true,\n        data:{requestBody:form},\n        headerType:`application/json`,\n        headerTypeData:true,\n        url: `${API_BASE_URL}/api/v1/drug/create-drug`,\n        method: POSTMETHOD\n    })\n}\n\nexport const updateDeleteDrug= async(id)=>{\n    console.log(\"deleteDrug\")    \n     return axiosRequest({\n        userAccessToken: true,\n        headerType:`application/json`,\n        headerTypeData:true,\n        url: `${API_BASE_URL}/api/v1/drug/delete-drug/${id}`,\n        method: DELETEMETHOD\n    })\n}\n\nexport const updateCreatedDrug= async(form)=>{\n    console.log(\"createDrug\")    \n     return axiosRequest({\n        userAccessToken: true,\n        data:form,\n        headerType:`application/json`,\n        headerTypeData:true,\n        url: `${API_BASE_URL}/api/v1/drug/update-drug`,\n        method: PUTMETHOD\n    })\n}\n\n","import React, { Component } from 'react';\nimport Header from '../../../partials/header';\nimport Navbar from '../../../partials/navbar'\nimport BreadCrumb from '../../../partials/breadcrumb'\nimport {fetchAllDrugs,createDrug,updateDeleteDrug,updateCreatedDrug} from './drug-api'\nimport {hasAuthority,getForbiddenCount} from  '../../../utils/api-utils'\n\nimport {\n    Form,\n    Input,\n    Tooltip,\n    Icon,\n    Switch,\n    Modal,\n    Spin,\n    notification,\n    Popconfirm\n  } from 'antd';\n\nconst FormItem = Form.Item;\n\nclass DrugPage extends Component {\n    render() {\n        const AntWrappedDrug = Form.create()(Drug);\n        return (\n            <AntWrappedDrug rediredt ={this.props.history.push} />           \n        );\n    }\n}\n\nclass Drug extends Component  {\n    constructor(props) {\n        super(props);\n        this.state={\n            drugs:[],\n            isloading:true,\n            drug:{},\n            visible:false,\n\n            name: {\n                value: '',\n                validateStatus:''\n            },\n            amount: {\n                value: '',\n                validateStatus:''\n            },\n            alias: {\n                value: '',\n                validateStatus:''\n            },\n\n            insiderAttackStatus:false,\n            \n        }\n            this.onsubmitDrug = this.onsubmitDrug.bind(this);\n            this.deleteDrug = this.deleteDrug.bind(this);\n\n    }\n\n    componentDidMount(){\n        this.getAllDrugs()\n    }\n\n    onsubmitDrug = (e) => {\n        e.preventDefault();\n        this.setState({isloading:true})\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log(values);\n                createDrug(values)\n                .then(response =>{\n                    console.log(response.data);\n                    if(response.data){\n                        notification['success']({\n                            message: 'MEDTHREAT',\n                            description:\n                              'Drug Created Successfully',\n                          });\n                        this.props.form.resetFields();\n                        this.getAllDrugs()\n                    }\n                })\n                .catch((error)=> {\n                    console.log(\"Drug Error Response\");\n\n              \n                    notification['error']({\n                    message: 'MEDTHREAT',\n                    description:\n                        `Error Occured Creating Drug .`,\n                    });\n                    this.setState({isloading:false})\n                    console.log(error.response.status);\n\n                    getForbiddenCount(this.props.rediredt)\n        \n                });\n            }\n            this.setState({isloading:false})\n\n        });\n    }\n\n    getAllDrugs = () =>{\n        this.setState({isloading:true})\n        fetchAllDrugs()\n        .then(response=>{\n            console.log(\"drug Response\");\n            console.log(response.data)\n            this.setState({drugs:response.data})\n            this.setState({isloading:false})\n        })\n        .catch((error)=> {\n            console.log(\"drug Error Response\");\n      \n            notification['error']({\n            message: 'MEDTHREAT',\n            description:\n                `An Error Fetching Drug .`,\n            });\n            \n            console.log(error.response.status);\n            getForbiddenCount(this.props.rediredt)\n        });\n    }\n\n    deleteDrug = (id)=>{\n        console.log( id)\n        updateDeleteDrug(id)\n        .then(response=>{\n            console.log(\"drug Response\");\n            console.log(response.data)\n            this.getAllDrugs()\n\n            // this.setState({drugs:response.data})\n            // this.setState({isloading:false})\n        })\n        .catch((error)=> {\n            console.log(\"drug Error Response\");\n      \n            notification['error']({\n            message: 'MEDTHREAT',\n            description:\n                `An Error Occured Deleting Drug .`,\n            });\n            \n            console.log(error);\n            // this.props.rediredt(\"/\")\n\n            // let rt = this.props\n\n            // getForbiddenCount(rt)\n            getForbiddenCount(this.props.rediredt)\n\n        });\n    }\n\n    updateDrug = ()=>{\n        this.setState({visible:false})\n        const {drug,name, amount, alias}=this.state\n        let updatedDrugRequest = {\n            id:drug.id,\n            name:name.value,\n            amount:amount.value,\n            alias:alias.value\n        }\n        updateCreatedDrug(updatedDrugRequest)\n        .then(response =>{\n            console.log(response.data);\n            if(response.data){\n                notification['success']({\n                    message: 'MEDTHREAT',\n                    description:\n                      'Drug Updated Successfully',\n                  });\n                // this.props.form.resetFields();\n                this.getAllDrugs()\n                this.setState({drug:{}})\n            }\n        })\n        .catch((error)=> {\n            console.log(\"Drug Error Response\");\n      \n            notification['error']({\n            message: 'MEDTHREAT',\n            description:\n                `Error Occured Updating Drug .`,\n            });\n            this.setState({isloading:false})\n            console.log(error.response.status);\n            getForbiddenCount(this.props.rediredt)\n\n        });\n\n    }\n\n    enableDrugModal =(drug)=>{\n        this.setState({drug})\n        this.setState({name:{value: drug.name, validateStatus:'success'}})\n        this.setState({amount:{value: drug.amount, validateStatus:'success'}})\n        this.setState({alias:{value: drug.alias, validateStatus:'success'}})\n        this.setState({visible:true})\n    }\n\n    cancelDrugModal =(drug)=>{\n        \n        this.setState({visible:false})\n    }\n\n    cancelDrug = ()=>{\n\n    }\n\n    validateInput = (input) => {\n        if (input) {\n            return {\n                validateStatus: 'success',\n                errorMsg: null,\n            };\n        } else {\n            \n            return {\n                validateStatus: 'error',\n                errorMsg: `This field is required`\n            };\n        }\n    }\n\n    handleInputChange(event, validationFun) {\n        const target = event.target;\n        const inputName = target.name;\n        const inputValue = target.value;\n\n        this.setState({\n            [inputName]: {\n                value: inputValue,\n                ...validationFun(inputValue)\n            }\n        });\n    }\n\n    isFormInvalid() {\n        return !(this.state.name.validateStatus === 'success' &&\n            this.state.amount.validateStatus === 'success' &&\n            this.state.alias.validateStatus === 'success' \n                    );\n    }\n\n    insiderAttackSwitch = (e)=>{\n        console.log(\"insiderAttackSwitch\")\n        console.log(e)\n        this.setState({insiderAttackStatus:e})\n    }\n\n    mapDrugTables = () =>{\n        let items = <tr style={{ width: '100%' }} className=\"col-md-12\" >No drug</tr>\n\n        if (this.state.drugs) {\n\n            items = this.state.drugs.map(drug => {\n              return (\n                <tr key={drug.id}>\n                    <td>{drug.name}</td>\n                    <td>{drug.amount}</td>\n                    <td>{drug.alias}</td>\n                    <td>\n                        {\n                            hasAuthority([\"ROLE_USER_DELETE_DRUG\"]) || this.state.insiderAttackStatus\n                            ?\n                                <Popconfirm\n                                    title=\"Are you sure delete this Item?\"\n                                    onConfirm={(e)=>this.deleteDrug(drug.id)}\n                                    onCancel={this.cancelDrug()}\n                                    okText=\"Yes\"\n                                    cancelText=\"No\"\n                                >\n                                    <button style={{margin:'5px'}} type=\"button\" class=\"btn btn-danger btn-sm\">DELETE</button>    \n                                </Popconfirm>\n                            :\n                            \"\"\n                        }\n\n                        {\n                            hasAuthority([\"ROLE_USER_UPDATE_DRUG\"]) || this.state.insiderAttackStatus\n                            ?\n                                <button type=\"button\" onClick={(e)=>this.enableDrugModal(drug)} class=\"btn btn-primary btn-sm\">UPDATE</button>\n                            :\n                            \"\"\n                        }\n                    \n                    \n\n                            {/* <Button className='m-1' color=\"primary\" size=\"xs\"\n                                onClick={() => { this.setPublicationUpdate(item) }}>\n                                Update\n                            </Button> */}\n                            {/* <Button className='m-1' color=\"danger\" size=\"xs\"\n                                onClick={() => { this.deleteItem(item) }}>\n                                Delete\n                            </Button> */}\n                    </td>  \n                </tr>\n              )\n            });\n        }\n\n        return items;\n\n    }\n\n  render() {\n    const {getFieldDecorator} = this.props.form;\n    const bodystyle =  {\n        background: \"#f1f2f7\",\n        display: \"table\",\n        fontFamily: \"'Open Sans' sans-serif !important\",\n        fontSize: \"16px\",\n        width: \"100%\" }\n\n    return (\n        <div style={bodystyle}>\n        {/* <!-- Left Panel --> */}\n\n            <Navbar></Navbar>\n            {/* <!-- /#left-panel --> */}\n            {/* <!-- Left Panel --> */}\n\n            {/* <!-- Right Panel --> */}\n\n            <div  class=\"right-panel \">\n                <Header></Header>\n                {/* <!-- /header --> */}\n                {/* <!-- Header--> */}\n\n                <BreadCrumb menu=\"Drug\" submenu=\" \"></BreadCrumb>\n\n                <div class=\"content mt-3\">\n                    \n                    <div class=\"animated fadeIn\">\n                        <Modal\n                        title=\"UPDATE DRUG Modal\"\n                        visible={this.state.visible}\n                        onOk={this.updateDrug}\n                        okButtonProps={{ disabled: this.isFormInvalid() }}\n                        onCancel={this.cancelDrugModal}\n                        okText=\"UPDATE\"\n                        >\n                            <div className=\"row\">\n                                <Form onSubmit={this.handleSubmit} className=\"signup-form\">\n                                    <FormItem\n                                        label=\"Name\"\n                                        validateStatus={this.state.name.validateStatus}\n                                        help={this.state.name.errorMsg}>\n                                        <Input\n                                            size=\"large\"\n                                            name=\"name\"\n                                            autoComplete=\"off\"\n                                            placeholder=\"Drug name\"\n                                            value={this.state.name.value}\n                                            onChange={(event) => this.handleInputChange(event, this.validateInput)}/>\n                                    </FormItem>\n\n                                    <FormItem\n                                        label=\"Amount\"\n                                        validateStatus={this.state.amount.validateStatus}\n                                        help={this.state.amount.errorMsg}>\n                                        <Input\n                                            size=\"large\"\n                                            name=\"amount\"\n                                            autoComplete=\"off\"\n                                            placeholder=\"Amount in number e.g 100\"\n                                            value={this.state.amount.value}\n                                            onChange={(event) => this.handleInputChange(event, this.validateInput)}/>\n                                    </FormItem>\n\n                                    <FormItem\n                                        label=\"Alias\"\n                                        validateStatus={this.state.alias.validateStatus}\n                                        help={this.state.alias.errorMsg}>\n                                        <Input\n                                            size=\"large\"\n                                            name=\"alias\"\n                                            autoComplete=\"off\"\n                                            placeholder=\"Alias e.g Pz\"\n                                            value={this.state.alias.value}\n                                            onChange={(event) => this.handleInputChange(event, this.validateInput)}/>\n                                    </FormItem>\n                                    \n                                    {/* <FormItem>\n                                        <Button type=\"primary\"\n                                                htmlType=\"submit\"\n                                                size=\"large\"\n                                                className=\"signup-form-button\"\n                                                disabled={this.isFormInvalid()}>Update</Button>\n                                    </FormItem> */}\n                                </Form>\n                            </div>\n                            \n                        </Modal>\n\n\n                        <Spin spinning={this.state.isloading}>\n                            {/* Table for drugs */}\n                            <div className=\"row\">\n                            {\n                                hasAuthority([\"ROLE_USER_CREATE_DRUG\"]) || this.state.insiderAttackStatus\n                                ?\n\n                                    \n                                    <div class=\"col-lg-9\">\n                                        <div class=\"card\">\n                                            <div class=\"card-header\">\n                                                <strong>Drug</strong>\n                                                <small> Form</small>\n                                            </div>\n                                            <form onSubmit={this.onsubmitDrug}>\n                                                <div class=\"card-body card-block\">\n                                                    <div class=\"form-group\">\n                                                        <FormItem>\n                                                            <label  class=\" form-control-label\">\n                                                                Name\n                                                            </label>\n                                                            {getFieldDecorator('name', {\n                                                                rules: [\n                                                                    {\n                                                                        required: true,\n                                                                        message: 'Please input your Name!'\n                                                                    }\n                                                                ]\n                                                            })(\n                                                                <Input\n                                                                    prefix={<Icon type=\"lock\"/>}\n                                                                    name=\"name\"\n                                                                    placeholder=\"Enter your Drug name\"\n                                                                />\n\n                                                            )}\n                                                        </FormItem>    \n                                                    </div>\n                                                    <div class=\"form-group\">\n                                                        <FormItem>\n                                                            <label for=\"company\" class=\" form-control-label\">\n                                                                Amount\n                                                            </label>\n                                                            {getFieldDecorator('amount', {\n                                                                rules: [\n                                                                    {\n                                                                        required: true,\n                                                                        message: 'Please input Amount!'\n                                                                    }\n                                                                ]\n                                                            })(\n                                                                <Input\n                                                                    prefix={<Icon type=\"lock\"/>}\n                                                                    name=\"amount\"\n                                                                    placeholder=\"Enter your Amount\"\n                                                                />\n\n                                                            )}\n                                                        </FormItem>    \n                                                    </div>\n\n                                                    <div class=\"form-group\">\n                                                        <FormItem>\n                                                            <label for=\"company\" class=\" form-control-label\">\n                                                                Alias\n                                                            </label>\n                                                            {getFieldDecorator('alias', {\n                                                                rules: [\n                                                                    {\n                                                                        required: true,\n                                                                        message: 'Please input Alias !'\n                                                                    }\n                                                                ]\n                                                            })(\n                                                                <Input\n                                                                    prefix={<Icon type=\"lock\"/>}\n                                                                    name=\"alias\"\n                                                                    placeholder=\"Enter your Drug Alias\"\n                                                                />\n\n                                                            )}\n                                                        </FormItem>    \n                                                    </div>\n\n                                                    <div class=\"form-group\">\n                                                        <FormItem>\n                                                            <button type=\"submit\" className=\"btn pull-right btn-primary btn-flat m-b-30 m-t-30\">Create</button>\n                                                        </FormItem>\n                                                    </div>\n\n                                                    \n\n                                                </div>\n                                            </form>\n                                        </div>\n\n                                    </div>\n                                    \n                                 \n                                 : \n                                 \n                                 \" \"\n                            }\n                                <div class=\"col-lg-3\">\n                                    <div class=\"card\">\n                                        <div class=\"card-header\">\n                                            <strong>Insider</strong>\n                                            <small> Attacker</small>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <Switch \n                                            checkedChildren=\"Enabled\" \n                                            unCheckedChildren=\"Disabled\" \n                                            onChange={(e)=>this.insiderAttackSwitch(e)} \n                                            />\n                                        </div>\n                                        \n                                    </div>\n\n                                </div>\n\n                            </div>\n                            \n\n                            {/* Table for drugs */}\n                            <div class=\"row\">\n\n                                <div className=\"col-md-12\">\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <strong className=\"card-title\">Data Table</strong>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <table id=\"bootstrap-data-table-export\" className=\"table table-striped table-bordered\">\n                                                <thead>\n                                                    <tr>\n                                                        <th>Name</th>\n                                                        <th>Amount</th>\n                                                        <th>Alias</th>\n                                                        {\n                                                            hasAuthority([\"ROLE_USER_UPDATE_DRUG\",\"ROLE_USER_DELETE_DRUG\"]) || this.state.insiderAttackStatus\n                                                            ?\n                                                                <th>Settings</th>\n                                                            :\n                                                            \"\"\n                                                        }\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {this.mapDrugTables()}  \n                                                </tbody>\n                                            </table>\n                                        </div>\n                                        \n                                    </div>\n                                </div>\n\n\n                            </div>\n\n                        </Spin>\n\n                    </div>\n                </div>\n                {/* <!-- .content --> */}\n            </div>\n            {/* <!-- /#right-panel --> */}\n\n            {/* <!-- Right Panel --> */}\n        </div>\n    );\n  }\n}\n\nexport default DrugPage;\n","import {APP_ACCESS_TOKEN,API_BASE_URL,GETMETHOD,POSTMETHOD,PUTMETHOD,DELETEMETHOD} from '../../../constants';\nimport { notification} from 'antd';\nimport {axiosRequest} from  '../../../utils/api-utils'\n\n\n\n\n\nexport const fetchAllAuditTrails= async(form)=>{\n    console.log(\"fetchAllAuditTrails\")    \n     return axiosRequest({\n        userAccessToken: true,\n        headerType:`application/json`,\n        headerTypeData:true,\n        url: `${API_BASE_URL}/api/v1/audit/get-all-audits/validate`,\n        method: GETMETHOD\n    })\n}\n\n\n","import React, { Component } from 'react';\nimport {\n    Table, Divider, Tag \n  } from 'antd';\n\nclass AuditTrailTable extends Component  {\n    constructor(props) {\n        super(props);\n    }\n\n    \n     \n\n    getLegalStatusTag = (legal_status)=>{\n        let clazzName = \"badge badge-primary\"\n        if(legal_status==\"LEGAL\"){\n            clazzName=\"badge badge-success\"\n        }\n        else if(legal_status==\"ILLEGAL\"){\n            clazzName=\"badge badge-danger\"\n        }\n        \n        return (\n            <span className={clazzName}>\n                {legal_status}\n            </span>\n        );\n        \n                        \n    }\n\n    getUserFullName(user){\n        let fullname=\"\"\n        if(user && user!=null){\n            fullname = `${user.firstName} ${user.lastName}`\n        }\n\n        return(\n            <span> \n                {fullname}                     \n            </span>\n        )\n        \n\n    }\n    getTableHeader = ()=>{\n        const columns = [\n            {\n              title: 'Full Name',\n              dataIndex: 'user',\n              key: 'user',\n              render: user => (\n                this.getUserFullName(user)\n              ),\n            },\n            {\n              title: 'Email',\n              dataIndex: 'email',\n              key: 'email',\n            },\n            // {\n            //   title: 'Request',\n            //   dataIndex: 'request',\n            //   key: 'request',\n            // },\n            {\n                title: 'Target Url',\n                dataIndex: 'target_url',\n                key: 'target_url',\n            },\n\n            {\n                title: 'ip',\n                dataIndex: 'ip',\n                key: 'ip',\n            },\n            \n            {\n                title: 'Legal Status',\n                dataIndex: 'legal_status',\n                key: 'legal_status',\n                render: legal_status => (\n                    <span>\n                        {this.getLegalStatusTag(legal_status)}\n                        \n                      \n                    </span>\n                  ),\n            },\n           \n            {\n                title: 'Action',\n                dataIndex: 'action',\n                key: 'action',\n            },\n          ];\n\n          return columns\n    }\n\n    \n\n  render() {\n    \n\n    return (\n        <div className=\"card\">\n            <div className=\"card-header\">\n                <strong className=\"card-title\">Audit Table</strong>\n            </div>\n            <div className=\"card-body\">\n                <Table columns={this.getTableHeader()} expandedRowRender={record => <p style={{ margin: 0 }}>{record.request}</p>}  dataSource={this.props.auditTrails} />\n            </div>\n            \n        </div>\n    );\n  }\n}\n\nexport default AuditTrailTable;\n","import React, { Component } from 'react';\nimport Header from '../../../partials/header';\nimport Navbar from '../../../partials/navbar'\nimport BreadCrumb from '../../../partials/breadcrumb'\nimport {fetchAllAuditTrails} from './auditTrails-api'\nimport {Spin,notification,Popconfirm,Table, Divider, Tag} from 'antd';\nimport AuditTrailTable from '../../../common/AuditTableComponent'\nimport {hasAuthority} from  '../../../utils/api-utils'\n\n\nclass AuditTrailPage extends Component  {\n    constructor(props) {\n        super(props);\n        this.state={\n            auditTrails:[],\n            isloading:true\n        }\n            // this.onsubmitDrug = this.onsubmitDrug.bind(this);\n            // this.deleteDrug = this.deleteDrug.bind(this);\n\n    }\n\n    componentDidMount(){\n\n        this.getAllAuditTrails()\n    }\n\n    getAllAuditTrails = () =>{\n        this.setState({isloading:true})\n        fetchAllAuditTrails()\n        .then(response=>{\n            console.log(\"drug Response\");\n            console.log(response.data)\n            this.setState({auditTrails:response.data})\n            this.setState({isloading:false})\n        })\n        .catch((error)=> {\n            console.log(\"drug Error Response\");\n      \n            notification['error']({\n            message: 'MEDTHREAT',\n            description:\n                `An Error Fetching Drug .`,\n            });\n            \n            console.log(error.response);\n\n        });\n    }\n\n\n\n  render() {\n    const bodystyle =  {\n        background: \"#f1f2f7\",\n        display: \"table\",\n        fontFamily: \"'Open Sans' sans-serif !important\",\n        fontSize: \"16px\",\n        width: \"100%\" }\n\n    return (\n        <div style={bodystyle}>\n        {/* <!-- Left Panel --> */}\n\n            <Navbar></Navbar>\n            {/* <!-- /#left-panel --> */}\n            {/* <!-- Left Panel --> */}\n\n            {/* <!-- Right Panel --> */}\n\n            <div  class=\"right-panel \">\n                <Header></Header>\n                {/* <!-- /header --> */}\n                {/* <!-- Header--> */}\n\n                <BreadCrumb menu=\"Audit Trail\" submenu=\"\"></BreadCrumb>\n\n                <div class=\"content mt-3\">\n                    \n                    <div class=\"animated fadeIn\">\n                        <Spin spinning={this.state.isloading}>\n\n                            {/* Table for drugs */}\n                            <div class=\"row\">\n\n                            <div className=\"col-md-12\">\n\n                                <AuditTrailTable auditTrails={this.state.auditTrails}></AuditTrailTable>\n                                \n                                {/* <div className=\"card\">\n                                    <div className=\"card-header\">\n                                        <strong className=\"card-title\">Data Table</strong>\n                                    </div>\n                                    <div className=\"card-body\">\n                                        <Table columns={this.getTableHeader()} dataSource={this.state.auditTrails} />\n                                    </div>\n                                    \n                                </div> */}\n                            </div>\n\n\n                        </div>\n\n                        </Spin>\n\n                    </div>\n                </div>\n                {/* <!-- .content --> */}\n            </div>\n            {/* <!-- /#right-panel --> */}\n\n            {/* <!-- Right Panel --> */}\n        </div>\n    );\n  }\n}\n\nexport default AuditTrailPage;\n","import {APP_ACCESS_TOKEN,API_BASE_URL,GETMETHOD,POSTMETHOD,PUTMETHOD,DELETEMETHOD} from '../../../constants';\nimport { notification} from 'antd';\nimport {axiosRequest} from  '../../../utils/api-utils'\n\n\n\n\n\nexport const fetchAllUsers= async(form)=>{\n    console.log(\"fetchAllUsers\")    \n     return axiosRequest({\n        userAccessToken: true,\n        headerType:`application/json`,\n        headerTypeData:true,\n        url: `${API_BASE_URL}/api/v1/user/get-all-users/validate`,\n        method: GETMETHOD\n    })\n}\n\nexport const blockUser= async(email)=>{\n    let form ={email:email}\n    console.log(\"blockUser\")    \n     return axiosRequest({\n        userAccessToken: true,\n        data:{requestBody:form},\n        headerType:`application/json`,\n        headerTypeData:true,\n        url: `${API_BASE_URL}/api/v1/user/block-user-by-email`,\n        method: PUTMETHOD\n    })\n}\n\nexport const unBlockUser= async(email)=>{\n    let form ={email:email}\n    console.log(\"unBlockUser\")    \n     return axiosRequest({\n        userAccessToken: true,\n        data:{requestBody:form},\n        headerType:`application/json`,\n        headerTypeData:true,\n        url: `${API_BASE_URL}/api/v1/user/unblock-user-by-email`,\n        method: PUTMETHOD\n    })\n}\n","import React, { Component } from 'react';\nimport Header from '../../../partials/header';\nimport Navbar from '../../../partials/navbar'\nimport BreadCrumb from '../../../partials/breadcrumb'\nimport {fetchAllUsers,unBlockUser,blockUser} from './user-api'\nimport {hasAuthority} from  '../../../utils/api-utils'\n\nimport {\n    Form,\n    Input,\n    Tooltip,\n    Icon,\n    Cascader,\n    Select,\n    Row,\n    Col,\n    Spin,\n    notification,Popconfirm,Table, Divider, Tag \n  } from 'antd';\n\nclass UserPage extends Component  {\n    constructor(props) {\n        super(props);\n        this.state={\n            users:[],\n            isloading:true\n        }\n            // this.onsubmitDrug = this.onsubmitDrug.bind(this);\n            this.unblockUzer = this.unblockUzer.bind(this);\n\n    }\n\n    componentDidMount(){\n        this.getAllUsers()\n    }\n\n    // <span class=\"badge badge-primary\">Primary</span>\n    //                                 <span class=\"badge badge-secondary\">Secondary</span>\n    //                                 <span class=\"badge badge-success\">Success</span>\n    //                                 <span class=\"badge badge-danger\">Danger</span>\n\n     \n\n    getAccontLockedInfo = (block)=>{\n        let badge = {clazz:\"badge badge-info\", display:\"Active\"}\n        if(block==1){\n            badge = {clazz:\"badge badge-danger\", display:\"Blocked\"}\n        }    \n        return (\n            <span className={badge.clazz}>\n                {badge.display}\n            </span>\n        );                  \n    }\n\n    unblockUzer = (email) =>{\n        unBlockUser(email)\n        .then(response=>{\n            console.log(\"Users Response\");\n            console.log(response.data)\n            this.getAllUsers()\n            // this.setState({isloading:false})\n        })\n        .catch((error)=> {\n            console.log(\"User Error Response\");\n      \n            notification['error']({\n            message: 'MEDTHREAT',\n            description:\n                `An Error Occured UnBlocking User Users .`,\n            });\n\n            this.setState({isloading:false})\n            console.log(error);\n\n        });\n    }\n\n    blockUzer = (email) =>{\n        blockUser(email)\n        .then(response=>{\n            console.log(\"Users Response\");\n            console.log(response.data)\n            this.getAllUsers()\n            // this.setState({isloading:false})\n        })\n        .catch((error)=> {\n            console.log(\"User Error Response\");\n      \n            notification['error']({\n            message: 'MEDTHREAT',\n            description:\n                `An Error Occured Blocking User Users .`,\n            });\n\n            this.setState({isloading:false})\n            console.log(error);\n\n        });\n    }\n\n    getTableHeader = ()=>{\n        \n        const columns = [\n            {\n              title: 'First Name',\n              dataIndex: 'firstName',\n              key: 'firstName',\n            },\n            {\n                title: 'Last Name',\n                dataIndex: 'lastName',\n                key: 'lastName',\n            },\n            {\n              title: 'Email',\n              dataIndex: 'email',\n              key: 'email',\n            },\n            {\n              title: 'Phone Number',\n              dataIndex: 'phoneNo',\n              key: 'phoneNo',\n            },\n            {\n                title: 'Roles',\n                dataIndex: 'roles',\n                key: 'roles',\n                render: roles => (\n                    <span>\n                      {roles.map(role => {\n                        return (\n                            <span className=\"badge badge-secondary\">\n                                {role.name}\n                            </span>\n                        );   \n                      })}\n                    </span>\n                ),\n            },\n\n            {\n                title: 'UnAuthorized Activity',\n                dataIndex: 'illegalCount',\n                key: 'illegalCount',\n            },\n            \n            {\n                title: 'Account Status',\n                dataIndex: 'block',\n                key: 'block',\n                render: block => (\n                    <span>\n                        {this.getAccontLockedInfo(block)}  \n                    </span>\n                  ),\n            },\n           \n            {\n                title: 'Action',\n                key: 'action',\n                render: (text, record) => (\n                  <span>\n                    {\n                        hasAuthority([\"ROLE_ADMIN_BLOCK_USER\"]) \n                        ?\n\n                            (record.block==0) ?\n\n                            <Popconfirm\n                                title=\"Are you sure you want to Block this User?\"\n                                onConfirm={(e)=>{this.blockUzer(record.email)}}\n                                onCancel={this.cancelDrug()}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <button type=\"button\" style={{marginBottom:'5px'}}  class=\"btn btn-danger btn-sm\">Block</button>\n                            </Popconfirm>\n\n                            :\n\n                            <Popconfirm\n                                title=\"Are you sure you want to UnBlock this User?\"\n                                onConfirm={(e)=>{this.unblockUzer(record.email)}}\n                                onCancel={this.cancelDrug()}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <button type=\"button\" style={{marginBottom:'5px'}}  class=\"btn btn-primary btn-sm\">UnBlock</button>\n                            </Popconfirm>\n                        :\n                        \"\"\n\n                    }\n                    \n                    {/* <button type=\"button\" style={{marginBottom:'5px'}}  class=\"btn btn-primary btn-sm\">Block</button> */}\n                    <Divider type=\"vertical\" />\n                    <button onClick={(e)=>{this.props.history.push(`/single-user/${record.id}`);}} type=\"button\" class=\"btn btn-primary btn-sm\">View Audit Trail</button>\n                  </span>\n                ),\n              },\n          ];\n\n          return columns\n    }\n\n    \n    // onsubmitDrug = (e) => {\n    //     e.preventDefault();\n    //     this.setState({isloading:true})\n    //     this.props.form.validateFields((err, values) => {\n    //         if (!err) {\n    //             console.log(values);\n    //             createDrug(values)\n    //             .then(response =>{\n    //                 console.log(response.data);\n    //                 if(response.data){\n    //                     notification['success']({\n    //                         message: 'MEDTHREAT',\n    //                         description:\n    //                           'Drug Created Successfully',\n    //                       });\n    //                     this.props.form.resetFields();\n    //                     this.getAllDrugs()\n    //                 }\n    //             })\n    //             .catch((error)=> {\n    //                 console.log(\"Drug Error Response\");\n              \n    //                 notification['error']({\n    //                 message: 'MEDTHREAT',\n    //                 description:\n    //                     `Error Occured Creating Drug .`,\n    //                 });\n    //                 this.setState({isloading:false})\n    //                 console.log(error.response.status);\n        \n    //             });\n    //         }\n    //     });\n    // }\n\n    getAllUsers = () =>{\n        this.setState({isloading:true})\n        fetchAllUsers()\n        .then(response=>{\n            console.log(\"Users Response\");\n            console.log(response.data)\n            this.setState({users:response.data})\n            this.setState({isloading:false})\n        })\n        .catch((error)=> {\n            console.log(\"User Error Response\");\n      \n            notification['error']({\n            message: 'MEDTHREAT',\n            description:\n                `An Error Fetching Users .`,\n            });\n\n            this.setState({isloading:false})\n            console.log(error);\n\n        });\n    }\n\n    deleteDrug = (id)=>{\n        console.log( id)\n\n    }\n    cancelDrug = ()=>{\n\n    }\n\n    mapDrugTables = () =>{\n        let items = <tr style={{ width: '100%' }} className=\"col-md-12\" >No drug</tr>\n\n        if (this.state.drugs) {\n\n            items = this.state.drugs.map(drug => {\n              return (\n                <tr key={drug.id}>\n                    <td>{drug.name}</td>\n                    <td>{drug.amount}</td>\n                    <td>{drug.alias}</td>\n                    <td>\n                    <Popconfirm\n                        title=\"Are you sure delete this Item?\"\n                        onConfirm={(e)=>this.deleteDrug(drug)}\n                        onCancel={this.cancelDrug()}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <a href=\"#\" style={{margin:'5px'}} >Delete</a>\n                        {/* <a style={{margin:'5px'}} type=\"button\" class=\"btn btn-primary\">Update</a>     */}\n                    </Popconfirm>\n                        <button type=\"button\" class=\"btn btn-primary btn-sm\">Delete</button>\n\n                            {/* <Button className='m-1' color=\"primary\" size=\"xs\"\n                                onClick={() => { this.setPublicationUpdate(item) }}>\n                                Update\n                            </Button> */}\n                            {/* <Button className='m-1' color=\"danger\" size=\"xs\"\n                                onClick={() => { this.deleteItem(item) }}>\n                                Delete\n                            </Button> */}\n                    </td>  \n                </tr>\n              )\n            });\n        }\n\n        return items;\n\n    }\n\n  render() {\n    const bodystyle =  {\n        background: \"#f1f2f7\",\n        display: \"table\",\n        fontFamily: \"'Open Sans' sans-serif !important\",\n        fontSize: \"16px\",\n        width: \"100%\" }\n\n    return (\n        <div style={bodystyle}>\n        {/* <!-- Left Panel --> */}\n\n            <Navbar></Navbar>\n            {/* <!-- /#left-panel --> */}\n            {/* <!-- Left Panel --> */}\n\n            {/* <!-- Right Panel --> */}\n\n            <div  class=\"right-panel \">\n                <Header></Header>\n                {/* <!-- /header --> */}\n                {/* <!-- Header--> */}\n\n                <BreadCrumb menu=\"User\" submenu=\" \"></BreadCrumb>\n\n                <div class=\"content mt-3\">\n                    \n                    <div class=\"animated fadeIn\">\n                        <Spin spinning={this.state.isloading}>\n\n                            {/* Table for drugs */}\n                            <div class=\"row\">\n\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-header\">\n                                        <strong className=\"card-title\">Data Table</strong>\n                                    </div>\n                                    <div className=\"card-body\">\n                                        <Table columns={this.getTableHeader()} dataSource={this.state.users} />\n                                    </div>\n                                    \n                                </div>\n                            </div>\n\n\n                        </div>\n\n                        </Spin>\n\n                    </div>\n                </div>\n                {/* <!-- .content --> */}\n            </div>\n            {/* <!-- /#right-panel --> */}\n\n            {/* <!-- Right Panel --> */}\n        </div>\n    );\n  }\n}\n\nexport default UserPage;\n","import {APP_ACCESS_TOKEN,API_BASE_URL,GETMETHOD,POSTMETHOD,PUTMETHOD,DELETEMETHOD} from '../../../constants';\nimport { notification} from 'antd';\nimport {axiosRequest} from  '../../../utils/api-utils'\n\n\n\n\n\nexport const fetchOneUser= async(userid)=>{\n    console.log(\"fetchOneUser\")    \n     return axiosRequest({\n        userAccessToken: true,\n        headerType:`application/json`,\n        headerTypeData:true,\n        url: `${API_BASE_URL}/api/v1/user/get-user-by-id/${userid}`,\n        method: GETMETHOD\n    })\n}\n\nexport const fetchOneUserAuditTrail= async(userid)=>{\n    console.log(\"fetchOneUserAuditTrail\")    \n     return axiosRequest({\n        userAccessToken: true,\n        headerType:`application/json`,\n        headerTypeData:true,\n        url: `${API_BASE_URL}/api/v1/audit/get-all-audits-by-userId/${userid}`,\n        method: GETMETHOD\n    })\n}\n\nexport const fetchAllroles= async()=>{\n    console.log(\"fetchAllroles\")    \n     return axiosRequest({\n        userAccessToken: true,\n        headerType:`application/json`,\n        headerTypeData:true,\n        url: `${API_BASE_URL}/api/v1/role/get-all-roles/validate`,\n        method: GETMETHOD\n    })\n}\n\nexport const updateUserRoles= async(form)=>{\n    console.log(\"fetchAllroles\")    \n     return axiosRequest({\n        userAccessToken: true,\n        data:{requestBody:form},\n        headerType:`application/json`,\n        headerTypeData:true,\n        url: `${API_BASE_URL}/api/v1/user/update-user-roles-email`,\n        method: PUTMETHOD\n    })\n}\n\n\n","import React, { Component } from 'react';\nimport Header from '../../../partials/header';\nimport Navbar from '../../../partials/navbar'\nimport BreadCrumb from '../../../partials/breadcrumb'\nimport {fetchOneUser,fetchOneUserAuditTrail,fetchAllroles,updateUserRoles} from './userinfo-api'\nimport {hasAuthority} from  '../../../utils/api-utils'\nimport {\n    Form,\n    Input,\n    Divider,\n    Icon,Card, Avatar,Checkbox,Modal,\n    Spin,\n    notification,Popconfirm\n  } from 'antd';\n  import AuditTrailTable from '../../../common/AuditTableComponent'\n\n\nconst { Meta } = Card;\n\nclass UserInfoPage extends Component  {\n    constructor(props) {\n        super(props);\n        this.state={\n            user:{roles:[]},\n            systemRoles:[],\n            userId:null,\n            auditTrails:[],\n            isloading:true,\n            isUserloading:true,\n            checkBoxModal:{\n                title:'',\n                roles:[]\n            },\n            visible:false,\n            newUserRoles:[]\n        }\n           \n    }\n\n    componentDidMount(){\n        const {match: { params }} = this.props;\n        this.setState({userId:params.userId})\n        this.getSingleUser(params.userId)\n        this.getSingleUserAuditTrails(params.userId)\n        this.getAllRoles()\n    }\n\n    \n    \n    getAllRoles(){\n        this.setState({isUserloading:true})\n        fetchAllroles()\n        .then(response=>{\n            console.log(\"Roles Response\");\n            console.log(response.data)\n            this.setState({systemRoles:response.data})\n            this.setState({isUserloading:false})\n        })\n        .catch((error)=> {\n            console.log(\"Roles Error Response\");\n      \n            notification['error']({\n            message: 'MEDTHREAT',\n            description:\n                `An Error Occured Fetching Roles .`,\n            });\n\n            this.setState({isUserloading:false})\n            console.log(error);\n\n        });\n    }\n\n    getSingleUser = (userId) =>{\n        this.setState({isUserloading:true})\n        fetchOneUser(userId)\n        .then(response=>{\n            console.log(\"Users Response\");\n            console.log(response.data)\n            this.setState({user:response.data})\n            this.setState({isUserloading:false})\n        })\n        .catch((error)=> {\n            console.log(\"User Error Response\");\n      \n            notification['error']({\n            message: 'MEDTHREAT',\n            description:\n                `An Error Fetching User .`,\n            });\n\n            this.setState({isUserloading:false})\n            console.log(error);\n\n        });\n    }\n\n    getSingleUserAuditTrails = (userId) =>{\n        this.setState({isloading:true})\n        fetchOneUserAuditTrail(userId)\n        .then(response=>{\n            console.log(\"Audit one Response\");\n            console.log(response.data)\n            this.setState({auditTrails:response.data})\n            this.setState({isloading:false})\n        })\n        .catch((error)=> {\n            console.log(\"Audit Error Response\");\n      \n            notification['error']({\n            message: 'MEDTHREAT',\n            description:\n                `An Error Fetching Audit Trail .`,\n            });\n\n            this.setState({isloading:false})\n            console.log(error);\n\n        });\n    }\n\n    getAccontLockedInfo = (block)=>{\n        let badge = {clazz:\"badge badge-info\", display:\"Active\"}\n        if(block==1){\n            badge = {clazz:\"badge badge-danger\", display:\"Blocked\"}\n        }    \n        return (\n            <span className={badge.clazz}>\n                {badge.display}\n            </span>\n        );                  \n    }\n\n    onSelectRole = (roles)=>{\n\n        notification['info']({\n            message: 'MEDTHREAT',\n            description:\n                `${roles.length} Roles Selected .`,\n        });\n\n        this.setState({newUserRoles:roles})\n        console.log('checked = ', roles);\n    }\n\n    addRolesToUser=()=>{\n        this.setState({visible:false})\n\n        let userRoles = this.state.user.roles\n        let systemRoles= this.state.systemRoles\n        let unAllocatedRoles = systemRoles.map(systemRole=>{\n            if(!userRoles.includes(systemRole)){\n                return systemRole\n            }\n\n        })\n        \n        let options = [];\n        unAllocatedRoles.forEach(unAllocatedRole=>{\n            let obj = { label: unAllocatedRole.name, value: unAllocatedRole.id }\n            options.push(obj);\n        })\n\n        this.setState({checkBoxModal:{title:\"Allocate Roles\",roles:options}})\n\n        this.setState({visible:true})\n\n\n        console.log(\"lol\")\n    }\n\n    removeRolesToUser=()=>{\n        this.setState({visible:false})\n\n        let userRoles = this.state.user.roles        \n        \n        let options = [];\n        userRoles.forEach(userRole=>{\n            let obj = { label: userRole.name, value: userRole.id }\n            options.push(obj);\n        })\n\n        this.setState({checkBoxModal:{title:\"De-Allocate Roles\",roles:options}})\n        this.setState({visible:true})\n\n        console.log(\"lol\")\n    }\n\n    updateRoles=()=>{\n        this.setState({visible:false})\n        this.setState({isUserloading:false})\n\n        let form={\n            userId:this.state.user.id,\n            roleIds:this.state.newUserRoles\n        }\n        updateUserRoles(form)\n        .then(response=>{\n            console.log(\"Users Response\");\n            console.log(response.data)\n            // this.setState({user:response.data})\n            this.getSingleUser(this.state.user.id)\n            this.setState({isUserloading:false})\n            \n            notification['success']({\n                message: 'MEDTHREAT',\n                description:\n                    `Updated User Role Successfully .`,\n                });\n        })\n        .catch((error)=> {\n            console.log(\"User Error Response\");\n      \n            notification['error']({\n            message: 'MEDTHREAT',\n            description:\n                `Error Updating User Role .`,\n            });\n\n            this.setState({isUserloading:false})\n            console.log(error);\n\n        });\n    }\n\n    canUpdateRole=()=>{\n        if(this.state.newUserRoles.length > 0){\n            return true\n        }\n        return false;\n    }\n\n    cancelUpdates=()=>{\n        this.setState({checkBoxModal:{title:\" \",roles:[]}})\n        this.setState({newUserRoles:[]})\n        this.setState({visible:false})\n    }\n\n  render() {\n    const bodystyle =  {\n        background: \"#f1f2f7\",\n        display: \"table\",\n        fontFamily: \"'Open Sans' sans-serif !important\",\n        fontSize: \"16px\",\n        width: \"100%\" }\n\n    const {user,checkBoxModal}=this.state\n    let plusRole = hasAuthority([\"ROLE_ADMIN_BLOCK_USER\"]) \n        ? \n        <a onClick={()=>{this.addRolesToUser()}}><Icon type=\"plus-circle\" /></a>\n        :\n        <a><Icon type=\"plus-circle\" /></a>\n        \n    let minusRole = hasAuthority([\"ROLE_ADMIN_BLOCK_USER\"]) \n        ?\n        <a onClick={()=>{this.removeRolesToUser()}}><Icon type=\"minus-circle\" key=\"edit\" /></a>\n        :\n        <a><Icon type=\"minus-circle\" key=\"edit\" /></a>\n\n\n    return (\n        <div style={bodystyle}>\n        {/* <!-- Left Panel --> */}\n\n            <Navbar></Navbar>\n            {/* <!-- /#left-panel --> */}\n            {/* <!-- Left Panel --> */}\n\n            {/* <!-- Right Panel --> */}\n\n            <div  class=\"right-panel \">\n                <Header></Header>\n                {/* <!-- /header --> */}\n                {/* <!-- Header--> */}\n\n                <BreadCrumb menu=\"User\" submenu=\"User Information\"></BreadCrumb>\n\n                <div class=\"content mt-3\">\n                    \n                    <div class=\"animated fadeIn\">\n                        <div className=\"row\">\n                            <Modal\n                            title={checkBoxModal.title}\n                            visible={this.state.visible}\n                            onOk={this.updateRoles}\n                            okButtonProps={{ disabled: !this.canUpdateRole() }}\n                            onCancel={this.cancelUpdates}\n                            okText=\"UPDATE\"\n                            >\n                            <Checkbox.Group options={checkBoxModal.roles} onChange={this.onSelectRole} />\n                                \n                            </Modal>\n                        </div>\n                        <Spin spinning={this.state.isUserloading}>\n                            <div class=\"row\">\n\n                                <div className=\"col-md-12\">\n                                    <Card style={{ width: \"100%\", marginTop: 16 }}\n                                        actions={[\n                                            \n                                            plusRole,\n                                            minusRole,\n                                            <Icon type=\"ellipsis\" key=\"ellipsis\" />,\n                                        ]} >\n                                        <Meta\n                                            avatar={\n                                                <Avatar size=\"large\" icon=\"user\" />\n                                            }\n                                            title=\"User details\"\n                                            description=\"User description\"\n                                        />\n                                        <p><b>FullName</b>: {user.firstName} {user.lastName}</p>\n                                        <p><b>Phone Number </b>: {user.phoneNo}</p>\n                                        <p><b>Email</b>: {user.email}</p>\n                                        <p><b> UnAuthorized Activity Count block</b>: {user.illegalCount}</p>\n                                        <p><b> Account Status</b>:  {this.getAccontLockedInfo(user.block)}</p>\n                                        <p>\n                                            <b>Roles:</b>\n                                            {user.roles.map(role => {\n                                                return (\n                                                    <span>\n                                                        <span className=\"badge badge-secondary\">\n                                                            {role.name}\n\n                                                        </span>\n                                                        <Divider type=\"vertical\" />\n                                                    </span>\n                                                    \n                                                );   \n                                            })}\n\n                                        </p>\n\n                                    </Card>\n                                    \n                                </div>\n                                \n                            </div>\n                        </Spin>\n\n                        <Spin spinning={this.state.isloading}>\n\n                            {/* Table for drugs */}\n                            <div class=\"row\">\n\n                                <div className=\"col-md-12\">\n                                    <AuditTrailTable auditTrails={this.state.auditTrails}></AuditTrailTable>\n\n                                    {/* <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <strong className=\"card-title\">Data Table</strong>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <Table columns={this.getTableHeader()} dataSource={this.state.users} />\n                                        </div>\n                                        \n                                    </div> */}\n                                </div>\n\n\n                            </div>\n\n                        </Spin>\n\n                    </div>\n                </div>\n                {/* <!-- .content --> */}\n            </div>\n            {/* <!-- /#right-panel --> */}\n\n            {/* <!-- Right Panel --> */}\n        </div>\n    );\n  }\n}\n\nexport default UserInfoPage;\n","import React, {Component} from 'react';\nimport './App.css';\nimport {Route, withRouter,HashRouter} from 'react-router-dom';\nimport ProtectedRoute from './common/ProtectedRoute';\nimport Login from './pages/login/login';\nimport Signup from './pages/signup/signup';\nimport Dashboard from './pages/doctor/dashboardpage/dashboard'\nimport Drugpage from './pages/doctor/drugpage/drug'\nimport AuditTrailPage from './pages/doctor/auditTrail/auditTrail'\nimport UserPage from './pages/doctor/user/userpage'\nimport UserInfoPage from './pages/doctor/userinfo/userinfo'\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentUser: null,\n            isLoading: false\n        };\n    }\n\n    \n    \n\n    render() {\n\n        return (\n\n            <HashRouter>\n                <Route exact path='/' component={Login} />\n                <Route exact path='/sign-up' component={Signup} />\n                {/* <ProtectedRoute exact path=\"/dashboard\" component={Dashboard} /> */}\n                <ProtectedRoute exact path=\"/drug\" component={Drugpage} />\n                <ProtectedRoute exact path=\"/audit-trails\" component={AuditTrailPage} />\n                <ProtectedRoute exact path=\"/users\" component={UserPage} />\n                <ProtectedRoute exact path='/single-user/:userId' component={UserInfoPage} />\n\n            </HashRouter>\n\n\n        //     <HashRouter>\n        //         <div>\n        //           {/* <Route path='/biodata' component={Biodata} />\n        //           <Route path='/professional_info' component={ProfInfo} />\n        //           <Route path='/educational_info' component={EduInfo} />\n        //           <Route path='/experience' component={Experience} />\n        //           <Route path='/pdf' component={PDF} />\n        //           <Route path='/activity' component={Activity} />\n        //           <Route path='/postgraduate' component={PostGraduate} />\n        //           <Route path='/onelecturer' component={OneLecturer} />\n        //           <Route path='/hoddepartmentlecturers' component={AllLecturer} />\n        //           <Route path='/hodLecturer/:userId' component={HodLecturer} />\n        //           <Route path='/deanLecturer/:userId' component={DeanSingleLecturer} />\n        //           <Route exact path='/deanLecturer' component={DeanLecturer} />\n        //           <Route path='/research' component={Research} />\n        //           <Route path='/publications' component={Publications} />\n        //           <Route path='/records' component={Records} />\n        //           <Route path='/adminlecturersetting' component={AdminLecturerSetting} />\n        //  */}\n        \n        //           {/* AllLecturer */}\n        \n        //           {/* <Login /> */}\n        //         </div>\n        \n        \n        \n        //       </HashRouter>\n        \n        );\n\n    }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\n\nReactDOM.render(\n    <Router>\n        <App/>\n    </Router>,\n    document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}