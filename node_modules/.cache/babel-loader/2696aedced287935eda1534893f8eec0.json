{"ast":null,"code":"// import React, { Component } from 'react';\n// import Header from '../../../partials/header';\n// import Navbar from '../../../partials/navbar'\n// import BreadCrumb from '../../../partials/breadcrumb'\n// import {fetchAllAuditTrails} from './auditTrails-api'\n// import {Spin,notification,Popconfirm,Table, Divider, Tag} from 'antd';\n// import AuditTrailTable from '../../../common/AuditTableComponent'\n// class AuditTrailPage extends Component  {\n//     constructor(props) {\n//         super(props);\n//         this.state={\n//             auditTrails:[],\n//             isloading:true\n//         }\n//             // this.onsubmitDrug = this.onsubmitDrug.bind(this);\n//             // this.deleteDrug = this.deleteDrug.bind(this);\n//     }\n//     componentDidMount(){\n//         this.getAllAuditTrails()\n//     }\n//     getLegalStatusTag = (legal_status)=>{\n//         let clazzName = \"badge badge-primary\"\n//         if(legal_status==\"LEGAL\"){\n//             clazzName=\"badge badge-success\"\n//         }\n//         else if(legal_status==\"ILLEGAL\"){\n//             clazzName=\"badge badge-danger\"\n//         }\n//         return (\n//             <span className={clazzName}>\n//                 {legal_status}\n//             </span>\n//         );\n//     }\n//     formatUserForTableDisplay=(user)=>{\n//         let fullname =\"\"\n//         if(user != null ){\n//             fullname=\"dfg\"\n//         //    fullname = `${user.firstName} ${user.lastName}` ;\n//         }\n//         return(\n//             <span>\n//                    {fullname}\n//             </span>\n//         )\n//     }\n//     getTableHeader = ()=>{\n//         const columns = [\n//             {\n//               title: 'Fuller Name',\n//               dataIndex: 'user',\n//               key: 'user',\n//               render: user => (\n//                  this.formatUserForTableDisplay(user)\n//               )\n//             },\n//             {\n//               title: 'Email',\n//               dataIndex: 'email',\n//               key: 'email',\n//             },\n//             {\n//               title: 'Request',\n//               dataIndex: 'request',\n//               key: 'request',\n//             },\n//             {\n//                 title: 'Target Url',\n//                 dataIndex: 'target_url',\n//                 key: 'target_url',\n//             },\n//             {\n//                 title: 'ip',\n//                 dataIndex: 'ip',\n//                 key: 'ip',\n//             },\n//             {\n//                 title: 'Legal Status',\n//                 dataIndex: 'legal_status',\n//                 key: 'legal_status',\n//                 render: legal_status => (\n//                     <span>\n//                         {this.getLegalStatusTag(legal_status)}\n//                     </span>\n//                   ),\n//             },\n//             {\n//                 title: 'Action',\n//                 dataIndex: 'action',\n//                 key: 'action',\n//             },\n//           ];\n//           return columns\n//     }\n//     // onsubmitDrug = (e) => {\n//     //     e.preventDefault();\n//     //     this.setState({isloading:true})\n//     //     this.props.form.validateFields((err, values) => {\n//     //         if (!err) {\n//     //             console.log(values);\n//     //             createDrug(values)\n//     //             .then(response =>{\n//     //                 console.log(response.data);\n//     //                 if(response.data){\n//     //                     notification['success']({\n//     //                         message: 'MEDTHREAT',\n//     //                         description:\n//     //                           'Drug Created Successfully',\n//     //                       });\n//     //                     this.props.form.resetFields();\n//     //                     this.getAllDrugs()\n//     //                 }\n//     //             })\n//     //             .catch((error)=> {\n//     //                 console.log(\"Drug Error Response\");\n//     //                 notification['error']({\n//     //                 message: 'MEDTHREAT',\n//     //                 description:\n//     //                     `Error Occured Creating Drug .`,\n//     //                 });\n//     //                 this.setState({isloading:false})\n//     //                 console.log(error.response.status);\n//     //             });\n//     //         }\n//     //     });\n//     // }\n//     getAllAuditTrails = () =>{\n//         this.setState({isloading:true})\n//         fetchAllAuditTrails()\n//         .then(response=>{\n//             console.log(\"drug Response\");\n//             console.log(response.data)\n//             this.setState({auditTrails:response.data})\n//             this.setState({isloading:false})\n//         })\n//         .catch((error)=> {\n//             console.log(\"drug Error Response\");\n//             notification['error']({\n//             message: 'MEDTHREAT',\n//             description:\n//                 `An Error Fetching Drug .`,\n//             });\n//             console.log(error.response);\n//         });\n//     }\n//     deleteDrug = (id)=>{\n//         console.log( id)\n//     }\n//     cancelDrug = ()=>{\n//     }\n//     mapDrugTables = () =>{\n//         let items = <tr style={{ width: '100%' }} className=\"col-md-12\" >No drug</tr>\n//         if (this.state.drugs) {\n//             items = this.state.drugs.map(drug => {\n//               return (\n//                 <tr key={drug.id}>\n//                     <td>{drug.name}</td>\n//                     <td>{drug.amount}</td>\n//                     <td>{drug.alias}</td>\n//                     <td>\n//                     <Popconfirm\n//                         title=\"Are you sure delete this Item?\"\n//                         onConfirm={(e)=>this.deleteDrug(drug)}\n//                         onCancel={this.cancelDrug()}\n//                         okText=\"Yes\"\n//                         cancelText=\"No\"\n//                     >\n//                         <a href=\"#\" style={{margin:'5px'}} >Delete</a>\n//                         {/* <a style={{margin:'5px'}} type=\"button\" class=\"btn btn-primary\">Update</a>     */}\n//                     </Popconfirm>\n//                         <button type=\"button\" class=\"btn btn-primary btn-sm\">Delete</button>\n//                             {/* <Button className='m-1' color=\"primary\" size=\"xs\"\n//                                 onClick={() => { this.setPublicationUpdate(item) }}>\n//                                 Update\n//                             </Button> */}\n//                             {/* <Button className='m-1' color=\"danger\" size=\"xs\"\n//                                 onClick={() => { this.deleteItem(item) }}>\n//                                 Delete\n//                             </Button> */}\n//                     </td>  \n//                 </tr>\n//               )\n//             });\n//         }\n//         return items;\n//     }\n//   render() {\n//     const bodystyle =  {\n//         background: \"#f1f2f7\",\n//         display: \"table\",\n//         fontFamily: \"'Open Sans' sans-serif !important\",\n//         fontSize: \"16px\",\n//         width: \"100%\" }\n//     return (\n//         <div style={bodystyle}>\n//         {/* <!-- Left Panel --> */}\n//             <Navbar></Navbar>\n//             {/* <!-- /#left-panel --> */}\n//             {/* <!-- Left Panel --> */}\n//             {/* <!-- Right Panel --> */}\n//             <div  class=\"right-panel \">\n//                 <Header></Header>\n//                 {/* <!-- /header --> */}\n//                 {/* <!-- Header--> */}\n//                 <BreadCrumb menu=\"Audit Trail\" submenu=\" \"></BreadCrumb>\n//                 <div class=\"content mt-3\">\n//                     <div class=\"animated fadeIn\">\n//                         <Spin spinning={this.state.isloading}>\n//                             {/* Table for drugs */}\n//                             <div class=\"row\">\n//                             <div className=\"col-md-12\">\n//                                 <AuditTrailTable auditTrails={this.state.auditTrails}></AuditTrailTable>\n//                                 {/* <div className=\"card\">\n//                                     <div className=\"card-header\">\n//                                         <strong className=\"card-title\">Data Table</strong>\n//                                     </div>\n//                                     <div className=\"card-body\">\n//                                         <Table columns={this.getTableHeader()} dataSource={this.state.auditTrails} />\n//                                     </div>\n//                                 </div> */}\n//                             </div>\n//                         </div>\n//                         </Spin>\n//                     </div>\n//                 </div>\n//                 {/* <!-- .content --> */}\n//             </div>\n//             {/* <!-- /#right-panel --> */}\n//             {/* <!-- Right Panel --> */}\n//         </div>\n//     );\n//   }\n// }\n// export default AuditTrailPage;","map":{"version":3,"sources":["/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/src/pages/doctor/auditTrail/auditTrail.js"],"names":[],"mappingssourcesContent":["// import React, { Component } from 'react';\n// import Header from '../../../partials/header';\n// import Navbar from '../../../partials/navbar'\n// import BreadCrumb from '../../../partials/breadcrumb'\n// import {fetchAllAuditTrails} from './auditTrails-api'\n// import {Spin,notification,Popconfirm,Table, Divider, Tag} from 'antd';\n// import AuditTrailTable from '../../../common/AuditTableComponent'\n\n// class AuditTrailPage extends Component  {\n//     constructor(props) {\n//         super(props);\n//         this.state={\n//             auditTrails:[],\n//             isloading:true\n//         }\n//             // this.onsubmitDrug = this.onsubmitDrug.bind(this);\n//             // this.deleteDrug = this.deleteDrug.bind(this);\n\n//     }\n\n//     componentDidMount(){\n\n//         this.getAllAuditTrails()\n//     }\n     \n\n//     getLegalStatusTag = (legal_status)=>{\n//         let clazzName = \"badge badge-primary\"\n//         if(legal_status==\"LEGAL\"){\n//             clazzName=\"badge badge-success\"\n//         }\n//         else if(legal_status==\"ILLEGAL\"){\n//             clazzName=\"badge badge-danger\"\n//         }\n        \n//         return (\n//             <span className={clazzName}>\n//                 {legal_status}\n//             </span>\n//         );\n        \n                        \n//     }\n\n//     formatUserForTableDisplay=(user)=>{\n//         let fullname =\"\"\n//         if(user != null ){\n//             fullname=\"dfg\"\n//         //    fullname = `${user.firstName} ${user.lastName}` ;\n//         }\n\n//         return(\n//             <span>\n                    \n//                    {fullname}\n                           \n//             </span>\n//         )\n\n//     }\n//     getTableHeader = ()=>{\n//         const columns = [\n//             {\n//               title: 'Fuller Name',\n//               dataIndex: 'user',\n//               key: 'user',\n//               render: user => (\n//                  this.formatUserForTableDisplay(user)\n//               )\n//             },\n//             {\n//               title: 'Email',\n//               dataIndex: 'email',\n//               key: 'email',\n//             },\n//             {\n//               title: 'Request',\n//               dataIndex: 'request',\n//               key: 'request',\n//             },\n//             {\n//                 title: 'Target Url',\n//                 dataIndex: 'target_url',\n//                 key: 'target_url',\n//             },\n\n//             {\n//                 title: 'ip',\n//                 dataIndex: 'ip',\n//                 key: 'ip',\n//             },\n            \n//             {\n//                 title: 'Legal Status',\n//                 dataIndex: 'legal_status',\n//                 key: 'legal_status',\n//                 render: legal_status => (\n//                     <span>\n//                         {this.getLegalStatusTag(legal_status)}\n                        \n                      \n//                     </span>\n//                   ),\n//             },\n           \n//             {\n//                 title: 'Action',\n//                 dataIndex: 'action',\n//                 key: 'action',\n//             },\n//           ];\n\n//           return columns\n//     }\n\n    \n//     // onsubmitDrug = (e) => {\n//     //     e.preventDefault();\n//     //     this.setState({isloading:true})\n//     //     this.props.form.validateFields((err, values) => {\n//     //         if (!err) {\n//     //             console.log(values);\n//     //             createDrug(values)\n//     //             .then(response =>{\n//     //                 console.log(response.data);\n//     //                 if(response.data){\n//     //                     notification['success']({\n//     //                         message: 'MEDTHREAT',\n//     //                         description:\n//     //                           'Drug Created Successfully',\n//     //                       });\n//     //                     this.props.form.resetFields();\n//     //                     this.getAllDrugs()\n//     //                 }\n//     //             })\n//     //             .catch((error)=> {\n//     //                 console.log(\"Drug Error Response\");\n              \n//     //                 notification['error']({\n//     //                 message: 'MEDTHREAT',\n//     //                 description:\n//     //                     `Error Occured Creating Drug .`,\n//     //                 });\n//     //                 this.setState({isloading:false})\n//     //                 console.log(error.response.status);\n        \n//     //             });\n//     //         }\n//     //     });\n//     // }\n\n//     getAllAuditTrails = () =>{\n//         this.setState({isloading:true})\n//         fetchAllAuditTrails()\n//         .then(response=>{\n//             console.log(\"drug Response\");\n//             console.log(response.data)\n//             this.setState({auditTrails:response.data})\n//             this.setState({isloading:false})\n//         })\n//         .catch((error)=> {\n//             console.log(\"drug Error Response\");\n      \n//             notification['error']({\n//             message: 'MEDTHREAT',\n//             description:\n//                 `An Error Fetching Drug .`,\n//             });\n            \n//             console.log(error.response);\n\n//         });\n//     }\n\n//     deleteDrug = (id)=>{\n//         console.log( id)\n\n//     }\n//     cancelDrug = ()=>{\n\n//     }\n\n//     mapDrugTables = () =>{\n//         let items = <tr style={{ width: '100%' }} className=\"col-md-12\" >No drug</tr>\n\n//         if (this.state.drugs) {\n\n//             items = this.state.drugs.map(drug => {\n//               return (\n//                 <tr key={drug.id}>\n//                     <td>{drug.name}</td>\n//                     <td>{drug.amount}</td>\n//                     <td>{drug.alias}</td>\n//                     <td>\n//                     <Popconfirm\n//                         title=\"Are you sure delete this Item?\"\n//                         onConfirm={(e)=>this.deleteDrug(drug)}\n//                         onCancel={this.cancelDrug()}\n//                         okText=\"Yes\"\n//                         cancelText=\"No\"\n//                     >\n//                         <a href=\"#\" style={{margin:'5px'}} >Delete</a>\n//                         {/* <a style={{margin:'5px'}} type=\"button\" class=\"btn btn-primary\">Update</a>     */}\n//                     </Popconfirm>\n//                         <button type=\"button\" class=\"btn btn-primary btn-sm\">Delete</button>\n\n//                             {/* <Button className='m-1' color=\"primary\" size=\"xs\"\n//                                 onClick={() => { this.setPublicationUpdate(item) }}>\n//                                 Update\n//                             </Button> */}\n//                             {/* <Button className='m-1' color=\"danger\" size=\"xs\"\n//                                 onClick={() => { this.deleteItem(item) }}>\n//                                 Delete\n//                             </Button> */}\n//                     </td>  \n//                 </tr>\n//               )\n//             });\n//         }\n\n//         return items;\n\n//     }\n\n//   render() {\n//     const bodystyle =  {\n//         background: \"#f1f2f7\",\n//         display: \"table\",\n//         fontFamily: \"'Open Sans' sans-serif !important\",\n//         fontSize: \"16px\",\n//         width: \"100%\" }\n\n//     return (\n//         <div style={bodystyle}>\n//         {/* <!-- Left Panel --> */}\n\n//             <Navbar></Navbar>\n//             {/* <!-- /#left-panel --> */}\n//             {/* <!-- Left Panel --> */}\n\n//             {/* <!-- Right Panel --> */}\n\n//             <div  class=\"right-panel \">\n//                 <Header></Header>\n//                 {/* <!-- /header --> */}\n//                 {/* <!-- Header--> */}\n\n//                 <BreadCrumb menu=\"Audit Trail\" submenu=\" \"></BreadCrumb>\n\n//                 <div class=\"content mt-3\">\n                    \n//                     <div class=\"animated fadeIn\">\n//                         <Spin spinning={this.state.isloading}>\n\n//                             {/* Table for drugs */}\n//                             <div class=\"row\">\n\n//                             <div className=\"col-md-12\">\n\n//                                 <AuditTrailTable auditTrails={this.state.auditTrails}></AuditTrailTable>\n                                \n//                                 {/* <div className=\"card\">\n//                                     <div className=\"card-header\">\n//                                         <strong className=\"card-title\">Data Table</strong>\n//                                     </div>\n//                                     <div className=\"card-body\">\n//                                         <Table columns={this.getTableHeader()} dataSource={this.state.auditTrails} />\n//                                     </div>\n                                    \n//                                 </div> */}\n//                             </div>\n\n\n//                         </div>\n\n//                         </Spin>\n\n//                     </div>\n//                 </div>\n//                 {/* <!-- .content --> */}\n//             </div>\n//             {/* <!-- /#right-panel --> */}\n\n//             {/* <!-- Right Panel --> */}\n//         </div>\n//     );\n//   }\n// }\n\n// export default AuditTrailPage;\n"]},"metadata":{},"sourceType":"module"}