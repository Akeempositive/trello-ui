{"ast":null,"code":"import _objectSpread from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/src/common/private/private.js\";\nimport React, { Component } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport Dashboard from '../../pages/doctor/dashboardpage/dashboard';\nimport Drugpage from '../../pages/doctor/drugpage/drug';\n\nvar PrivateRoute =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PrivateRoute, _Component);\n\n  function PrivateRoute(props) {\n    var _this;\n\n    _classCallCheck(this, PrivateRoute);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PrivateRoute).call(this, props));\n\n    _this.onSubmitExperience = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          var loginRequest = Object.assign({}, values);\n          console.log(values);\n          var loginRequests = values;\n          console.log(loginRequest);\n          loginRequest.data = {};\n          console.log(loginRequest);\n\n          var logReq = _objectSpread({}, values);\n\n          console.log(logReq); // login(values)\n          // .then(response=>{\n          //     console.log(response);\n          //     notification['success']({\n          //         message: 'MEDTHREAT',\n          //         description:\n          //           'Successfully Logged In.',\n          //       });\n          //     this.props.form.resetFields();\n          //     // this.setState({redirectMe: {\n          //     //     status:true,\n          //     //     path:'/dashboard'\n          //     //     }\n          //     // })\n          //     this.setRoute(\"dashboard\")\n          // }).\n          // catch((error)=> {\n          //     if(error.response){\n          //       console.log(error.response);\n          //       if(error.response.status == 400){\n          //         notification['error']({\n          //             message: 'MEDTHREAT',\n          //             description:\n          //               `Username/Password Incorrect.`,\n          //           });\n          //             console.log(error.response.status);\n          //       }else{\n          //         notification['error']({\n          //             message: 'MEDTHREAT',\n          //             description:\n          //               `An Error occured .`,\n          //           });\n          //         console.log(error.response.status);\n          //       }\n          //     }\n          // });\n        }\n      });\n    };\n\n    _this.setRoute = function (path) {\n      _this.setState({\n        redirectMe: {\n          status: true,\n          path: \"/\".concat(path)\n        }\n      });\n    };\n\n    _this.state = {\n      redirectMe: {\n        status: false,\n        path: ''\n      }\n    };\n    _this.onSubmitExperience = _this.onSubmitExperience.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(PrivateRoute, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.redirectMe.status) {\n        console.log(\"Reiercting\");\n        return React.createElement(Redirect, {\n          to: this.state.redirectMe.path,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/dashboard\",\n        component: Dashboard,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/drug\",\n        component: Drugpage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PrivateRoute;\n}(Component);\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/src/common/private/private.js"],"names":["React","Component","Redirect","Route","Dashboard","Drugpage","PrivateRoute","props","onSubmitExperience","e","preventDefault","form","validateFields","err","values","loginRequest","Object","assign","console","log","loginRequests","data","logReq","setRoute","path","setState","redirectMe","status","state","bind"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AAOA,OAAOC,SAAP,MAAsB,4CAAtB;AACA,OAAOC,QAAP,MAAqB,kCAArB;;IAEMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,KAAN;;AADe,UAYnBC,kBAZmB,GAYE,UAACC,CAAD,EAAO;AACxBA,MAAAA,CAAC,CAACC,cAAF;;AAEA,YAAKH,KAAL,CAAWI,IAAX,CAAgBC,cAAhB,CAA+B,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAC5C,YAAI,CAACD,GAAL,EAAU;AACN,cAAME,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,MAAlB,CAArB;AACAI,UAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,cAAIM,aAAa,GAACN,MAAlB;AACAI,UAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;AACAA,UAAAA,YAAY,CAACM,IAAb,GAAkB,EAAlB;AACAH,UAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;;AACA,cAAMO,MAAM,qBAAOR,MAAP,CAAZ;;AACAI,UAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ,EARM,CASN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEH;AACJ,OAnDD;AAoDH,KAnEkB;;AAAA,UAoEnBC,QApEmB,GAoEV,UAACC,IAAD,EAAQ;AACb,YAAKC,QAAL,CAAc;AAACC,QAAAA,UAAU,EAAE;AACnBC,UAAAA,MAAM,EAAC,IADY;AAEnBH,UAAAA,IAAI,aAAKA,IAAL;AAFe;AAAb,OAAd;AAKH,KA1EkB;;AAEf,UAAKI,KAAL,GAAa;AACTF,MAAAA,UAAU,EAAE;AACRC,QAAAA,MAAM,EAAC,KADC;AAERH,QAAAA,IAAI,EAAC;AAFG;AADH,KAAb;AAMA,UAAKhB,kBAAL,GAA0B,MAAKA,kBAAL,CAAwBqB,IAAxB,uDAA1B;AARe;AAUlB;;;;6BAkEM;AACP,UAAG,KAAKD,KAAL,CAAWF,UAAX,CAAsBC,MAAzB,EAAgC;AAC5BT,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE,KAAKS,KAAL,CAAWF,UAAX,CAAsBF,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAED,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,YAAlB;AAA+B,QAAA,SAAS,EAAEpB,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,OAAlB;AAA0B,QAAA,SAAS,EAAEC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ;AAMD;;;;EAzFwBJ,S;;AA4F3B,eAAeK,YAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport {\n    Form,\n    Input,\n    Icon,\n    notification\n  } from 'antd';\nimport Dashboard from '../../pages/doctor/dashboardpage/dashboard'\nimport Drugpage from '../../pages/doctor/drugpage/drug'\n\nclass PrivateRoute extends Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirectMe: {\n                status:false,\n                path:''\n            }\n           }\n        this.onSubmitExperience = this.onSubmitExperience.bind(this);\n\n    }\n\n    onSubmitExperience = (e) => {\n        e.preventDefault();\n\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                const loginRequest = Object.assign({}, values);\n                console.log(values);\n                let loginRequests=values;\n                console.log(loginRequest);\n                loginRequest.data={};\n                console.log(loginRequest);\n                const logReq = {...values};\n                console.log(logReq);\n                // login(values)\n                // .then(response=>{\n                //     console.log(response);\n                //     notification['success']({\n                //         message: 'MEDTHREAT',\n                //         description:\n                //           'Successfully Logged In.',\n                //       });\n\n\n                //     this.props.form.resetFields();\n                //     // this.setState({redirectMe: {\n                //     //     status:true,\n                //     //     path:'/dashboard'\n                //     //     }\n                //     // })\n                //     this.setRoute(\"dashboard\")\n                // }).\n                // catch((error)=> {\n                //     if(error.response){\n                //       console.log(error.response);\n                //       if(error.response.status == 400){\n                //         notification['error']({\n                //             message: 'MEDTHREAT',\n                //             description:\n                //               `Username/Password Incorrect.`,\n                //           });\n                //             console.log(error.response.status);\n                //       }else{\n                //         notification['error']({\n                //             message: 'MEDTHREAT',\n                //             description:\n                //               `An Error occured .`,\n                //           });\n                          \n                //         console.log(error.response.status);\n                //       }\n                //     }\n                // });\n        \n            }\n        });\n    }\n    setRoute=(path)=>{\n        this.setState({redirectMe: {\n                status:true,\n                path:`/${path}`\n            }\n        })\n    }\n\n  render() {\n    if(this.state.redirectMe.status){\n        console.log(\"Reiercting\");\n        return <Redirect to={this.state.redirectMe.path} />\n    }\n\n    return (\n        <div>\n            <Route exact path='/dashboard' component={Dashboard} />\n            <Route exact path='/drug' component={Drugpage} />\n        </div>\n    );\n  }\n}\n\nexport default PrivateRoute;"]},"metadata":{},"sourceType":"module"}