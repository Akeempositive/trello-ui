{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Positive\\\\Documents\\\\Projects\\\\trello-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport axios from 'axios';\nimport { APP_ACCESS_TOKEN, FORBIDDEN_COUNT, APP_CLIENT, APP_PASS, GETMETHOD, POSTMETHOD, PUTMETHOD, USER_ACCESS_TOKEN, USER_AUTHORITIES, USER_TOKEN_EXPIRATION, TOKEN_DATE, DELETEMETHOD } from '../constants';\nimport jwtDecode from \"jwt-decode\";\nexport var axiosRequest = function axiosRequest(options) {\n  var setHeader = {};\n\n  if (options.useBasic) {\n    var tempHeaders = {\n      Authorization: \"\".concat(getBasicAuth(APP_CLIENT, APP_PASS))\n    };\n    setHeader = _objectSpread({}, setHeader, tempHeaders);\n  }\n\n  if (options.useAppAccessToken && localStorage.getItem(APP_ACCESS_TOKEN)) {\n    var _tempHeaders = {\n      Authorization: \"Bearer \".concat(localStorage.getItem(APP_ACCESS_TOKEN))\n    };\n    setHeader = _objectSpread({}, setHeader, _tempHeaders);\n  }\n\n  if (options.userAccessToken && localStorage.getItem(USER_ACCESS_TOKEN)) {\n    var _tempHeaders2 = {\n      Authorization: \"Bearer \".concat(localStorage.getItem(USER_ACCESS_TOKEN))\n    };\n    setHeader = _objectSpread({}, setHeader, _tempHeaders2);\n  }\n\n  if (options.headerType) {\n    var _tempHeaders3 = {\n      'Content-Type': options.headerType\n    };\n    setHeader = _objectSpread({}, setHeader, _tempHeaders3);\n  } // if(options.useClientToken){\n  //     let tempHeaders={Authorization:`Bearer ${getClientToken()}`}\n  //     setHeader = {...setHeader, ...tempHeaders}\n  // }\n\n\n  options.headerRequest = {\n    headers: setHeader\n  };\n\n  if (options.headerTypeData) {\n    options.headerRequest.data = {};\n  }\n\n  console.log(\"options.headerRequest\");\n  console.log(options.headerRequest);\n  var apiRequest = null;\n\n  switch (options.method) {\n    case GETMETHOD:\n      apiRequest = axios.get(options.url, options.headerRequest);\n      break;\n\n    case POSTMETHOD:\n      apiRequest = axios.post(options.url, options.data, options.headerRequest);\n      break;\n\n    case PUTMETHOD:\n      apiRequest = axios.put(options.url, options.data, options.headerRequest);\n      break;\n\n    case DELETEMETHOD:\n      apiRequest = axios.delete(options.url, options.headerRequest);\n      break;\n\n    default:\n      apiRequest = null;\n  } // console.log(\"apiRequest\")\n  // console.log(apiRequest);\n\n\n  checkifStatusIsForbidden(apiRequest);\n  return apiRequest;\n};\n\nvar checkifStatusIsForbidden = function checkifStatusIsForbidden(response) {\n  response.then(function (response) {}).catch(function (error) {\n    console.log(\"checkifStatusIsForbidden\");\n\n    if (error.response && error.response.status && error.response.status == 403) {\n      var count = 0;\n\n      if (localStorage.getItem(FORBIDDEN_COUNT)) {\n        count = parseInt(localStorage.getItem(FORBIDDEN_COUNT));\n      }\n\n      ;\n      count = count + 1;\n      localStorage.setItem(FORBIDDEN_COUNT, count);\n    } // localStorage.setItem()\n    // console.log(error.response.status || 'Not Available');\n\n  });\n};\n\nvar getBasicAuth = function getBasicAuth(username, password) {\n  var hash = new Buffer(username + ':' + password).toString('base64');\n  console.log(hash);\n  return \"Basic \" + hash;\n};\n\nexport var axiosLoginRequest = function axiosLoginRequest(options) {\n  var setHeader = {};\n\n  if (options.useBasic) {\n    var tempHeaders = {\n      \"Authorization\": \"\".concat(getBasicAuth(APP_CLIENT, APP_PASS))\n    };\n    setHeader = _objectSpread({}, setHeader, tempHeaders);\n  }\n\n  if (options.headerType) {\n    var _tempHeaders4 = {\n      'Content-Type': options.headerType\n    };\n    setHeader = _objectSpread({}, setHeader, _tempHeaders4);\n  }\n\n  var basic = getBasicAuth(APP_CLIENT, APP_PASS);\n  var head = {\n    headers: {\n      \"Authorization\": basic,\n      'Content-Type': \"application/x-www-form-urlencoded\"\n    },\n    data: {} // options.headerRequest = {headers:setHeader, data:{}}\n    // options.headerRequest.data = {}\n\n  };\n  console.log(\"options.headerRequest\");\n  console.log(head);\n  var apiRequest = axios.post(options.url, options.data, head);\n  return apiRequest;\n};\nexport var storeJwtAccessToken = function storeJwtAccessToken(accessToken) {\n  localStorage.setItem(USER_ACCESS_TOKEN, accessToken);\n  var decodedToken = jwtDecode(accessToken);\n  localStorage.setItem(USER_AUTHORITIES, decodedToken.authorities);\n};\nexport var storeJwtExpireToken = function storeJwtExpireToken(tokenExpirationTime) {\n  localStorage.setItem(TOKEN_DATE, Date.now());\n  localStorage.setItem(USER_TOKEN_EXPIRATION, tokenExpirationTime);\n};\nexport var isUserAuthenticated = function isUserAuthenticated() {\n  // let accessToken = localStorage.getItem(USER_ACCESS_TOKEN);\n  if (localStorage.getItem(USER_ACCESS_TOKEN) == null) {\n    console.log(\"false\");\n    return false;\n  } else if (localStorage.getItem(USER_ACCESS_TOKEN)) {\n    var startDate = localStorage.getItem(TOKEN_DATE);\n    var endDate = Date.now();\n    var timeExpiration = localStorage.getItem(USER_TOKEN_EXPIRATION);\n    console.log(\"TimeExpiration\");\n    console.log(timeExpiration);\n    var timeDifference = endDate - startDate;\n    var timeDifferenceInSeconds = timeDifference / 1000;\n    console.log(\"TimeDifferenceInSeconds\");\n    console.log(timeDifferenceInSeconds);\n\n    if (timeDifferenceInSeconds > timeExpiration) {\n      return false;\n    }\n\n    return true;\n  }\n\n  return false;\n};\nexport var hasAuthority = function hasAuthority(requiredAuthorities) {\n  var assignedAuthority = localStorage.getItem(USER_AUTHORITIES); // console.log(\"assignedAuthority\")\n  // console.log(assignedAuthority)\n\n  assignedAuthority = assignedAuthority.split(\",\"); // console.log(\"assignedAuthority in split format\")\n  // console.log(assignedAuthority)\n\n  var truthvalue = false;\n  requiredAuthorities.forEach(function (authority) {\n    if (assignedAuthority.includes(authority)) {\n      truthvalue = true;\n      return;\n    }\n  });\n  return truthvalue;\n};\nexport var getForbiddenCount = function getForbiddenCount(redirect) {\n  // this.props.history.push(`/single-user/${record.id}`)\n  if (localStorage.getItem(FORBIDDEN_COUNT)) {\n    var count = parseInt(localStorage.getItem(FORBIDDEN_COUNT));\n\n    if (count >= 3) {\n      redirect(\"/\");\n    }\n  }\n\n  ;\n};","map":{"version":3,"sources":["C:\\Users\\Positive\\Documents\\Projects\\trello-ui\\src\\utils\\api-utils.js"],"names":["axios","APP_ACCESS_TOKEN","FORBIDDEN_COUNT","APP_CLIENT","APP_PASS","GETMETHOD","POSTMETHOD","PUTMETHOD","USER_ACCESS_TOKEN","USER_AUTHORITIES","USER_TOKEN_EXPIRATION","TOKEN_DATE","DELETEMETHOD","jwtDecode","axiosRequest","options","setHeader","useBasic","tempHeaders","Authorization","getBasicAuth","useAppAccessToken","localStorage","getItem","userAccessToken","headerType","headerRequest","headers","headerTypeData","data","console","log","apiRequest","method","get","url","post","put","delete","checkifStatusIsForbidden","response","then","catch","error","status","count","parseInt","setItem","username","password","hash","Buffer","toString","axiosLoginRequest","basic","head","storeJwtAccessToken","accessToken","decodedToken","authorities","storeJwtExpireToken","tokenExpirationTime","Date","now","isUserAuthenticated","startDate","endDate","timeExpiration","timeDifference","timeDifferenceInSeconds","hasAuthority","requiredAuthorities","assignedAuthority","split","truthvalue","forEach","authority","includes","getForbiddenCount","redirect"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {APP_ACCESS_TOKEN, FORBIDDEN_COUNT, APP_CLIENT, APP_PASS, GETMETHOD,POSTMETHOD,PUTMETHOD,USER_ACCESS_TOKEN,USER_AUTHORITIES,USER_TOKEN_EXPIRATION,TOKEN_DATE, DELETEMETHOD} from '../constants'\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\n export const axiosRequest = options =>{\r\n    let setHeader = {}\r\n    \r\n\r\n    if (options.useBasic) {\r\n        let tempHeaders={Authorization:`${getBasicAuth(APP_CLIENT, APP_PASS)}`}\r\n        setHeader = {...setHeader, ...tempHeaders}\r\n    }\r\n\r\n    if (options.useAppAccessToken && localStorage.getItem(APP_ACCESS_TOKEN)) {\r\n        let tempHeaders = {Authorization:`Bearer ${localStorage.getItem(APP_ACCESS_TOKEN)}`}\r\n        setHeader = {...setHeader, ...tempHeaders}\r\n    }\r\n\r\n    if (options.userAccessToken && localStorage.getItem(USER_ACCESS_TOKEN)) {\r\n        let tempHeaders = {Authorization:`Bearer ${localStorage.getItem(USER_ACCESS_TOKEN)}`}\r\n        setHeader = {...setHeader, ...tempHeaders}\r\n    }\r\n\r\n    if(options.headerType){\r\n        let tempHeaders = {'Content-Type' : options.headerType}\r\n        setHeader = {...setHeader, ...tempHeaders}\r\n    }\r\n\r\n    \r\n\r\n    // if(options.useClientToken){\r\n    //     let tempHeaders={Authorization:`Bearer ${getClientToken()}`}\r\n    //     setHeader = {...setHeader, ...tempHeaders}\r\n    // }\r\n\r\n    options.headerRequest = {headers:setHeader}\r\n    \r\n    if(options.headerTypeData){\r\n        options.headerRequest.data = {}\r\n    }\r\n\r\n    console.log(\"options.headerRequest\");\r\n\r\n    console.log(options.headerRequest);\r\n\r\n    let apiRequest = null;\r\n\r\n    switch (options.method) {\r\n        case GETMETHOD:\r\n            apiRequest = axios.get(options.url,options.headerRequest)\r\n        break;\r\n        \r\n        case POSTMETHOD:\r\n            apiRequest= axios.post(options.url, options.data, options.headerRequest);\r\n        break;\r\n        \r\n        case PUTMETHOD:\r\n            apiRequest= axios.put(options.url, options.data,options.headerRequest);\r\n        break;\r\n\r\n        case DELETEMETHOD:\r\n            apiRequest = axios.delete(options.url,options.headerRequest)\r\n        break;\r\n\r\n        default:\r\n          apiRequest = null;\r\n    }\r\n\r\n    // console.log(\"apiRequest\")\r\n\r\n    // console.log(apiRequest);\r\n\r\n    checkifStatusIsForbidden(apiRequest);\r\n\r\n    return apiRequest;\r\n\r\n}\r\n\r\nconst checkifStatusIsForbidden = (response)=>{\r\n    response.\r\n    then(response =>{\r\n        \r\n    })\r\n    .catch((error)=> {\r\n        console.log(\"checkifStatusIsForbidden\");\r\n        if(error.response && error.response.status && error.response.status== 403){\r\n            let count=0;\r\n            if(localStorage.getItem(FORBIDDEN_COUNT)){\r\n                count=parseInt(localStorage.getItem(FORBIDDEN_COUNT))\r\n            };\r\n            count = count + 1\r\n            localStorage.setItem(FORBIDDEN_COUNT, count)\r\n        }\r\n        // localStorage.setItem()\r\n       // console.log(error.response.status || 'Not Available');\r\n\r\n    });\r\n}\r\n\r\nconst getBasicAuth = (username, password) => {\r\n    const hash = new Buffer(username + ':' + password).toString('base64');\r\n    console.log(hash);\r\n    return \"Basic \" + hash;\r\n};\r\n\r\nexport const axiosLoginRequest = options =>{\r\n    let setHeader = {}\r\n    \r\n\r\n    if (options.useBasic) {\r\n        let tempHeaders={\"Authorization\":`${getBasicAuth(APP_CLIENT, APP_PASS)}`}\r\n        setHeader = {...setHeader, ...tempHeaders}\r\n    }\r\n\r\n    \r\n    if(options.headerType){\r\n        let tempHeaders = {'Content-Type' : options.headerType}\r\n        setHeader = {...setHeader, ...tempHeaders}\r\n    }\r\n\r\n    let basic = getBasicAuth(APP_CLIENT, APP_PASS)\r\n    let head = {headers:{\"Authorization\": basic,'Content-Type': \"application/x-www-form-urlencoded\"}, data:{}}\r\n    // options.headerRequest = {headers:setHeader, data:{}}\r\n    // options.headerRequest.data = {}\r\n\r\n    console.log(\"options.headerRequest\");\r\n\r\n    console.log(head);\r\n\r\n    let apiRequest= axios.post(options.url, options.data, head);\r\n\r\n    return apiRequest;\r\n\r\n}\r\n\r\nexport const storeJwtAccessToken = (accessToken)=>{\r\n    localStorage.setItem(USER_ACCESS_TOKEN, accessToken);\r\n    let decodedToken = jwtDecode(accessToken);\r\n    localStorage.setItem(USER_AUTHORITIES,decodedToken.authorities)\r\n\r\n}\r\nexport const storeJwtExpireToken = (tokenExpirationTime) =>{\r\n    localStorage.setItem(TOKEN_DATE, Date.now())\r\n    localStorage.setItem(USER_TOKEN_EXPIRATION,tokenExpirationTime)  \r\n}\r\n\r\nexport const isUserAuthenticated = () =>{\r\n    // let accessToken = localStorage.getItem(USER_ACCESS_TOKEN);\r\n    if(localStorage.getItem(USER_ACCESS_TOKEN)==null){\r\n        console.log(\"false\")\r\n        return false\r\n    }\r\n    else if(localStorage.getItem(USER_ACCESS_TOKEN)){\r\n        let startDate = localStorage.getItem(TOKEN_DATE);\r\n        let endDate = Date.now();\r\n        let timeExpiration = localStorage.getItem(USER_TOKEN_EXPIRATION);\r\n        console.log(\"TimeExpiration\");\r\n        console.log(timeExpiration)\r\n        let timeDifference = endDate-startDate;\r\n        let timeDifferenceInSeconds = timeDifference/1000\r\n        console.log(\"TimeDifferenceInSeconds\")\r\n        console.log(timeDifferenceInSeconds)\r\n\r\n        if(timeDifferenceInSeconds > timeExpiration){\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    \r\n    return false;\r\n\r\n}\r\n\r\nexport const hasAuthority=(requiredAuthorities)=>{\r\n    let assignedAuthority = localStorage.getItem(USER_AUTHORITIES)\r\n    // console.log(\"assignedAuthority\")\r\n    // console.log(assignedAuthority)\r\n    assignedAuthority = assignedAuthority.split(\",\");\r\n    // console.log(\"assignedAuthority in split format\")\r\n    // console.log(assignedAuthority)\r\n    let truthvalue = false;\r\n    requiredAuthorities.forEach(authority => {\r\n        if(assignedAuthority.includes(authority)){\r\n            truthvalue = true;\r\n            return ;\r\n        }    \r\n     });\r\n     return truthvalue;\r\n}\r\n\r\nexport const getForbiddenCount=(redirect)=>{\r\n    // this.props.history.push(`/single-user/${record.id}`)\r\n    if(localStorage.getItem(FORBIDDEN_COUNT)){\r\n        let count=parseInt(localStorage.getItem(FORBIDDEN_COUNT))\r\n        if(count >= 3){\r\n            redirect(`/`)\r\n        }\r\n    };\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}