{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport _classCallCheck from \"C:\\\\Users\\\\Positive\\\\Documents\\\\Projects\\\\trello-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Positive\\\\Documents\\\\Projects\\\\trello-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Positive\\\\Documents\\\\Projects\\\\trello-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Positive\\\\Documents\\\\Projects\\\\trello-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Positive\\\\Documents\\\\Projects\\\\trello-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"C:\\\\Users\\\\Positive\\\\Documents\\\\Projects\\\\trello-ui\\\\src\\\\pages\\\\weekly-report\\\\index.js\";\nimport React, { Component } from 'react';\nimport Header from '../../partials/header';\nimport Navbar from '../../partials/navbar';\nimport BreadCrumb from '../../partials/breadcrumb';\nimport { fetchAllUsers, unBlockUser, blockUser } from './index-api';\nimport { tasks } from '../dashboard/dashboard-datasource'; // import {hasAuthority} from  '../../utils/api-utils'\n\nvar FormItem = _Form.Item;\nvar Option = _Select.Option;\n\nvar WeeklyReportPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(WeeklyReportPage, _Component);\n\n  function WeeklyReportPage(props) {\n    var _this;\n\n    _classCallCheck(this, WeeklyReportPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(WeeklyReportPage).call(this, props));\n\n    _this.getTaskStatus = function (status) {\n      var badge = {};\n\n      if (status == \"COMPLETED\") {\n        badge = {\n          clazz: \"badge badge-success\",\n          display: \"COMPLETED\"\n        };\n      } else if (status == \"PENDING\") {\n        badge = {\n          clazz: \"badge badge-info\",\n          display: \"PENDING\"\n        };\n      } else if (status == \"STARTED\") {\n        badge = {\n          clazz: \"badge badge-primary\",\n          display: \"STARTED\"\n        };\n      } else if (status == \"CANCELLED\") {\n        badge = {\n          clazz: \"badge badge-danger\",\n          display: \"CANCELLED\"\n        };\n      }\n\n      return React.createElement(\"span\", {\n        className: badge.clazz,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, badge.display);\n    };\n\n    _this.getTableHeader = function () {\n      var columns = [{\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name'\n      }, {\n        title: 'Description',\n        dataIndex: 'description',\n        key: 'description'\n      }, {\n        title: 'CurrentStatus',\n        dataIndex: 'status',\n        key: 'status',\n        render: function render(status) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }, _this.getTaskStatus(status));\n        }\n      }, {\n        title: 'Date completed',\n        dataIndex: 'completionDate',\n        key: 'completionDate'\n      }, {\n        title: 'Updated Status',\n        dataIndex: 'updatedStatus',\n        key: 'updatedStatus',\n        render: function render(status) {\n          return React.createElement(_Select, {\n            firstActiveValue: {\n              status: status\n            },\n            style: {\n              width: 120\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, React.createElement(Option, {\n            value: \"COMPLETED\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, \"Completed\"), React.createElement(Option, {\n            value: \"PENDING\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, \"Pending\"), React.createElement(Option, {\n            value: \"STARTED\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, \"Started\"), React.createElement(Option, {\n            value: \"CANCELLED\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }, \"Cancelled\"));\n        }\n      }];\n      return columns;\n    };\n\n    _this.handleChange = function (value) {\n      console.log(\"selected \".concat(value));\n    };\n\n    _this.getAllTask = function () {\n      _this.setState({\n        isloading: true\n      });\n\n      _this.setState({\n        tasks: tasks\n      });\n\n      _this.setState({\n        isloading: false\n      });\n    };\n\n    _this.cancelDrugModal = function (drug) {\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.viewTaskModal = function () {\n      // this.setState({drug})\n      // this.setState({name:{value: drug.name, validateStatus:'success'}})\n      // this.setState({amount:{value: drug.amount, validateStatus:'success'}})\n      // this.setState({alias:{value: drug.alias, validateStatus:'success'}})\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.state = {\n      tasks: [],\n      name: \"\",\n      description: \"\",\n      status: \"\",\n      completionDate: \"\",\n      isloading: true // this.onsubmitDrug = this.onsubmitDrug.bind(this);\n\n    };\n    return _this;\n  }\n\n  _createClass(WeeklyReportPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getAllTask();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var bodystyle = {\n        background: \"#f1f2f7\",\n        display: \"table\",\n        fontFamily: \"'Open Sans' sans-serif !important\",\n        fontSize: \"16px\",\n        width: \"100%\"\n      };\n      return React.createElement(\"div\", {\n        style: bodystyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"right-panel \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(BreadCrumb, {\n        menu: \"User\",\n        submenu: \" \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"content mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        layout: \"inline\",\n        onSubmit: this.handleSubmit,\n        className: \"signup-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(FormItem // label=\"Name\"\n      // validateStatus={this.state.name.validateStatus}\n      // help={this.state.name.errorMsg}\n      , {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(_Input, {\n        size: \"large\",\n        name: \"name\",\n        autoComplete: \"off\",\n        placeholder: \"Task Name name\",\n        value: this.state.name.value,\n        onChange: function onChange(event) {\n          return _this2.handleInputChange(event, _this2.validateInput);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      })), React.createElement(FormItem // label=\"Amount\"\n      // validateStatus={this.state.amount.validateStatus}\n      // help={this.state.amount.errorMsg}\n      , {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(_Input, {\n        size: \"large\",\n        name: \"amount\",\n        autoComplete: \"off\",\n        placeholder: \"Description\",\n        value: this.state.description.value,\n        onChange: function onChange(event) {\n          return _this2.handleInputChange(event, _this2.validateInput);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      })), React.createElement(FormItem // label=\"Alias\"\n      // validateStatus={this.state.alias.validateStatus}\n      // help={this.state.alias.errorMsg}\n      , {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(_Select, {\n        defaultValue: \"jack\",\n        style: {\n          width: 120\n        },\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"jack\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Completed\"), React.createElement(Option, {\n        value: \"lucy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"Pending\"), React.createElement(Option, {\n        value: \"Yiminghe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, \"Started\"), React.createElement(Option, {\n        value: \"Yiminghe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Cancelled\"))), React.createElement(FormItem // label=\"Alias\"\n      // validateStatus={this.state.alias.validateStatus}\n      // help={this.state.alias.errorMsg}\n      , {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(_Input, {\n        size: \"large\",\n        name: \"Target Date\",\n        autoComplete: \"off\",\n        placeholder: \"completion Date\",\n        value: this.state.completionDate.value,\n        onChange: function onChange(event) {\n          return _this2.handleInputChange(event, _this2.validateInput);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      })), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(_Button, {\n        type: \"primary\",\n        icon: \"search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, \"Search\"))))), React.createElement(_Spin, {\n        spinning: this.state.isloading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, \"Data Table\"), React.createElement(\"span\", {\n        className: \"pull-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        onClick: function onClick() {\n          _this2.viewTaskModal();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(_Icon, {\n        type: \"plus-circle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(_Table, {\n        columns: this.getTableHeader(),\n        dataSource: this.state.tasks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(_Modal, {\n        title: \"CReate Task \",\n        visible: this.state.visible,\n        onOk: this.updateDrug // okButtonProps={{ disabled: this.isFormInvalid() }}\n        ,\n        onCancel: this.cancelDrugModal,\n        okText: \"UPDATE\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        onSubmit: this.handleSubmit,\n        className: \"signup-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(FormItem // label=\"Name\"\n      // validateStatus={this.state.name.validateStatus}\n      // help={this.state.name.errorMsg}\n      , {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(_Input, {\n        size: \"large\",\n        name: \"name\",\n        autoComplete: \"off\",\n        placeholder: \"Task Name name\",\n        value: this.state.name.value,\n        onChange: function onChange(event) {\n          return _this2.handleInputChange(event, _this2.validateInput);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      })), React.createElement(FormItem // label=\"Amount\"\n      // validateStatus={this.state.amount.validateStatus}\n      // help={this.state.amount.errorMsg}\n      , {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(_Input, {\n        size: \"large\",\n        name: \"amount\",\n        autoComplete: \"off\",\n        placeholder: \"Description\",\n        value: this.state.description.value,\n        onChange: function onChange(event) {\n          return _this2.handleInputChange(event, _this2.validateInput);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      })), React.createElement(FormItem // label=\"Alias\"\n      // validateStatus={this.state.alias.validateStatus}\n      // help={this.state.alias.errorMsg}\n      , {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(_Select, {\n        defaultValue: \"lucy\",\n        style: {\n          width: 120\n        },\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"jack\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"Completed\"), React.createElement(Option, {\n        value: \"lucy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, \"Pending\"), React.createElement(Option, {\n        value: \"Yiminghe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, \"Started\"), React.createElement(Option, {\n        value: \"gjjjh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"Cancelled\"))), React.createElement(FormItem // label=\"Alias\"\n      // validateStatus={this.state.alias.validateStatus}\n      // help={this.state.alias.errorMsg}\n      , {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, React.createElement(_Input, {\n        size: \"large\",\n        name: \"Target Date\",\n        autoComplete: \"off\",\n        placeholder: \"completion Date\",\n        value: this.state.completionDate.value,\n        onChange: function onChange(event) {\n          return _this2.handleInputChange(event, _this2.validateInput);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }))))))))))));\n    }\n  }]);\n\n  return WeeklyReportPage;\n}(Component);\n\nexport default WeeklyReportPage;","map":{"version":3,"sources":["C:\\Users\\Positive\\Documents\\Projects\\trello-ui\\src\\pages\\weekly-report\\index.js"],"names":["React","Component","Header","Navbar","BreadCrumb","fetchAllUsers","unBlockUser","blockUser","tasks","FormItem","Item","Option","WeeklyReportPage","props","getTaskStatus","status","badge","clazz","display","getTableHeader","columns","title","dataIndex","key","render","width","handleChange","value","console","log","getAllTask","setState","isloading","cancelDrugModal","drug","visible","viewTaskModal","state","name","description","completionDate","bodystyle","background","fontFamily","fontSize","handleSubmit","event","handleInputChange","validateInput","updateDrug"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Header from '../../partials/header';\r\nimport Navbar from '../../partials/navbar'\r\nimport BreadCrumb from '../../partials/breadcrumb'\r\nimport {fetchAllUsers,unBlockUser,blockUser} from './index-api'\r\nimport{tasks} from '../dashboard/dashboard-datasource'\r\n// import {hasAuthority} from  '../../utils/api-utils'\r\n\r\nimport {\r\n    Form,\r\n    Input,\r\n    Tooltip,\r\n    Icon,\r\n    Modal,\r\n    Select,\r\n    Button,\r\n    Row,\r\n    Col,\r\n    Spin,\r\n    notification,Popconfirm,Table, Divider, Tag\r\n  } from 'antd';\r\n\r\nconst FormItem = Form.Item;\r\nconst { Option } = Select;\r\nclass WeeklyReportPage extends Component  {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            tasks:[],\r\n            name:\"\",\r\n            description:\"\",\r\n            status:\"\",\r\n            completionDate:\"\",\r\n            isloading:true\r\n        }\r\n            // this.onsubmitDrug = this.onsubmitDrug.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getAllTask()\r\n    }\r\n\r\n    getTaskStatus = (status)=>{\r\n        let badge ={}\r\n        if(status==\"COMPLETED\"){\r\n            badge = {clazz:\"badge badge-success\", display:\"COMPLETED\"}\r\n        }\r\n        else if(status==\"PENDING\"){\r\n            badge = {clazz:\"badge badge-info\", display:\"PENDING\"}\r\n        }\r\n        else if(status==\"STARTED\"){\r\n            badge = {clazz:\"badge badge-primary\", display:\"STARTED\"}\r\n        }\r\n        else if(status==\"CANCELLED\"){\r\n            badge = {clazz:\"badge badge-danger\", display:\"CANCELLED\"}\r\n        }\r\n        return (\r\n            <span className={badge.clazz}>\r\n                {badge.display}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    getTableHeader = ()=>{\r\n\r\n        const columns = [\r\n            {\r\n              title: 'Name',\r\n              dataIndex: 'name',\r\n              key: 'name',\r\n            },\r\n            {\r\n                title: 'Description',\r\n                dataIndex: 'description',\r\n                key: 'description',\r\n            },\r\n            {\r\n                title: 'CurrentStatus',\r\n                dataIndex: 'status',\r\n                key: 'status',\r\n                render: status => (\r\n                    <span>\r\n                        {this.getTaskStatus(status)}\r\n                    </span>\r\n                  ),\r\n            },\r\n            {\r\n                title: 'Date completed',\r\n                dataIndex: 'completionDate',\r\n                key: 'completionDate',\r\n            },\r\n            {\r\n                title: 'Updated Status',\r\n                dataIndex: 'updatedStatus',\r\n                key: 'updatedStatus',\r\n                render: status => (\r\n                                    <Select firstActiveValue={{status}} style={{ width: 120 }}>\r\n                                          <Option value=\"COMPLETED\" >Completed</Option>\r\n                                          <Option value=\"PENDING\" >Pending</Option>\r\n                                          <Option value=\"STARTED\" >Started</Option>\r\n                                          <Option value=\"CANCELLED\">Cancelled</Option>\r\n                                    </Select>\r\n                                  ),\r\n            }\r\n          ];\r\n\r\n        return columns\r\n    }\r\n\r\n\r\n    handleChange=(value)=>{\r\n        console.log(`selected ${value}`);\r\n    }\r\n\r\n    getAllTask = () =>{\r\n        this.setState({isloading:true})\r\n        this.setState({tasks:tasks});\r\n        this.setState({isloading:false})\r\n    }\r\n\r\n    cancelDrugModal =(drug)=>{\r\n        this.setState({visible:false})\r\n    }\r\n\r\n    viewTaskModal =()=>{\r\n        // this.setState({drug})\r\n        // this.setState({name:{value: drug.name, validateStatus:'success'}})\r\n        // this.setState({amount:{value: drug.amount, validateStatus:'success'}})\r\n        // this.setState({alias:{value: drug.alias, validateStatus:'success'}})\r\n        this.setState({visible:true})\r\n    }\r\n\r\n\r\n\r\n  render() {\r\n    const bodystyle =  {\r\n        background: \"#f1f2f7\",\r\n        display: \"table\",\r\n        fontFamily: \"'Open Sans' sans-serif !important\",\r\n        fontSize: \"16px\",\r\n        width: \"100%\" }\r\n\r\n    return (\r\n        <div style={bodystyle}>\r\n        {/* <!-- Left Panel --> */}\r\n\r\n            <Navbar></Navbar>\r\n            {/* <!-- /#left-panel --> */}\r\n            {/* <!-- Left Panel --> */}\r\n\r\n            {/* <!-- Right Panel --> */}\r\n\r\n            <div  class=\"right-panel \">\r\n                <Header></Header>\r\n                {/* <!-- /header --> */}\r\n                {/* <!-- Header--> */}\r\n\r\n                <BreadCrumb menu=\"User\" submenu=\" \"></BreadCrumb>\r\n\r\n                <div class=\"content mt-3\">\r\n\r\n                    <div class=\"animated fadeIn\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-12\">\r\n                                <Form  layout=\"inline\"onSubmit={this.handleSubmit} className=\"signup-form\">\r\n                                    <FormItem\r\n                                        // label=\"Name\"\r\n                                        // validateStatus={this.state.name.validateStatus}\r\n                                        // help={this.state.name.errorMsg}\r\n                                        >\r\n                                        <Input\r\n                                            size=\"large\"\r\n                                            name=\"name\"\r\n                                            autoComplete=\"off\"\r\n                                            placeholder=\"Task Name name\"\r\n                                            value={this.state.name.value}\r\n                                            onChange={(event) => this.handleInputChange(event, this.validateInput)}/>\r\n                                    </FormItem>\r\n\r\n                                    <FormItem\r\n                                        // label=\"Amount\"\r\n                                        // validateStatus={this.state.amount.validateStatus}\r\n                                        // help={this.state.amount.errorMsg}\r\n                                        >\r\n                                        <Input\r\n                                            size=\"large\"\r\n                                            name=\"amount\"\r\n                                            autoComplete=\"off\"\r\n                                            placeholder=\"Description\"\r\n                                            value={this.state.description.value}\r\n                                            onChange={(event) => this.handleInputChange(event, this.validateInput)}/>\r\n                                    </FormItem>\r\n\r\n                                    <FormItem\r\n                                        // label=\"Alias\"\r\n                                        // validateStatus={this.state.alias.validateStatus}\r\n                                        // help={this.state.alias.errorMsg}\r\n                                        >\r\n                                        <Select defaultValue=\"jack\" style={{ width: 120 }} onChange={this.handleChange}>\r\n                                            <Option value=\"jack\">Completed</Option>\r\n                                            <Option value=\"lucy\">Pending</Option>\r\n                                            <Option value=\"Yiminghe\">Started</Option>\r\n                                            <Option value=\"Yiminghe\">Cancelled</Option>\r\n\r\n                                        </Select>\r\n                                        {/* <Input\r\n                                            size=\"large\"\r\n                                            name=\"alias\"\r\n                                            autoComplete=\"off\"\r\n                                            placeholder=\"status\"\r\n                                            value={this.state.status.value}\r\n                                            onChange={(event) => this.handleInputChange(event, this.validateInput)}/> */}\r\n                                    </FormItem>\r\n\r\n                                    <FormItem\r\n                                        // label=\"Alias\"\r\n                                        // validateStatus={this.state.alias.validateStatus}\r\n                                        // help={this.state.alias.errorMsg}\r\n                                        >\r\n                                        <Input\r\n                                            size=\"large\"\r\n                                            name=\"Target Date\"\r\n                                            autoComplete=\"off\"\r\n                                            placeholder=\"completion Date\"\r\n                                            value={this.state.completionDate.value}\r\n                                            onChange={(event) => this.handleInputChange(event, this.validateInput)}/>\r\n                                    </FormItem>\r\n\r\n                                    <FormItem>\r\n                                        <Button type=\"primary\" icon=\"search\">\r\n                                            Search\r\n                                        </Button>\r\n                                    </FormItem>\r\n\r\n                                </Form>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <Spin spinning={this.state.isloading}>\r\n\r\n                            {/* Table for drugs */}\r\n                            <div class=\"row\">\r\n\r\n\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                        <strong className=\"card-title\">Data Table</strong>\r\n                                        <span className=\"pull-right\">\r\n                                            <a onClick={()=>{this.viewTaskModal()}}><Icon type=\"plus-circle\" /></a>\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <Table columns={this.getTableHeader()} dataSource={this.state.tasks} />\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"col-md-12\">\r\n                                <Modal\r\n                                    title=\"CReate Task \"\r\n                                    visible={this.state.visible}\r\n                                    onOk={this.updateDrug}\r\n                                    // okButtonProps={{ disabled: this.isFormInvalid() }}\r\n                                    onCancel={this.cancelDrugModal}\r\n                                    okText=\"UPDATE\"\r\n                                    >\r\n                                        <div className=\"row\">\r\n                                            <Form onSubmit={this.handleSubmit} className=\"signup-form\">\r\n                                            <FormItem\r\n                                        // label=\"Name\"\r\n                                        // validateStatus={this.state.name.validateStatus}\r\n                                        // help={this.state.name.errorMsg}\r\n                                        >\r\n                                        <Input\r\n                                            size=\"large\"\r\n                                            name=\"name\"\r\n                                            autoComplete=\"off\"\r\n                                            placeholder=\"Task Name name\"\r\n                                            value={this.state.name.value}\r\n                                            onChange={(event) => this.handleInputChange(event, this.validateInput)}/>\r\n                                    </FormItem>\r\n\r\n                                    <FormItem\r\n                                        // label=\"Amount\"\r\n                                        // validateStatus={this.state.amount.validateStatus}\r\n                                        // help={this.state.amount.errorMsg}\r\n                                        >\r\n                                        <Input\r\n                                            size=\"large\"\r\n                                            name=\"amount\"\r\n                                            autoComplete=\"off\"\r\n                                            placeholder=\"Description\"\r\n                                            value={this.state.description.value}\r\n                                            onChange={(event) => this.handleInputChange(event, this.validateInput)}/>\r\n                                    </FormItem>\r\n\r\n                                    <FormItem\r\n                                        // label=\"Alias\"\r\n                                        // validateStatus={this.state.alias.validateStatus}\r\n                                        // help={this.state.alias.errorMsg}\r\n                                        >\r\n                                        <Select defaultValue=\"lucy\" style={{ width: 120 }} onChange={this.handleChange}>\r\n                                        <Option value=\"jack\">Completed</Option>\r\n                                            <Option value=\"lucy\">Pending</Option>\r\n                                            <Option value=\"Yiminghe\">Started</Option>\r\n                                            <Option value=\"gjjjh\">Cancelled</Option>\r\n                                        </Select>\r\n                                        {/* <Input\r\n                                            size=\"large\"\r\n                                            name=\"alias\"\r\n                                            autoComplete=\"off\"\r\n                                            placeholder=\"status\"\r\n                                            value={this.state.status.value}\r\n                                            onChange={(event) => this.handleInputChange(event, this.validateInput)}/> */}\r\n                                    </FormItem>\r\n\r\n                                    <FormItem\r\n                                        // label=\"Alias\"\r\n                                        // validateStatus={this.state.alias.validateStatus}\r\n                                        // help={this.state.alias.errorMsg}\r\n                                        >\r\n                                        <Input\r\n                                            size=\"large\"\r\n                                            name=\"Target Date\"\r\n                                            autoComplete=\"off\"\r\n                                            placeholder=\"completion Date\"\r\n                                            value={this.state.completionDate.value}\r\n                                            onChange={(event) => this.handleInputChange(event, this.validateInput)}/>\r\n                                    </FormItem>\r\n\r\n                                                {/* <FormItem>\r\n                                                    <Button type=\"primary\"\r\n                                                            htmlType=\"submit\"\r\n                                                            size=\"large\"\r\n                                                            className=\"signup-form-button\"\r\n                                                            disabled={this.isFormInvalid()}>Update</Button>\r\n                                                </FormItem> */}\r\n                                            </Form>\r\n                                        </div>\r\n\r\n                                    </Modal>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        </Spin>\r\n\r\n                    </div>\r\n                </div>\r\n                {/* <!-- .content --> */}\r\n            </div>\r\n            {/* <!-- /#right-panel --> */}\r\n\r\n            {/* <!-- Right Panel --> */}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeeklyReportPage;\r\n"]},"metadata":{},"sourceType":"module"}