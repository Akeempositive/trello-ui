{"ast":null,"code":"import \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nimport _objectSpread from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _assertThisInitialized from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/src/pages/login/login.js\";\nimport React, { Component } from 'react';\nimport { login, storeToken } from '../login/login-api';\nimport { Redirect, Link } from 'react-router-dom';\nimport jwtDecode from \"jwt-decode\";\nvar FormItem = _Form.Item;\n\nvar Login =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Login, _Component);\n\n  function Login() {\n    _classCallCheck(this, Login);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Login).apply(this, arguments));\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var AntWrappedLoginForm = _Form.create()(LoginForm);\n\n      return React.createElement(AntWrappedLoginForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nvar LoginForm =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(LoginForm, _Component2);\n\n  function LoginForm(props) {\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginForm).call(this, props));\n\n    _this.onSubmitExperience = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log(values);\n\n          var logReq = _objectSpread({}, values);\n\n          console.log(logReq);\n          login(values).then(function (response) {\n            console.log(Date.now()); // console.log(response);\n            // console.log(response.data.access_token)\n            // console.log(jwtDecode(response.data.access_token));\n\n            storeToken(response.data);\n\n            _notification['success']({\n              message: 'MEDTHREAT',\n              description: 'Successfully Logged In.'\n            });\n\n            _this.props.form.resetFields();\n\n            _this.setRoute(\"dashboard\");\n          }).catch(function (error) {\n            if (error.response) {\n              console.log(error.response);\n\n              if (error.response.status == 400 && error.response.data.error == \"invalid_grant\") {\n                _notification['error']({\n                  message: 'MEDTHREAT',\n                  description: \"This Account Has been Blocked, Contact Administrator.\"\n                });\n              } else if (error.response.status == 400) {\n                _notification['error']({\n                  message: 'MEDTHREAT',\n                  description: \"Username / Password  is Incorrect.\"\n                });\n\n                console.log(error.response.status);\n              } else {\n                _notification['error']({\n                  message: 'MEDTHREAT',\n                  description: \"An Error occured Contact Administrator.\"\n                });\n\n                console.log(error.response.status);\n              }\n            } else {\n              _notification['error']({\n                message: 'MEDTHREAT',\n                description: \"An Error occured Contact Administrator.\"\n              });\n            }\n          });\n        }\n      });\n    };\n\n    _this.setRoute = function (path) {\n      _this.setState({\n        redirectMe: {\n          status: true,\n          path: \"/\".concat(path)\n        }\n      });\n    };\n\n    _this.state = {\n      redirectMe: {\n        status: false,\n        path: ''\n      }\n    };\n    _this.onSubmitExperience = _this.onSubmitExperience.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      localStorage.clear();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.redirectMe.status) {\n        console.log(\"Reiercting\");\n        return React.createElement(Redirect, {\n          to: this.state.redirectMe.path,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        });\n      }\n\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        className: \"bg-dark\",\n        style: {\n          height: \"100vh\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bg-dark sufee-login d-flex align-content-center flex-wrap\",\n        style: {\n          height: \"100%\",\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"index.html\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"align-content\",\n        src: \"/images/logo.png\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmitExperience,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, getFieldDecorator('username', {\n        rules: [{\n          required: true,\n          message: 'Please input your email!'\n        }]\n      })(React.createElement(_Input, {\n        className: \"form-control\",\n        prefix: React.createElement(_Icon, {\n          type: \"user\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152\n          },\n          __self: this\n        }),\n        name: \"username\",\n        placeholder: \" Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"lock\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }),\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }))))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-flat m-b-30 m-t-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Register\")), React.createElement(\"div\", {\n        className: \"register-link m-t-15 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Don't have account ? \", React.createElement(Link, {\n        to: \"/sign-up\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Sign up\")))))))));\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nexport default Login;","map":{"version":3,"sources":["/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/src/pages/login/login.js"],"names":["React","Component","login","storeToken","Redirect","Link","jwtDecode","FormItem","Item","Login","AntWrappedLoginForm","create","LoginForm","props","onSubmitExperience","e","preventDefault","form","validateFields","err","values","console","log","logReq","then","response","Date","now","data","message","description","resetFields","setRoute","catch","error","status","path","setState","redirectMe","state","bind","localStorage","clear","getFieldDecorator","height","display","alignItems","justifyContent","width","rules","required"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,KAAR,EAAcC,UAAd,QAA+B,oBAA/B;AACA,SAASC,QAAT,EAAkBC,IAAlB,QAA8B,kBAA9B;AAeE,OAAOC,SAAP,MAAsB,YAAtB;AAGF,IAAMC,QAAQ,GAAG,MAAKC,IAAtB;;IAEMC,K;;;;;;;;;;;;;6BACO;AACL,UAAMC,mBAAmB,GAAG,MAAKC,MAAL,GAAcC,SAAd,CAA5B;;AACA,aACI,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;;;EANeX,S;;IASdW,S;;;;;AACF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;;AADe,UAenBC,kBAfmB,GAeE,UAACC,CAAD,EAAO;AACxBA,MAAAA,CAAC,CAACC,cAAF;;AAEA,YAAKH,KAAL,CAAWI,IAAX,CAAgBC,cAAhB,CAA+B,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAC5C,YAAI,CAACD,GAAL,EAAU;AACNE,UAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,cAAMG,MAAM,qBAAOH,MAAP,CAAZ;;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYC,MAAZ;AACArB,UAAAA,KAAK,CAACkB,MAAD,CAAL,CACCI,IADD,CACM,UAAAC,QAAQ,EAAE;AACZJ,YAAAA,OAAO,CAACC,GAAR,CAAYI,IAAI,CAACC,GAAL,EAAZ,EADY,CAEZ;AACA;AACA;;AACAxB,YAAAA,UAAU,CAACsB,QAAQ,CAACG,IAAV,CAAV;;AACA,0BAAa,SAAb,EAAwB;AACpBC,cAAAA,OAAO,EAAE,WADW;AAEpBC,cAAAA,WAAW,EACT;AAHkB,aAAxB;;AAKA,kBAAKjB,KAAL,CAAWI,IAAX,CAAgBc,WAAhB;;AACA,kBAAKC,QAAL,CAAc,WAAd;AACH,WAdD,EAeAC,KAfA,CAeM,UAACC,KAAD,EAAU;AACZ,gBAAGA,KAAK,CAACT,QAAT,EAAkB;AAChBJ,cAAAA,OAAO,CAACC,GAAR,CAAYY,KAAK,CAACT,QAAlB;;AACA,kBAAGS,KAAK,CAACT,QAAN,CAAeU,MAAf,IAAuB,GAAvB,IAA8BD,KAAK,CAACT,QAAN,CAAeG,IAAf,CAAoBM,KAApB,IAA2B,eAA5D,EAA4E;AAC1E,8BAAa,OAAb,EAAsB;AAClBL,kBAAAA,OAAO,EAAE,WADS;AAElBC,kBAAAA,WAAW;AAFO,iBAAtB;AAKD,eAND,MAOK,IAAGI,KAAK,CAACT,QAAN,CAAeU,MAAf,IAAyB,GAA5B,EAAiC;AACpC,8BAAa,OAAb,EAAsB;AAClBN,kBAAAA,OAAO,EAAE,WADS;AAElBC,kBAAAA,WAAW;AAFO,iBAAtB;;AAMIT,gBAAAA,OAAO,CAACC,GAAR,CAAYY,KAAK,CAACT,QAAN,CAAeU,MAA3B;AACL,eARI,MAQA;AACH,8BAAa,OAAb,EAAsB;AAClBN,kBAAAA,OAAO,EAAE,WADS;AAElBC,kBAAAA,WAAW;AAFO,iBAAtB;;AAMAT,gBAAAA,OAAO,CAACC,GAAR,CAAYY,KAAK,CAACT,QAAN,CAAeU,MAA3B;AACD;AACF,aA1BD,MA0BK;AACD,4BAAa,OAAb,EAAsB;AAClBN,gBAAAA,OAAO,EAAE,WADS;AAElBC,gBAAAA,WAAW;AAFO,eAAtB;AAKH;AAEJ,WAlDD;AAoDH;AACJ,OA1DD;AA2DH,KA7EkB;;AAAA,UA8EnBE,QA9EmB,GA8EV,UAACI,IAAD,EAAQ;AACb,YAAKC,QAAL,CAAc;AAACC,QAAAA,UAAU,EAAE;AACnBH,UAAAA,MAAM,EAAC,IADY;AAEnBC,UAAAA,IAAI,aAAKA,IAAL;AAFe;AAAb,OAAd;AAKH,KApFkB;;AAEf,UAAKG,KAAL,GAAa;AACTD,MAAAA,UAAU,EAAE;AACRH,QAAAA,MAAM,EAAC,KADC;AAERC,QAAAA,IAAI,EAAC;AAFG;AADH,KAAb;AAMA,UAAKtB,kBAAL,GAA0B,MAAKA,kBAAL,CAAwB0B,IAAxB,uDAA1B;AARe;AAUlB;;;;wCACkB;AACfC,MAAAA,YAAY,CAACC,KAAb;AACH;;;6BAyEM;AACP,UAAG,KAAKH,KAAL,CAAWD,UAAX,CAAsBH,MAAzB,EAAgC;AAC5Bd,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAE,KAAKiB,KAAL,CAAWD,UAAX,CAAsBF,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAJM,UAKAO,iBALA,GAKqB,KAAK9B,KAAL,CAAWI,IALhC,CAKA0B,iBALA;AAOP,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AACA,QAAA,KAAK,EAAE;AAACC,UAAAA,MAAM,EAAE,OAAT;AAAkBC,UAAAA,OAAO,EAAE,MAA3B;AAAmCC,UAAAA,UAAU,EAAE,QAA/C;AAAwDC,UAAAA,cAAc,EAAE;AAAxE,SADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAC,2DAAf;AAA2E,QAAA,KAAK,EAAE;AAACH,UAAAA,MAAM,EAAC,MAAR;AAAgBI,UAAAA,KAAK,EAAC;AAAtB,SAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,IAAI,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAA+B,QAAA,GAAG,EAAC,kBAAnC;AAAsD,QAAA,GAAG,EAAC,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ,EAMI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,QAAQ,EAAE,KAAKlC,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK6B,iBAAiB,CAAC,UAAD,EAAa;AAC3BM,QAAAA,KAAK,EAAE,CACH;AACIC,UAAAA,QAAQ,EAAE,IADd;AAEIrB,UAAAA,OAAO,EAAE;AAFb,SADG;AADoB,OAAb,CAAjB,CAQG;AACI,QAAA,SAAS,EAAC,cADd;AAEI,QAAA,MAAM,EAAE;AAAM,UAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFZ;AAGI,QAAA,IAAI,EAAC,UAHT;AAII,QAAA,WAAW,EAAC,QAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARH,CADL,CADJ,CADJ,CADJ,EAwBI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKc,iBAAiB,CAAC,UAAD,EAAa;AAC3BM,QAAAA,KAAK,EAAE,CACH;AACIC,UAAAA,QAAQ,EAAE,IADd;AAEIrB,UAAAA,OAAO,EAAE;AAFb,SADG;AADoB,OAAb,CAAjB,CAQG;AACI,QAAA,MAAM,EAAE;AAAM,UAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADZ;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,IAAI,EAAC,UAHT;AAII,QAAA,WAAW,EAAC,UAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARH,CADL,CADJ,CADJ,CAxBJ,EA+CI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,wCAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CA/CJ,EAkDI;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAwB,oBAAC,IAAD;AAAM,QAAA,EAAE,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAxB,CADJ,CAlDJ,CADJ,CANJ,CADJ,CADJ,CAFJ,CADJ;AAwED;;;;EAtKqB5B,S;;AAyKxB,eAAeQ,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport {login,storeToken} from '../login/login-api'\nimport { Redirect,Link } from 'react-router-dom';\nimport {\n    Form,\n    Input,\n    // Tooltip,\n    Icon,\n    // Cascader,\n    // Select,\n    // Row,\n    // Col,\n    // Checkbox,\n    // Button,\n    // AutoComplete,\n    notification\n  } from 'antd';\n  import jwtDecode from \"jwt-decode\";\n\n\nconst FormItem = Form.Item;\n\nclass Login extends Component {\n    render() {\n        const AntWrappedLoginForm = Form.create()(LoginForm);\n        return (\n            <AntWrappedLoginForm />           \n        );\n    }\n}\n\nclass LoginForm extends Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            redirectMe: {\n                status:false,\n                path:''\n            }\n           }\n        this.onSubmitExperience = this.onSubmitExperience.bind(this);\n\n    }\n    componentDidMount(){\n        localStorage.clear()\n    }\n\n    onSubmitExperience = (e) => {\n        e.preventDefault();\n\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log(values);\n                const logReq = {...values};\n                console.log(logReq);\n                login(values)\n                .then(response=>{\n                    console.log(Date.now())\n                    // console.log(response);\n                    // console.log(response.data.access_token)\n                    // console.log(jwtDecode(response.data.access_token));\n                    storeToken(response.data)\n                    notification['success']({\n                        message: 'MEDTHREAT',\n                        description:\n                          'Successfully Logged In.',\n                      });\n                    this.props.form.resetFields();\n                    this.setRoute(\"dashboard\")\n                }).\n                catch((error)=> {\n                    if(error.response){\n                      console.log(error.response);\n                      if(error.response.status==400 && error.response.data.error==\"invalid_grant\"){\n                        notification['error']({\n                            message: 'MEDTHREAT',\n                            description:\n                              `This Account Has been Blocked, Contact Administrator.`,\n                          });\n                      }\n                      else if(error.response.status == 400 ){\n                        notification['error']({\n                            message: 'MEDTHREAT',\n                            description:\n                              `Username / Password  is Incorrect.`,\n                          });\n                        \n                            console.log(error.response.status);\n                      }else{\n                        notification['error']({\n                            message: 'MEDTHREAT',\n                            description:\n                              `An Error occured Contact Administrator.`,\n                          });\n                          \n                        console.log(error.response.status);\n                      }\n                    }else{\n                        notification['error']({\n                            message: 'MEDTHREAT',\n                            description:\n                              `An Error occured Contact Administrator.`,\n                          });  \n                    }\n                    \n                });\n        \n            }\n        });\n    }\n    setRoute=(path)=>{\n        this.setState({redirectMe: {\n                status:true,\n                path:`/${path}`\n            }\n        })\n    }\n\n  render() {\n    if(this.state.redirectMe.status){\n        console.log(\"Reiercting\");\n        return <Redirect to={this.state.redirectMe.path} />\n    }\n    const {getFieldDecorator} = this.props.form;\n\n    return (\n        <div className=\"bg-dark\" \n        style={{height: \"100vh\", display: \"flex\", alignItems: \"center\",justifyContent: \"center\"}}>\n            <div className=\"bg-dark sufee-login d-flex align-content-center flex-wrap\" style={{height:\"100%\", width:\"100%\"}}>\n                <div className=\"container\">\n                    <div className=\"login-content\">\n                        <div className=\"login-logo\">\n                            <a href=\"index.html\">\n                                <img className=\"align-content\" src=\"/images/logo.png\" alt=\"\" />\n                            </a>\n                        </div>\n                        <div className=\"login-form\">\n                            <form onSubmit={this.onSubmitExperience}>\n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <FormItem>\n                                            {getFieldDecorator('username', {\n                                                rules: [\n                                                    {\n                                                        required: true,\n                                                        message: 'Please input your email!'\n                                                    }\n                                                ]\n                                            })(\n                                                <Input\n                                                    className=\"form-control\"\n                                                    prefix={<Icon type=\"user\"/>}\n                                                    name=\"username\"\n                                                    placeholder=\" Email\"\n                                                />\n                                            )}\n                                        </FormItem>\n                                    </div>\n                                </div>\n                                \n\n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <FormItem>\n                                            {getFieldDecorator('password', {\n                                                rules: [\n                                                    {\n                                                        required: true,\n                                                        message: 'Please input your Password!'\n                                                    }\n                                                ]\n                                            })(\n                                                <Input\n                                                    prefix={<Icon type=\"lock\"/>}\n                                                    name=\"password\"\n                                                    type=\"password\"\n                                                    placeholder=\"Password\"\n                                                />\n\n                                            )}\n                                        </FormItem> \n                                    </div>\n                                </div>\n                                \n                                <FormItem>\n                                    <button type=\"submit\" className=\"btn btn-primary btn-flat m-b-30 m-t-30\">Register</button>\n                                </FormItem>                                        \n                                <div className=\"register-link m-t-15 text-center\">\n                                    <p>Don't have account ? <Link to={`/sign-up`} >Sign up</Link></p>\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}