{"ast":null,"code":"import _objectSpread from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat-ui/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from 'axios';\nimport { API_BASE_URL, APP_CLIENT, APP_PASS, PAGE_SIZE, CLIENT_TOKEN, GETMETHOD, POSTMETHOD, PUTMETHOD, DELETEMETHOD } from '../../constants';\n\nvar axiosRequest = function axiosRequest(options) {\n  var setHeader = {}; // if (options.useUserToken && localStorage.getItem(ACCESS_TOKEN)) {\n  //     let tempHeaders = {Authorization:`Bearer ${localStorage.getItem(ACCESS_TOKEN)}`}\n  //     setHeader = {...setHeader, ...tempHeaders}\n  // }\n\n  if (options.useBasic) {\n    var tempHeaders = {\n      Authorization: \"\".concat(getBasicAuth(APP_CLIENT, APP_PASS))\n    };\n    setHeader = _objectSpread({}, setHeader, tempHeaders); // headers.set('Content-Type', 'application/x-www-form-urlencoded;charset=UTF-8');\n  } // if(options.useClientToken){\n  //     let tempHeaders={Authorization:`Bearer ${getClientToken()}`}\n  //     setHeader = {...setHeader, ...tempHeaders}\n  // }\n\n\n  options.headerRequest = {\n    headers: setHeader\n  };\n  var apiRequest = null;\n\n  switch (options.method) {\n    case GETMETHOD:\n      apiRequest = axios.get(options.url, options.headerRequest);\n      break;\n\n    case POSTMETHOD:\n      apiRequest = axios.post(options.url, options.data, options.headerRequest);\n      break;\n\n    case PUTMETHOD:\n      apiRequest = axios.put(options.url, options.data, options.headerRequest);\n      break;\n\n    default:\n      apiRequest = null;\n  }\n\n  return apiRequest;\n};\n\nexport function login(loginRequest) {\n  loginRequest.grant_type = 'password';\n  loginRequest.scope = 'profile';\n  var formBody = [];\n\n  for (var property in loginRequest) {\n    var encodedKey = encodeURIComponent(property);\n    var encodedValue = encodeURIComponent(loginRequest[property]);\n    formBody.push(encodedKey + \"=\" + encodedValue);\n  }\n\n  formBody = formBody.join(\"&\");\n  return axiosRequest({\n    url: API_BASE_URL + '/oauth/token',\n    method: POSTMETHOD,\n    body: formBody,\n    useBasic: true\n  });\n}\n\nvar getBasicAuthentication = function getBasicAuthentication() {\n  // const options =  \n  // { headers:\n  //      {'Content-Type': 'application/json', 'Authorization': `${getBasicAuth(APP_CLIENT, APP_PASS)}` } \n  // };\n  var formData = new FormData();\n  formData.append(\"grant_type\", \"client_credentials\"); // let data = {\"grant_type\":\"client_credentials\"}\n  // this doesnt work\n  // return axios.post(`${API_BASE_URL}/oauth/token`,formData, options)\n\n  return axiosRequest({\n    useBasic: true,\n    data: formData,\n    url: \"\".concat(API_BASE_URL, \"/oauth/token\"),\n    method: POSTMETHOD\n  });\n};\n\nexport var signUp = function signUp(form) {\n  console.log(\"signUp\");\n  getBasicAuthentication().then(function (response) {\n    var clientToken = response.data.a;\n  }); // return axiosRequest({\n  //     useBasic: true,\n  //     data: formData,\n  //     url: `${API_BASE_URL}/oauth/token`,\n  //     method: POSTMETHOD\n  // });\n};\n\nvar getBasicAuth = function getBasicAuth(username, password) {\n  var hash = new Buffer(username + ':' + password).toString('base64');\n  console.log(hash);\n  return \"Basic \" + hash;\n};","map":{"version":3,"sources":["/Users/ddada/Documents/danpersonal/livejavaproject/medthreat-ui/src/pages/signup/login-api.js"],"names":["axios","API_BASE_URL","APP_CLIENT","APP_PASS","PAGE_SIZE","CLIENT_TOKEN","GETMETHOD","POSTMETHOD","PUTMETHOD","DELETEMETHOD","axiosRequest","options","setHeader","useBasic","tempHeaders","Authorization","getBasicAuth","headerRequest","headers","apiRequest","method","get","url","post","data","put","login","loginRequest","grant_type","scope","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","body","getBasicAuthentication","formData","FormData","append","signUp","form","console","log","then","response","clientToken","a","username","password","hash","Buffer","toString"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {API_BASE_URL, APP_CLIENT, APP_PASS, PAGE_SIZE, CLIENT_TOKEN,GETMETHOD,POSTMETHOD,PUTMETHOD,DELETEMETHOD} from '../../constants';\n\n\nconst axiosRequest = options =>{\n    let setHeader = {}\n    // if (options.useUserToken && localStorage.getItem(ACCESS_TOKEN)) {\n    //     let tempHeaders = {Authorization:`Bearer ${localStorage.getItem(ACCESS_TOKEN)}`}\n    //     setHeader = {...setHeader, ...tempHeaders}\n    // }\n\n    if (options.useBasic) {\n        let tempHeaders={Authorization:`${getBasicAuth(APP_CLIENT, APP_PASS)}`}\n        setHeader = {...setHeader, ...tempHeaders}\n        // headers.set('Content-Type', 'application/x-www-form-urlencoded;charset=UTF-8');\n    }\n\n    // if(options.useClientToken){\n    //     let tempHeaders={Authorization:`Bearer ${getClientToken()}`}\n    //     setHeader = {...setHeader, ...tempHeaders}\n    // }\n\n    options.headerRequest = {headers:setHeader}\n\n    let apiRequest = null;\n\n    switch (options.method) {\n        case GETMETHOD:\n            apiRequest = axios.get(options.url,options.headerRequest)\n        break;\n        \n        case POSTMETHOD:\n            apiRequest= axios.post(options.url, options.data, options.headerRequest);\n        break;\n        \n        case PUTMETHOD:\n            apiRequest= axios.put(options.url, options.data,options.headerRequest);\n        break;\n\n        default:\n          apiRequest = null;\n    }\n\n    return apiRequest;\n\n}\n\nexport function login(loginRequest) {\n    loginRequest.grant_type = 'password';\n    loginRequest.scope = 'profile';\n\n    let formBody = [];\n    for (let property in loginRequest) {\n        let encodedKey = encodeURIComponent(property);\n        let encodedValue = encodeURIComponent(loginRequest[property]);\n        formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n    formBody = formBody.join(\"&\");\n\n    return axiosRequest({\n        url: API_BASE_URL + '/oauth/token',\n        method: POSTMETHOD,\n        body: formBody,\n        useBasic: true\n    });\n} \n\nconst getBasicAuthentication =()=>{\n    // const options =  \n    // { headers:\n    //      {'Content-Type': 'application/json', 'Authorization': `${getBasicAuth(APP_CLIENT, APP_PASS)}` } \n    // };\n    const formData = new FormData();\n    formData.append(\"grant_type\",\"client_credentials\")\n    // let data = {\"grant_type\":\"client_credentials\"}\n    // this doesnt work\n    // return axios.post(`${API_BASE_URL}/oauth/token`,formData, options)\n\n    return axiosRequest({\n        useBasic: true,\n        data: formData,\n        url: `${API_BASE_URL}/oauth/token`,\n        method: POSTMETHOD\n    });\n}\n\nexport const signUp=(form)=>{\n    console.log(\"signUp\")\n    getBasicAuthentication()\n    .then(response =>{\n        let clientToken = response.data.a\n    })\n\n    // return axiosRequest({\n    //     useBasic: true,\n    //     data: formData,\n    //     url: `${API_BASE_URL}/oauth/token`,\n    //     method: POSTMETHOD\n    // });\n}\n\nconst getBasicAuth = (username, password) => {\n    const hash = new Buffer(username + ':' + password).toString('base64');\n    console.log(hash);\n    return \"Basic \" + hash;\n};"]},"metadata":{},"sourceType":"module"}