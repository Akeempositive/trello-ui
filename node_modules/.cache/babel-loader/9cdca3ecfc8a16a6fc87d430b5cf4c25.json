{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nimport _assertThisInitialized from \"/Users/ddada/Documents/danpersonal/livejavaproject/trelloMaster/trello-ui/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"/Users/ddada/Documents/danpersonal/livejavaproject/trelloMaster/trello-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ddada/Documents/danpersonal/livejavaproject/trelloMaster/trello-ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ddada/Documents/danpersonal/livejavaproject/trelloMaster/trello-ui/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ddada/Documents/danpersonal/livejavaproject/trelloMaster/trello-ui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ddada/Documents/danpersonal/livejavaproject/trelloMaster/trello-ui/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/ddada/Documents/danpersonal/livejavaproject/trelloMaster/trello-ui/src/pages/signup/signup.js\";\nimport React, { Component } from 'react';\nimport { signUp } from '../signup/sign-api';\nimport { Link } from \"react-router-dom\";\nvar FormItem = _Form.Item;\n\nvar Signup =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Signup, _Component);\n\n  function Signup() {\n    _classCallCheck(this, Signup);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Signup).apply(this, arguments));\n  }\n\n  _createClass(Signup, [{\n    key: \"render\",\n    value: function render() {\n      var AntWrappedLoginForm = _Form.create()(SignupForm);\n\n      return React.createElement(AntWrappedLoginForm, {\n        onLogin: this.props.onLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Signup;\n}(Component);\n\nvar SignupForm =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(SignupForm, _Component2);\n\n  function SignupForm(props) {\n    var _this;\n\n    _classCallCheck(this, SignupForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignupForm).call(this, props));\n\n    _this.onSubmitExperience = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        isloading: true\n      });\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log(values);\n          signUp(values).then(function (response) {\n            console.log(response);\n\n            _notification['success']({\n              message: 'MEDTHREAT',\n              description: 'Successfully registered.'\n            });\n\n            _this.props.form.resetFields();\n\n            _this.setState({\n              isloading: false\n            });\n          }).catch(function (error) {\n            if (error.response) {\n              console.log(error.response);\n\n              if (error.response.data.status == 400) {\n                _notification['error']({\n                  message: 'MEDTHREAT',\n                  description: \"\".concat(error.response.data.status, \" Error occured .\")\n                });\n\n                console.log(error.response.status);\n\n                _this.setState({\n                  isloading: false\n                });\n              }\n\n              _notification['error']({\n                message: 'MEDTHREAT',\n                description: \"An Error occured .\"\n              });\n\n              console.log(error.response.status);\n\n              _this.setState({\n                isloading: false\n              });\n            }\n\n            _this.setState({\n              isloading: false\n            });\n          }); // let loginRequests=values;\n          // console.log(loginRequests);\n          // loginRequest.data={};\n          // console.log(loginRequest);\n          // console.log(loginRequests.username);\n          // console.log(loginRequests.password);\n          // login(loginRequest)\n          //     .then(response => {\n          //         initiateUser(response.access_token);\n          //         this.props.onLogin();\n          //     })\n          //     .catch(error => {\n          //         if (error.status === 401 || (error.error_description === 'Bad credentials')) {\n          //             notification.error({\n          //                 message: APP_NAME,\n          //                 description:\n          //                     'Your Username or Password is incorrect. Please try again!'\n          //             });\n          //         } else {\n          //             notification.error({\n          //                 message: APP_NAME,\n          //                 description:\n          //                     error.message ||\n          //                     'Sorry! Something went wrong. Please try again!'\n          //             });\n          //         }\n          //     });\n        }\n      });\n    };\n\n    _this.state = {\n      isloading: false\n    };\n    _this.onSubmitExperience = _this.onSubmitExperience.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SignupForm, [{\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return React.createElement(\"div\", {\n        className: \"bg-dark\",\n        style: {\n          height: \"100vh\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"bg-dark sufee-login d-flex align-content-center flex-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"login-logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"MEDTHREAT\")), React.createElement(\"div\", {\n        className: \"login-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(_Spin, {\n        spinning: this.state.isloading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmitExperience,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, getFieldDecorator('firstName', {\n        rules: [{\n          required: true,\n          message: 'Please input your First Name!'\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"lock\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }),\n        name: \"firstName\",\n        placeholder: \"First Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, getFieldDecorator('lastName', {\n        rules: [{\n          required: true,\n          message: 'Please input your lastName!'\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"lock\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }),\n        name: \"lastName\",\n        placeholder: \"Last Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, getFieldDecorator('email', {\n        rules: [{\n          required: true,\n          message: 'Please input your email!'\n        }]\n      })(React.createElement(_Input, {\n        className: \"form-control\",\n        prefix: React.createElement(_Icon, {\n          type: \"user\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }),\n        name: \"email\",\n        placeholder: \" Email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, getFieldDecorator('phoneNo', {\n        rules: [{\n          required: true,\n          message: 'Please input your phoneNo!'\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"lock\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }),\n        name: \"phoneNo\",\n        placeholder: \"Phnoe Number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your Password!'\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"lock\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }),\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }))))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-flat m-b-30 m-t-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"Register\")), React.createElement(\"div\", {\n        className: \"register-link m-t-15 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"Already have account ? \", React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"Sign in\"))))))))));\n    }\n  }]);\n\n  return SignupForm;\n}(Component);\n\nexport default Signup;","map":{"version":3,"sources":["/Users/ddada/Documents/danpersonal/livejavaproject/trelloMaster/trello-ui/src/pages/signup/signup.js"],"names":["React","Component","signUp","Link","FormItem","Item","Signup","AntWrappedLoginForm","create","SignupForm","props","onLogin","onSubmitExperience","e","preventDefault","setState","isloading","form","validateFields","err","values","console","log","then","response","message","description","resetFields","catch","error","data","status","state","bind","getFieldDecorator","height","rules","required"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {signUp} from '../signup/sign-api'\nimport {\n    Link,\n  } from \"react-router-dom\";\nimport {\n    Form,\n    Input,\n    Tooltip,\n    Icon,\n    Cascader,\n    Select,\n    Row,\n    Col,\n    Checkbox,\n    Button,\n    Spin,\n    notification\n  } from 'antd';\n\nconst FormItem = Form.Item;\n\nclass Signup extends Component {\n    render() {\n        const AntWrappedLoginForm = Form.create()(SignupForm);\n        return (\n            <AntWrappedLoginForm onLogin={this.props.onLogin}/>           \n        );\n    }\n}\n\nclass SignupForm extends Component  {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isloading:false\n           }\n        this.onSubmitExperience = this.onSubmitExperience.bind(this);\n\n    }\n\n    onSubmitExperience = (e) => {\n        e.preventDefault();\n        this.setState({isloading:true})\n\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                console.log(values);\n                signUp(values)\n                .then(response=>{\n                    console.log(response);\n                    notification['success']({\n                        message: 'MEDTHREAT',\n                        description:\n                          'Successfully registered.',\n                      });\n                    this.props.form.resetFields();\n                    this.setState({isloading:false})\n\n                }).\n                catch((error)=> {\n                    if(error.response){\n                      console.log(error.response);\n                      if(error.response.data.status == 400){\n                        notification['error']({\n                            message: 'MEDTHREAT',\n                            description:\n                              `${error.response.data.status} Error occured .`,\n                          });\n                            console.log(error.response.status);\n                            this.setState({isloading:false})\n\n                      }\n                      notification['error']({\n                        message: 'MEDTHREAT',\n                        description:\n                          `An Error occured .`,\n                      });\n                      \n                      console.log(error.response.status);\n                      this.setState({isloading:false})\n\n\n                    }\n                    this.setState({isloading:false})\n\n                });\n                // let loginRequests=values;\n                // console.log(loginRequests);\n                // loginRequest.data={};\n                // console.log(loginRequest);\n                // console.log(loginRequests.username);\n                // console.log(loginRequests.password);\n\n\n\n\n                // login(loginRequest)\n                //     .then(response => {\n                //         initiateUser(response.access_token);\n                //         this.props.onLogin();\n                //     })\n                //     .catch(error => {\n                //         if (error.status === 401 || (error.error_description === 'Bad credentials')) {\n                //             notification.error({\n                //                 message: APP_NAME,\n                //                 description:\n                //                     'Your Username or Password is incorrect. Please try again!'\n                //             });\n                //         } else {\n                //             notification.error({\n                //                 message: APP_NAME,\n                //                 description:\n                //                     error.message ||\n                //                     'Sorry! Something went wrong. Please try again!'\n                //             });\n                //         }\n                //     });\n            }\n        });\n    }\n\n  render() {\n    const {getFieldDecorator} = this.props.form;\n\n    return (\n        <div className=\"bg-dark\" style={{height: \"100vh\"}}>\n            <div className=\"bg-dark sufee-login d-flex align-content-center flex-wrap\">\n                <div className=\"container\">\n                    <div className=\"login-content\">\n                        <div className=\"login-logo\">\n                            <h2>MEDTHREAT</h2>\n                        </div>\n                        <div className=\"login-form\">\n                            <Spin spinning={this.state.isloading}>\n                                <form onSubmit={this.onSubmitExperience}>\n                                    {/* <div className=\"form-group\">\n                                        <label>User Name</label>\n                                        <input type=\"email\" className=\"form-control\" placeholder=\"User Name\">\n                                    </div> */}\n\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <FormItem>\n                                                {getFieldDecorator('firstName', {\n                                                    rules: [\n                                                        {\n                                                            required: true,\n                                                            message: 'Please input your First Name!'\n                                                        }\n                                                    ]\n                                                })(\n                                                    <Input\n                                                        prefix={<Icon type=\"lock\"/>}\n                                                        name=\"firstName\"\n                                                        placeholder=\"First Name\"\n                                                    />\n\n                                                )}\n                                            </FormItem> \n                                        </div>\n                                    </div>\n\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <FormItem>\n                                                {getFieldDecorator('lastName', {\n                                                    rules: [\n                                                        {\n                                                            required: true,\n                                                            message: 'Please input your lastName!'\n                                                        }\n                                                    ]\n                                                })(\n                                                    <Input\n                                                        prefix={<Icon type=\"lock\"/>}\n                                                        name=\"lastName\"\n                                                        placeholder=\"Last Name\"\n                                                    />\n\n                                                )}\n                                            </FormItem> \n                                        </div>\n                                    </div>\n\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <FormItem>\n                                                {getFieldDecorator('email', {\n                                                    rules: [\n                                                        {\n                                                            required: true,\n                                                            message: 'Please input your email!'\n                                                        }\n                                                    ]\n                                                })(\n                                                    <Input\n                                                        className=\"form-control\"\n                                                        prefix={<Icon type=\"user\"/>}\n                                                        name=\"email\"\n                                                        placeholder=\" Email\"\n                                                    />\n                                                )}\n                                            </FormItem>\n                                        </div>\n                                    </div>\n                                    \n                                    \n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <FormItem>\n                                                {getFieldDecorator('phoneNo', {\n                                                    rules: [\n                                                        {\n                                                            required: true,\n                                                            message: 'Please input your phoneNo!'\n                                                        }\n                                                    ]\n                                                })(\n                                                    <Input\n                                                        prefix={<Icon type=\"lock\"/>}\n                                                        name=\"phoneNo\"\n                                                        placeholder=\"Phnoe Number\"\n                                                    />\n\n                                                )}\n                                            </FormItem> \n                                        </div>\n                                    </div>\n\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <FormItem>\n                                                {getFieldDecorator('password', {\n                                                    rules: [\n                                                        {\n                                                            required: true,\n                                                            message: 'Please input your Password!'\n                                                        }\n                                                    ]\n                                                })(\n                                                    <Input\n                                                        prefix={<Icon type=\"lock\"/>}\n                                                        name=\"password\"\n                                                        type=\"password\"\n                                                        placeholder=\"Password\"\n                                                    />\n\n                                                )}\n                                            </FormItem> \n                                        </div>\n                                    </div>\n                                    \n                                    <FormItem>\n                                        <button type=\"submit\" className=\"btn btn-primary btn-flat m-b-30 m-t-30\">Register</button>\n                                    </FormItem>                                        \n                                    <div className=\"register-link m-t-15 text-center\">\n                                        <p>Already have account ? <Link to={`/`} >Sign in</Link></p>\n                                    </div>\n                                </form>\n                            </Spin>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n  }\n}\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}