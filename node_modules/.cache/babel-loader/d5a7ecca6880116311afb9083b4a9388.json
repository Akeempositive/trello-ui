{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/divider/style\";\nimport _Divider from \"antd/es/divider\";\nimport \"antd/es/popconfirm/style\";\nimport _Popconfirm from \"antd/es/popconfirm\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nimport _classCallCheck from \"C:\\\\Users\\\\Positive\\\\Documents\\\\Projects\\\\trello-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Positive\\\\Documents\\\\Projects\\\\trello-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Positive\\\\Documents\\\\Projects\\\\trello-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Positive\\\\Documents\\\\Projects\\\\trello-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Positive\\\\Documents\\\\Projects\\\\trello-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Positive\\\\Documents\\\\Projects\\\\trello-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Positive\\\\Documents\\\\Projects\\\\trello-ui\\\\src\\\\pages\\\\doctor\\\\user\\\\userpage.js\";\nimport React, { Component } from 'react';\nimport Header from '../../../partials/header';\nimport Navbar from '../../../partials/navbar';\nimport BreadCrumb from '../../../partials/breadcrumb';\nimport { fetchAllUsers, unBlockUser, blockUser } from './user-api';\nimport { hasAuthority } from '../../../utils/api-utils';\n\nvar UserPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserPage, _Component);\n\n  function UserPage(props) {\n    var _this;\n\n    _classCallCheck(this, UserPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserPage).call(this, props));\n\n    _this.getAccontLockedInfo = function (block) {\n      var badge = {\n        clazz: \"badge badge-info\",\n        display: \"Active\"\n      };\n\n      if (block == 1) {\n        badge = {\n          clazz: \"badge badge-danger\",\n          display: \"Blocked\"\n        };\n      }\n\n      return React.createElement(\"span\", {\n        className: badge.clazz,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, badge.display);\n    };\n\n    _this.unblockUzer = function (email) {\n      unBlockUser(email).then(function (response) {\n        console.log(\"Users Response\");\n        console.log(response.data);\n\n        _this.getAllUsers(); // this.setState({isloading:false})\n\n      }).catch(function (error) {\n        console.log(\"User Error Response\");\n\n        _notification['error']({\n          message: 'MEDTHREAT',\n          description: \"An Error Occured UnBlocking User Users .\"\n        });\n\n        _this.setState({\n          isloading: false\n        });\n\n        console.log(error);\n      });\n    };\n\n    _this.blockUzer = function (email) {\n      blockUser(email).then(function (response) {\n        console.log(\"Users Response\");\n        console.log(response.data);\n\n        _this.getAllUsers(); // this.setState({isloading:false})\n\n      }).catch(function (error) {\n        console.log(\"User Error Response\");\n\n        _notification['error']({\n          message: 'MEDTHREAT',\n          description: \"An Error Occured Blocking User Users .\"\n        });\n\n        _this.setState({\n          isloading: false\n        });\n\n        console.log(error);\n      });\n    };\n\n    _this.getTableHeader = function () {\n      var columns = [{\n        title: 'First Name',\n        dataIndex: 'firstName',\n        key: 'firstName'\n      }, {\n        title: 'Last Name',\n        dataIndex: 'lastName',\n        key: 'lastName'\n      }, {\n        title: 'Email',\n        dataIndex: 'email',\n        key: 'email'\n      }, {\n        title: 'Phone Number',\n        dataIndex: 'phoneNo',\n        key: 'phoneNo'\n      }, {\n        title: 'Roles',\n        dataIndex: 'roles',\n        key: 'roles',\n        render: function render(roles) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, roles.map(function (role) {\n            return React.createElement(\"span\", {\n              className: \"badge badge-secondary\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 133\n              },\n              __self: this\n            }, role.name);\n          }));\n        }\n      }, {\n        title: 'UnAuthorized Activity',\n        dataIndex: 'illegalCount',\n        key: 'illegalCount'\n      }, {\n        title: 'Account Status',\n        dataIndex: 'block',\n        key: 'block',\n        render: function render(block) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153\n            },\n            __self: this\n          }, _this.getAccontLockedInfo(block));\n        }\n      }, {\n        title: 'Action',\n        key: 'action',\n        render: function render(text, record) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163\n            },\n            __self: this\n          }, hasAuthority([\"ROLE_ADMIN_BLOCK_USER\"]) ? record.block == 0 ? React.createElement(_Popconfirm, {\n            title: \"Are you sure you want to Block this User?\",\n            onConfirm: function onConfirm(e) {\n              _this.blockUzer(record.email);\n            },\n            onCancel: _this.cancelDrug(),\n            okText: \"Yes\",\n            cancelText: \"No\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            type: \"button\",\n            style: {\n              marginBottom: '5px'\n            },\n            class: \"btn btn-danger btn-sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 177\n            },\n            __self: this\n          }, \"Block\")) : React.createElement(_Popconfirm, {\n            title: \"Are you sure you want to UnBlock this User?\",\n            onConfirm: function onConfirm(e) {\n              _this.unblockUzer(record.email);\n            },\n            onCancel: _this.cancelDrug(),\n            okText: \"Yes\",\n            cancelText: \"No\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 182\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            type: \"button\",\n            style: {\n              marginBottom: '5px'\n            },\n            class: \"btn btn-primary btn-sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189\n            },\n            __self: this\n          }, \"UnBlock\")) : \"\", React.createElement(_Divider, {\n            type: \"vertical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197\n            },\n            __self: this\n          }), React.createElement(\"button\", {\n            onClick: function onClick(e) {\n              _this.props.history.push(\"/single-user/\".concat(record.id));\n            },\n            type: \"button\",\n            class: \"btn btn-primary btn-sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198\n            },\n            __self: this\n          }, \"View Audit Trail\"));\n        }\n      }];\n      return columns;\n    };\n\n    _this.getAllUsers = function () {\n      _this.setState({\n        isloading: true\n      });\n\n      fetchAllUsers().then(function (response) {\n        console.log(\"Users Response\");\n        console.log(response.data);\n\n        _this.setState({\n          users: response.data\n        });\n\n        _this.setState({\n          isloading: false\n        });\n      }).catch(function (error) {\n        console.log(\"User Error Response\");\n\n        _notification['error']({\n          message: 'MEDTHREAT',\n          description: \"An Error Fetching Users .\"\n        });\n\n        _this.setState({\n          isloading: false\n        });\n\n        console.log(error);\n      });\n    };\n\n    _this.deleteDrug = function (id) {\n      console.log(id);\n    };\n\n    _this.cancelDrug = function () {};\n\n    _this.mapDrugTables = function () {\n      var items = React.createElement(\"tr\", {\n        style: {\n          width: '100%'\n        },\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"No drug\");\n\n      if (_this.state.drugs) {\n        items = _this.state.drugs.map(function (drug) {\n          return React.createElement(\"tr\", {\n            key: drug.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 282\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 283\n            },\n            __self: this\n          }, drug.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 284\n            },\n            __self: this\n          }, drug.amount), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 285\n            },\n            __self: this\n          }, drug.alias), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 286\n            },\n            __self: this\n          }, React.createElement(_Popconfirm, {\n            title: \"Are you sure delete this Item?\",\n            onConfirm: function onConfirm(e) {\n              return _this.deleteDrug(drug);\n            },\n            onCancel: _this.cancelDrug(),\n            okText: \"Yes\",\n            cancelText: \"No\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 287\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: \"#\",\n            style: {\n              margin: '5px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 294\n            },\n            __self: this\n          }, \"Delete\")), React.createElement(\"button\", {\n            type: \"button\",\n            class: \"btn btn-primary btn-sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 297\n            },\n            __self: this\n          }, \"Delete\")));\n        });\n      }\n\n      return items;\n    };\n\n    _this.state = {\n      users: [],\n      isloading: true // this.onsubmitDrug = this.onsubmitDrug.bind(this);\n\n    };\n    _this.unblockUzer = _this.unblockUzer.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UserPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getAllUsers();\n    } // <span class=\"badge badge-primary\">Primary</span>\n    //                                 <span class=\"badge badge-secondary\">Secondary</span>\n    //                                 <span class=\"badge badge-success\">Success</span>\n    //                                 <span class=\"badge badge-danger\">Danger</span>\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var bodystyle = {\n        background: \"#f1f2f7\",\n        display: \"table\",\n        fontFamily: \"'Open Sans' sans-serif !important\",\n        fontSize: \"16px\",\n        width: \"100%\"\n      };\n      return React.createElement(\"div\", {\n        style: bodystyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"right-panel \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }), React.createElement(BreadCrumb, {\n        menu: \"User\",\n        submenu: \" \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"content mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(_Spin, {\n        spinning: this.state.isloading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, \"Data Table\")), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(_Table, {\n        columns: this.getTableHeader(),\n        dataSource: this.state.users,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }))))))))));\n    }\n  }]);\n\n  return UserPage;\n}(Component);\n\nexport default UserPage;","map":{"version":3,"sources":["C:\\Users\\Positive\\Documents\\Projects\\trello-ui\\src\\pages\\doctor\\user\\userpage.js"],"names":["React","Component","Header","Navbar","BreadCrumb","fetchAllUsers","unBlockUser","blockUser","hasAuthority","UserPage","props","getAccontLockedInfo","block","badge","clazz","display","unblockUzer","email","then","response","console","log","data","getAllUsers","catch","error","message","description","setState","isloading","blockUzer","getTableHeader","columns","title","dataIndex","key","render","roles","map","role","name","text","record","e","cancelDrug","marginBottom","history","push","id","users","deleteDrug","mapDrugTables","items","width","state","drugs","drug","amount","alias","margin","bind","bodystyle","background","fontFamily","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Header from '../../../partials/header';\r\nimport Navbar from '../../../partials/navbar'\r\nimport BreadCrumb from '../../../partials/breadcrumb'\r\nimport {fetchAllUsers,unBlockUser,blockUser} from './user-api'\r\nimport {hasAuthority} from  '../../../utils/api-utils'\r\n\r\nimport {\r\n    Form,\r\n    Input,\r\n    Tooltip,\r\n    Icon,\r\n    Cascader,\r\n    Select,\r\n    Row,\r\n    Col,\r\n    Spin,\r\n    notification,Popconfirm,Table, Divider, Tag \r\n  } from 'antd';\r\n\r\nclass UserPage extends Component  {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            users:[],\r\n            isloading:true\r\n        }\r\n            // this.onsubmitDrug = this.onsubmitDrug.bind(this);\r\n            this.unblockUzer = this.unblockUzer.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getAllUsers()\r\n    }\r\n\r\n    // <span class=\"badge badge-primary\">Primary</span>\r\n    //                                 <span class=\"badge badge-secondary\">Secondary</span>\r\n    //                                 <span class=\"badge badge-success\">Success</span>\r\n    //                                 <span class=\"badge badge-danger\">Danger</span>\r\n\r\n     \r\n\r\n    getAccontLockedInfo = (block)=>{\r\n        let badge = {clazz:\"badge badge-info\", display:\"Active\"}\r\n        if(block==1){\r\n            badge = {clazz:\"badge badge-danger\", display:\"Blocked\"}\r\n        }    \r\n        return (\r\n            <span className={badge.clazz}>\r\n                {badge.display}\r\n            </span>\r\n        );                  \r\n    }\r\n\r\n    unblockUzer = (email) =>{\r\n        unBlockUser(email)\r\n        .then(response=>{\r\n            console.log(\"Users Response\");\r\n            console.log(response.data)\r\n            this.getAllUsers()\r\n            // this.setState({isloading:false})\r\n        })\r\n        .catch((error)=> {\r\n            console.log(\"User Error Response\");\r\n      \r\n            notification['error']({\r\n            message: 'MEDTHREAT',\r\n            description:\r\n                `An Error Occured UnBlocking User Users .`,\r\n            });\r\n\r\n            this.setState({isloading:false})\r\n            console.log(error);\r\n\r\n        });\r\n    }\r\n\r\n    blockUzer = (email) =>{\r\n        blockUser(email)\r\n        .then(response=>{\r\n            console.log(\"Users Response\");\r\n            console.log(response.data)\r\n            this.getAllUsers()\r\n            // this.setState({isloading:false})\r\n        })\r\n        .catch((error)=> {\r\n            console.log(\"User Error Response\");\r\n      \r\n            notification['error']({\r\n            message: 'MEDTHREAT',\r\n            description:\r\n                `An Error Occured Blocking User Users .`,\r\n            });\r\n\r\n            this.setState({isloading:false})\r\n            console.log(error);\r\n\r\n        });\r\n    }\r\n\r\n    getTableHeader = ()=>{\r\n        \r\n        const columns = [\r\n            {\r\n              title: 'First Name',\r\n              dataIndex: 'firstName',\r\n              key: 'firstName',\r\n            },\r\n            {\r\n                title: 'Last Name',\r\n                dataIndex: 'lastName',\r\n                key: 'lastName',\r\n            },\r\n            {\r\n              title: 'Email',\r\n              dataIndex: 'email', \r\n              key: 'email',\r\n            },\r\n            {\r\n              title: 'Phone Number',\r\n              dataIndex: 'phoneNo',\r\n              key: 'phoneNo',\r\n            },\r\n            {\r\n                title: 'Roles',\r\n                dataIndex: 'roles',\r\n                key: 'roles',\r\n                render: roles => (\r\n                    <span>\r\n                      {roles.map(role => {\r\n                        return (\r\n                            <span className=\"badge badge-secondary\">\r\n                                {role.name}\r\n                            </span>\r\n                        );   \r\n                      })}\r\n                    </span>\r\n                ),\r\n            },\r\n\r\n            {\r\n                title: 'UnAuthorized Activity',\r\n                dataIndex: 'illegalCount',\r\n                key: 'illegalCount',\r\n            },\r\n            \r\n            {\r\n                title: 'Account Status',\r\n                dataIndex: 'block',\r\n                key: 'block',\r\n                render: block => (\r\n                    <span>\r\n                        {this.getAccontLockedInfo(block)}  \r\n                    </span>\r\n                  ),\r\n            },\r\n           \r\n            {\r\n                title: 'Action',\r\n                key: 'action',\r\n                render: (text, record) => (\r\n                  <span>\r\n                    {\r\n                        hasAuthority([\"ROLE_ADMIN_BLOCK_USER\"]) \r\n                        ?\r\n\r\n                            (record.block==0) ?\r\n\r\n                            <Popconfirm\r\n                                title=\"Are you sure you want to Block this User?\"\r\n                                onConfirm={(e)=>{this.blockUzer(record.email)}}\r\n                                onCancel={this.cancelDrug()}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <button type=\"button\" style={{marginBottom:'5px'}}  class=\"btn btn-danger btn-sm\">Block</button>\r\n                            </Popconfirm>\r\n\r\n                            :\r\n\r\n                            <Popconfirm\r\n                                title=\"Are you sure you want to UnBlock this User?\"\r\n                                onConfirm={(e)=>{this.unblockUzer(record.email)}}\r\n                                onCancel={this.cancelDrug()}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <button type=\"button\" style={{marginBottom:'5px'}}  class=\"btn btn-primary btn-sm\">UnBlock</button>\r\n                            </Popconfirm>\r\n                        :\r\n                        \"\"\r\n\r\n                    }\r\n                    \r\n                    {/* <button type=\"button\" style={{marginBottom:'5px'}}  class=\"btn btn-primary btn-sm\">Block</button> */}\r\n                    <Divider type=\"vertical\" />\r\n                    <button onClick={(e)=>{this.props.history.push(`/single-user/${record.id}`);}} type=\"button\" class=\"btn btn-primary btn-sm\">View Audit Trail</button>\r\n                  </span>\r\n                ),\r\n              },\r\n          ];\r\n\r\n          return columns\r\n    }\r\n\r\n    \r\n    // onsubmitDrug = (e) => {\r\n    //     e.preventDefault();\r\n    //     this.setState({isloading:true})\r\n    //     this.props.form.validateFields((err, values) => {\r\n    //         if (!err) {\r\n    //             console.log(values);\r\n    //             createDrug(values)\r\n    //             .then(response =>{\r\n    //                 console.log(response.data);\r\n    //                 if(response.data){\r\n    //                     notification['success']({\r\n    //                         message: 'MEDTHREAT',\r\n    //                         description:\r\n    //                           'Drug Created Successfully',\r\n    //                       });\r\n    //                     this.props.form.resetFields();\r\n    //                     this.getAllDrugs()\r\n    //                 }\r\n    //             })\r\n    //             .catch((error)=> {\r\n    //                 console.log(\"Drug Error Response\");\r\n              \r\n    //                 notification['error']({\r\n    //                 message: 'MEDTHREAT',\r\n    //                 description:\r\n    //                     `Error Occured Creating Drug .`,\r\n    //                 });\r\n    //                 this.setState({isloading:false})\r\n    //                 console.log(error.response.status);\r\n        \r\n    //             });\r\n    //         }\r\n    //     });\r\n    // }\r\n\r\n    getAllUsers = () =>{\r\n        this.setState({isloading:true})\r\n        fetchAllUsers()\r\n        .then(response=>{\r\n            console.log(\"Users Response\");\r\n            console.log(response.data)\r\n            this.setState({users:response.data})\r\n            this.setState({isloading:false})\r\n        })\r\n        .catch((error)=> {\r\n            console.log(\"User Error Response\");\r\n      \r\n            notification['error']({\r\n            message: 'MEDTHREAT',\r\n            description:\r\n                `An Error Fetching Users .`,\r\n            });\r\n\r\n            this.setState({isloading:false})\r\n            console.log(error);\r\n\r\n        });\r\n    }\r\n\r\n    deleteDrug = (id)=>{\r\n        console.log( id)\r\n\r\n    }\r\n    cancelDrug = ()=>{\r\n\r\n    }\r\n\r\n    mapDrugTables = () =>{\r\n        let items = <tr style={{ width: '100%' }} className=\"col-md-12\" >No drug</tr>\r\n\r\n        if (this.state.drugs) {\r\n\r\n            items = this.state.drugs.map(drug => {\r\n              return (\r\n                <tr key={drug.id}>\r\n                    <td>{drug.name}</td>\r\n                    <td>{drug.amount}</td>\r\n                    <td>{drug.alias}</td>\r\n                    <td>\r\n                    <Popconfirm\r\n                        title=\"Are you sure delete this Item?\"\r\n                        onConfirm={(e)=>this.deleteDrug(drug)}\r\n                        onCancel={this.cancelDrug()}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <a href=\"#\" style={{margin:'5px'}} >Delete</a>\r\n                        {/* <a style={{margin:'5px'}} type=\"button\" class=\"btn btn-primary\">Update</a>     */}\r\n                    </Popconfirm>\r\n                        <button type=\"button\" class=\"btn btn-primary btn-sm\">Delete</button>\r\n\r\n                            {/* <Button className='m-1' color=\"primary\" size=\"xs\"\r\n                                onClick={() => { this.setPublicationUpdate(item) }}>\r\n                                Update\r\n                            </Button> */}\r\n                            {/* <Button className='m-1' color=\"danger\" size=\"xs\"\r\n                                onClick={() => { this.deleteItem(item) }}>\r\n                                Delete\r\n                            </Button> */}\r\n                    </td>  \r\n                </tr>\r\n              )\r\n            });\r\n        }\r\n\r\n        return items;\r\n\r\n    }\r\n\r\n  render() {\r\n    const bodystyle =  {\r\n        background: \"#f1f2f7\",\r\n        display: \"table\",\r\n        fontFamily: \"'Open Sans' sans-serif !important\",\r\n        fontSize: \"16px\",\r\n        width: \"100%\" }\r\n\r\n    return (\r\n        <div style={bodystyle}>\r\n        {/* <!-- Left Panel --> */}\r\n\r\n            <Navbar></Navbar>\r\n            {/* <!-- /#left-panel --> */}\r\n            {/* <!-- Left Panel --> */}\r\n\r\n            {/* <!-- Right Panel --> */}\r\n\r\n            <div  class=\"right-panel \">\r\n                <Header></Header>\r\n                {/* <!-- /header --> */}\r\n                {/* <!-- Header--> */}\r\n\r\n                <BreadCrumb menu=\"User\" submenu=\" \"></BreadCrumb>\r\n\r\n                <div class=\"content mt-3\">\r\n                    \r\n                    <div class=\"animated fadeIn\">\r\n                        <Spin spinning={this.state.isloading}>\r\n\r\n                            {/* Table for drugs */}\r\n                            <div class=\"row\">\r\n\r\n                            <div className=\"col-md-12\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header\">\r\n                                        <strong className=\"card-title\">Data Table</strong>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <Table columns={this.getTableHeader()} dataSource={this.state.users} />\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                        </Spin>\r\n\r\n                    </div>\r\n                </div>\r\n                {/* <!-- .content --> */}\r\n            </div>\r\n            {/* <!-- /#right-panel --> */}\r\n\r\n            {/* <!-- Right Panel --> */}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserPage;\r\n"]},"metadata":{},"sourceType":"module"}