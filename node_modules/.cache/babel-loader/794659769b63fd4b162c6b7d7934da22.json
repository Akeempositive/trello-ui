{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nimport _objectSpread from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/src/pages/doctor/drugpage/drug.js\";\nimport React, { Component } from 'react';\nimport Header from '../../../partials/header';\nimport Navbar from '../../../partials/navbar';\nimport BreadCrumb from '../../../partials/breadcrumb';\nimport { fetchAllDrugs } from './drug-api';\nvar FormItem = _Form.Item;\n\nvar DrugPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DrugPage, _Component);\n\n  function DrugPage() {\n    _classCallCheck(this, DrugPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DrugPage).apply(this, arguments));\n  }\n\n  _createClass(DrugPage, [{\n    key: \"render\",\n    value: function render() {\n      var AntWrappedDrug = _Form.create()(Drug);\n\n      return React.createElement(AntWrappedDrug, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return DrugPage;\n}(Component);\n\nvar Drug =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Drug, _Component2);\n\n  function Drug(props) {\n    var _this;\n\n    _classCallCheck(this, Drug);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Drug).call(this, props));\n\n    _this.onSubmitExperience = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          var loginRequest = Object.assign({}, values);\n          console.log(values);\n          var loginRequests = values;\n          console.log(loginRequest);\n          loginRequest.data = {};\n          console.log(loginRequest);\n\n          var logReq = _objectSpread({}, values);\n\n          console.log(logReq);\n        }\n      });\n    };\n\n    _this.getAllDrugs = function () {\n      _this.setState({\n        isloading: true\n      });\n\n      fetchAllDrugs().then(function (response) {\n        console.log(\"drug Response\");\n        console.log(response.data);\n\n        _this.setState({\n          drugs: response.data\n        });\n\n        _this.setState({\n          isloading: false\n        });\n      }).catch(function (error) {\n        console.log(\"drug Error Response\");\n\n        _notification['error']({\n          message: 'MEDTHREAT',\n          description: \"An Error Fetching Drug .\"\n        });\n\n        console.log(error.response.status);\n      });\n    };\n\n    _this.mapDrugTables = function () {\n      var items = React.createElement(\"tr\", {\n        style: {\n          width: '100%'\n        },\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"No drug\");\n\n      if (_this.state.drugs) {\n        items = _this.state.drugs.map(function (drug) {\n          return React.createElement(\"tr\", {\n            key: drug.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96\n            },\n            __self: this\n          }, drug.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, drug.amount), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, drug.alias), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            style: {\n              margin: '5px'\n            },\n            type: \"button\",\n            class: \"btn btn-primary btn-sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, \"Update\"), React.createElement(\"button\", {\n            type: \"button\",\n            class: \"btn btn-primary btn-sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, \"Delete\")));\n        });\n      }\n\n      return items;\n    };\n\n    _this.state = {\n      drugs: [],\n      isloading: true // this.onSubmitExperience = this.onSubmitExperience.bind(this);\n\n    };\n    return _this;\n  }\n\n  _createClass(Drug, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getAllDrugs();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var bodystyle = {\n        background: \"#f1f2f7\",\n        display: \"table\",\n        fontFamily: \"'Open Sans' sans-serif !important\",\n        fontSize: \"16px\",\n        width: \"100%\"\n      };\n      return React.createElement(\"div\", {\n        style: bodystyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"right-panel \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(BreadCrumb, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"content mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"col-lg-9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Drug\"), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \" Form\")), React.createElement(\"form\", {\n        onSubmit: this.onSubmitExperience,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"card-body card-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        class: \" form-control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Name\"), getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: 'Please input your Name!'\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"lock\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173\n          },\n          __self: this\n        }),\n        name: \"name\",\n        placeholder: \"Enter your Drug name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"company\",\n        class: \" form-control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Amount\"), getFieldDecorator('amount', {\n        rules: [{\n          required: true,\n          message: 'Please input Amount!'\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"lock\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }),\n        name: \"amount\",\n        placeholder: \"Enter your Amount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"company\",\n        class: \" form-control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Alias\"), getFieldDecorator('alias', {\n        rules: [{\n          required: true,\n          message: 'Please input Alias !'\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"lock\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }),\n        name: \"alias\",\n        placeholder: \"Enter your Drug Alias\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      })))), React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn pull-right btn-primary btn-flat m-b-30 m-t-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Register\"))))))), React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, \"Data Table\")), React.createElement(_Spin, {\n        spinning: this.state.isloading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        id: \"bootstrap-data-table-export\",\n        className: \"table table-striped table-bordered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Amount\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"Alias\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"Settings\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, this.mapDrugTables())))))))))));\n    }\n  }]);\n\n  return Drug;\n}(Component);\n\nexport default DrugPage;","map":{"version":3,"sources":["/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/src/pages/doctor/drugpage/drug.js"],"names":["React","Component","Header","Navbar","BreadCrumb","fetchAllDrugs","FormItem","Item","DrugPage","AntWrappedDrug","create","Drug","props","onSubmitExperience","e","preventDefault","form","validateFields","err","values","loginRequest","Object","assign","console","log","loginRequests","data","logReq","getAllDrugs","setState","isloading","then","response","drugs","catch","error","message","description","status","mapDrugTables","items","width","state","map","drug","id","name","amount","alias","margin","getFieldDecorator","bodystyle","background","display","fontFamily","fontSize","rules","required"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAAQC,aAAR,QAA4B,YAA5B;AAiBA,IAAMC,QAAQ,GAAG,MAAKC,IAAtB;;IAEMC,Q;;;;;;;;;;;;;6BACO;AACL,UAAMC,cAAc,GAAG,MAAKC,MAAL,GAAcC,IAAd,CAAvB;;AACA,aACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;;;EANkBV,S;;IASjBU,I;;;;;AACF,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8EAAMA,KAAN;;AADe,UAcnBC,kBAdmB,GAcE,UAACC,CAAD,EAAO;AACxBA,MAAAA,CAAC,CAACC,cAAF;;AACA,YAAKH,KAAL,CAAWI,IAAX,CAAgBC,cAAhB,CAA+B,UAACC,GAAD,EAAMC,MAAN,EAAiB;AAC5C,YAAI,CAACD,GAAL,EAAU;AACN,cAAME,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,MAAlB,CAArB;AACAI,UAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,cAAIM,aAAa,GAACN,MAAlB;AACAI,UAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;AACAA,UAAAA,YAAY,CAACM,IAAb,GAAkB,EAAlB;AACAH,UAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;;AACA,cAAMO,MAAM,qBAAOR,MAAP,CAAZ;;AACAI,UAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AAEH;AACJ,OAZD;AAaH,KA7BkB;;AAAA,UA+BnBC,WA/BmB,GA+BL,YAAK;AACf,YAAKC,QAAL,CAAc;AAACC,QAAAA,SAAS,EAAC;AAAX,OAAd;;AACAzB,MAAAA,aAAa,GACZ0B,IADD,CACM,UAAAC,QAAQ,EAAE;AACZT,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAQ,CAACN,IAArB;;AACA,cAAKG,QAAL,CAAc;AAACI,UAAAA,KAAK,EAACD,QAAQ,CAACN;AAAhB,SAAd;;AACA,cAAKG,QAAL,CAAc;AAACC,UAAAA,SAAS,EAAC;AAAX,SAAd;AACH,OAND,EAOCI,KAPD,CAOO,UAACC,KAAD,EAAU;AACbZ,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;;AAEA,sBAAa,OAAb,EAAsB;AACtBY,UAAAA,OAAO,EAAE,WADa;AAEtBC,UAAAA,WAAW;AAFW,SAAtB;;AAMAd,QAAAA,OAAO,CAACC,GAAR,CAAYW,KAAK,CAACH,QAAN,CAAeM,MAA3B;AAEH,OAlBD;AAmBH,KApDkB;;AAAA,UAsDnBC,aAtDmB,GAsDH,YAAK;AACjB,UAAIC,KAAK,GAAG;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAX;AAA8B,QAAA,SAAS,EAAC,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAZ;;AAEA,UAAI,MAAKC,KAAL,CAAWT,KAAf,EAAsB;AAElBO,QAAAA,KAAK,GAAG,MAAKE,KAAL,CAAWT,KAAX,CAAiBU,GAAjB,CAAqB,UAAAC,IAAI,EAAI;AACnC,iBACE;AAAI,YAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKD,IAAI,CAACE,IAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKF,IAAI,CAACG,MAAV,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKH,IAAI,CAACI,KAAV,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAQ,YAAA,KAAK,EAAE;AAACC,cAAAA,MAAM,EAAC;AAAR,aAAf;AAA+B,YAAA,IAAI,EAAC,QAApC;AAA6C,YAAA,KAAK,EAAC,wBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,KAAK,EAAC,wBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,CAJJ,CADF;AAoBD,SArBO,CAAR;AAsBH;;AAED,aAAOT,KAAP;AAEH,KArFkB;;AAEf,UAAKE,KAAL,GAAW;AACPT,MAAAA,KAAK,EAAC,EADC;AAEPH,MAAAA,SAAS,EAAC,IAFH,CAIP;;AAJO,KAAX;AAFe;AAQlB;;;;wCAEkB;AACf,WAAKF,WAAL;AACH;;;6BA2EM;AAAA,UACAsB,iBADA,GACqB,KAAKtC,KAAL,CAAWI,IADhC,CACAkC,iBADA;AAEP,UAAMC,SAAS,GAAI;AACfC,QAAAA,UAAU,EAAE,SADG;AAEfC,QAAAA,OAAO,EAAE,OAFM;AAGfC,QAAAA,UAAU,EAAE,mCAHG;AAIfC,QAAAA,QAAQ,EAAE,MAJK;AAKfd,QAAAA,KAAK,EAAE;AALQ,OAAnB;AAOA,aACI;AAAK,QAAA,KAAK,EAAEU,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EASI;AAAM,QAAA,KAAK,EAAC,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAKI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAOI;AAAK,QAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,KAAK,EAAC,iBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CADJ,EAKI;AAAM,QAAA,QAAQ,EAAE,KAAKtC,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAC,sBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAIKqC,iBAAiB,CAAC,UAAD,EAAa;AAC3BM,QAAAA,KAAK,EAAE,CACH;AACIC,UAAAA,QAAQ,EAAE,IADd;AAEIrB,UAAAA,OAAO,EAAE;AAFb,SADG;AADoB,OAAb,CAAjB,CAQG;AACI,QAAA,MAAM,EAAE;AAAM,UAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADZ;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,WAAW,EAAC,sBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARH,CAJL,CADJ,CADJ,EAuBI;AAAK,QAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,GAAG,EAAC,SAAX;AAAqB,QAAA,KAAK,EAAC,qBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAIKc,iBAAiB,CAAC,QAAD,EAAW;AACzBM,QAAAA,KAAK,EAAE,CACH;AACIC,UAAAA,QAAQ,EAAE,IADd;AAEIrB,UAAAA,OAAO,EAAE;AAFb,SADG;AADkB,OAAX,CAAjB,CAQG;AACI,QAAA,MAAM,EAAE;AAAM,UAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADZ;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,WAAW,EAAC,mBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARH,CAJL,CADJ,CAvBJ,EA8CI;AAAK,QAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,GAAG,EAAC,SAAX;AAAqB,QAAA,KAAK,EAAC,qBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAIKc,iBAAiB,CAAC,OAAD,EAAU;AACxBM,QAAAA,KAAK,EAAE,CACH;AACIC,UAAAA,QAAQ,EAAE,IADd;AAEIrB,UAAAA,OAAO,EAAE;AAFb,SADG;AADiB,OAAV,CAAjB,CAQG;AACI,QAAA,MAAM,EAAE;AAAM,UAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADZ;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,WAAW,EAAC,uBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARH,CAJL,CADJ,CA9CJ,EAqEI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,mDAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CArEJ,CADJ,CALJ,CADJ,CADJ,CADJ,EA0FI;AAAK,QAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CADJ,EAII;AAAM,QAAA,QAAQ,EAAE,KAAKM,KAAL,CAAWZ,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,EAAE,EAAC,6BAAV;AAAwC,QAAA,SAAS,EAAC,oCAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,CADJ,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKS,aAAL,EADL,CATJ,CADJ,CADJ,CAJJ,CADJ,CAFA,CA1FJ,CAFJ,CAPJ,CATJ,CADJ;AAqJD;;;;EAtPgBtC,S;;AAyPnB,eAAeO,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport Header from '../../../partials/header';\nimport Navbar from '../../../partials/navbar'\nimport BreadCrumb from '../../../partials/breadcrumb'\nimport {fetchAllDrugs} from './drug-api'\nimport {\n    Form,\n    Input,\n    Tooltip,\n    Icon,\n    Cascader,\n    Select,\n    Row,\n    Col,\n    Checkbox,\n    Button,\n    AutoComplete,\n    Spin,\n    notification,\n  } from 'antd';\n\nconst FormItem = Form.Item;\n\nclass DrugPage extends Component {\n    render() {\n        const AntWrappedDrug = Form.create()(Drug);\n        return (\n            <AntWrappedDrug />           \n        );\n    }\n}\n\nclass Drug extends Component  {\n    constructor(props) {\n        super(props);\n        this.state={\n            drugs:[],\n            isloading:true\n        }\n            // this.onSubmitExperience = this.onSubmitExperience.bind(this);\n\n    }\n\n    componentDidMount(){\n        this.getAllDrugs()\n    }\n\n    onSubmitExperience = (e) => {\n        e.preventDefault();\n        this.props.form.validateFields((err, values) => {\n            if (!err) {\n                const loginRequest = Object.assign({}, values);\n                console.log(values);\n                let loginRequests=values;\n                console.log(loginRequest);\n                loginRequest.data={};\n                console.log(loginRequest);\n                const logReq = {...values};\n                console.log(logReq);\n        \n            }\n        });\n    }\n\n    getAllDrugs = () =>{\n        this.setState({isloading:true})\n        fetchAllDrugs()\n        .then(response=>{\n            console.log(\"drug Response\");\n            console.log(response.data)\n            this.setState({drugs:response.data})\n            this.setState({isloading:false})\n        })\n        .catch((error)=> {\n            console.log(\"drug Error Response\");\n      \n            notification['error']({\n            message: 'MEDTHREAT',\n            description:\n                `An Error Fetching Drug .`,\n            });\n            \n            console.log(error.response.status);\n\n        });\n    }\n\n    mapDrugTables = () =>{\n        let items = <tr style={{ width: '100%' }} className=\"col-md-12\" >No drug</tr>\n\n        if (this.state.drugs) {\n\n            items = this.state.drugs.map(drug => {\n              return (\n                <tr key={drug.id}>\n                    <td>{drug.name}</td>\n                    <td>{drug.amount}</td>\n                    <td>{drug.alias}</td>\n                    <td>\n                        <button style={{margin:'5px'}} type=\"button\" class=\"btn btn-primary btn-sm\">Update</button>\n                        <button type=\"button\" class=\"btn btn-primary btn-sm\">Delete</button>\n\n                            {/* <Button className='m-1' color=\"primary\" size=\"xs\"\n                                onClick={() => { this.setPublicationUpdate(item) }}>\n                                Update\n                            </Button> */}\n                            {/* <Button className='m-1' color=\"danger\" size=\"xs\"\n                                onClick={() => { this.deleteItem(item) }}>\n                                Delete\n                            </Button> */}\n                    </td>  \n                </tr>\n              )\n            });\n        }\n\n        return items;\n\n    }\n\n  render() {\n    const {getFieldDecorator} = this.props.form;\n    const bodystyle =  {\n        background: \"#f1f2f7\",\n        display: \"table\",\n        fontFamily: \"'Open Sans' sans-serif !important\",\n        fontSize: \"16px\",\n        width: \"100%\" }\n\n    return (\n        <div style={bodystyle}>\n        {/* <!-- Left Panel --> */}\n\n            <Navbar></Navbar>\n            {/* <!-- /#left-panel --> */}\n            {/* <!-- Left Panel --> */}\n\n            {/* <!-- Right Panel --> */}\n\n            <div  class=\"right-panel \">\n                <Header></Header>\n                {/* <!-- /header --> */}\n                {/* <!-- Header--> */}\n\n                <BreadCrumb></BreadCrumb>\n\n                <div class=\"content mt-3\">\n                    \n                    <div class=\"animated fadeIn\">\n                        <div className=\"row\">\n                            <div class=\"col-lg-9\">\n                                <div class=\"card\">\n                                    <div class=\"card-header\">\n                                        <strong>Drug</strong>\n                                        <small> Form</small>\n                                    </div>\n                                    <form onSubmit={this.onSubmitExperience}>\n                                        <div class=\"card-body card-block\">\n                                            <div class=\"form-group\">\n                                                <FormItem>\n                                                    <label  class=\" form-control-label\">\n                                                        Name\n                                                    </label>\n                                                    {getFieldDecorator('password', {\n                                                        rules: [\n                                                            {\n                                                                required: true,\n                                                                message: 'Please input your Name!'\n                                                            }\n                                                        ]\n                                                    })(\n                                                        <Input\n                                                            prefix={<Icon type=\"lock\"/>}\n                                                            name=\"name\"\n                                                            placeholder=\"Enter your Drug name\"\n                                                        />\n\n                                                    )}\n                                                </FormItem>    \n                                            </div>\n                                            <div class=\"form-group\">\n                                                <FormItem>\n                                                    <label for=\"company\" class=\" form-control-label\">\n                                                        Amount\n                                                    </label>\n                                                    {getFieldDecorator('amount', {\n                                                        rules: [\n                                                            {\n                                                                required: true,\n                                                                message: 'Please input Amount!'\n                                                            }\n                                                        ]\n                                                    })(\n                                                        <Input\n                                                            prefix={<Icon type=\"lock\"/>}\n                                                            name=\"amount\"\n                                                            placeholder=\"Enter your Amount\"\n                                                        />\n\n                                                    )}\n                                                </FormItem>    \n                                            </div>\n\n                                            <div class=\"form-group\">\n                                                <FormItem>\n                                                    <label for=\"company\" class=\" form-control-label\">\n                                                        Alias\n                                                    </label>\n                                                    {getFieldDecorator('alias', {\n                                                        rules: [\n                                                            {\n                                                                required: true,\n                                                                message: 'Please input Alias !'\n                                                            }\n                                                        ]\n                                                    })(\n                                                        <Input\n                                                            prefix={<Icon type=\"lock\"/>}\n                                                            name=\"alias\"\n                                                            placeholder=\"Enter your Drug Alias\"\n                                                        />\n\n                                                    )}\n                                                </FormItem>    \n                                            </div>\n\n                                            <FormItem>\n                                                <button type=\"submit\" className=\"btn pull-right btn-primary btn-flat m-b-30 m-t-30\">Register</button>\n                                            </FormItem>\n\n                                        </div>\n                                    </form>\n                                </div>\n\n                            </div>\n                        </div>\n\n                        {/* Table for drugs */}\n                        <div class=\"row\">\n\n                        <div className=\"col-md-12\">\n                            <div className=\"card\">\n                                <div className=\"card-header\">\n                                    <strong className=\"card-title\">Data Table</strong>\n                                </div>\n                                <Spin spinning={this.state.isloading}>\n                                    <div className=\"card-body\">\n                                        <table id=\"bootstrap-data-table-export\" className=\"table table-striped table-bordered\">\n                                            <thead>\n                                                <tr>\n                                                    <th>Name</th>\n                                                    <th>Amount</th>\n                                                    <th>Alias</th>\n                                                    <th>Settings</th>\n                                                </tr>\n                                            </thead>\n                                            <tbody>\n                                                {this.mapDrugTables()}  \n                                            </tbody>\n                                        </table>\n                                    </div>\n                                </Spin>\n                                \n                            </div>\n                        </div>\n\n\n                    </div>\n                                \n                    </div>\n                </div>\n                {/* <!-- .content --> */}\n            </div>\n            {/* <!-- /#right-panel --> */}\n\n            {/* <!-- Right Panel --> */}\n        </div>\n    );\n  }\n}\n\nexport default DrugPage;\n"]},"metadata":{},"sourceType":"module"}