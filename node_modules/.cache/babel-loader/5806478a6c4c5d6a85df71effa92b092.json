{"ast":null,"code":"import _objectSpread from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from 'axios';\nimport { APP_ACCESS_TOKEN, APP_CLIENT, APP_PASS, GETMETHOD, POSTMETHOD, PUTMETHOD, USER_ACCESS_TOKEN, USER_AUTHORITIES, USER_TOKEN_EXPIRATION, TOKEN_DATE } from '../constants';\nimport jwtDecode from \"jwt-decode\";\nexport var axiosRequest = function axiosRequest(options) {\n  var setHeader = {};\n\n  if (options.useBasic) {\n    var tempHeaders = {\n      Authorization: \"\".concat(getBasicAuth(APP_CLIENT, APP_PASS))\n    };\n    setHeader = _objectSpread({}, setHeader, tempHeaders);\n  }\n\n  if (options.useAppAccessToken && localStorage.getItem(APP_ACCESS_TOKEN)) {\n    var _tempHeaders = {\n      Authorization: \"Bearer \".concat(localStorage.getItem(APP_ACCESS_TOKEN))\n    };\n    setHeader = _objectSpread({}, setHeader, _tempHeaders);\n  }\n\n  if (options.headerType) {\n    var _tempHeaders2 = {\n      'Content-Type': options.headerType\n    };\n    setHeader = _objectSpread({}, setHeader, _tempHeaders2);\n  } // if(options.useClientToken){\n  //     let tempHeaders={Authorization:`Bearer ${getClientToken()}`}\n  //     setHeader = {...setHeader, ...tempHeaders}\n  // }\n\n\n  options.headerRequest = {\n    headers: setHeader // options.headerRequest.data = {}\n\n  };\n  console.log(\"options.headerRequest\");\n  console.log(options.headerRequest);\n  var apiRequest = null;\n\n  switch (options.method) {\n    case GETMETHOD:\n      apiRequest = axios.get(options.url, options.headerRequest);\n      break;\n\n    case POSTMETHOD:\n      apiRequest = axios.post(options.url, options.data, options.headerRequest);\n      break;\n\n    case PUTMETHOD:\n      apiRequest = axios.put(options.url, options.data, options.headerRequest);\n      break;\n\n    default:\n      apiRequest = null;\n  }\n\n  return apiRequest;\n};\n\nvar getBasicAuth = function getBasicAuth(username, password) {\n  var hash = new Buffer(username + ':' + password).toString('base64');\n  console.log(hash);\n  return \"Basic \" + hash;\n};\n\nexport var axiosLoginRequest = function axiosLoginRequest(options) {\n  var setHeader = {};\n\n  if (options.useBasic) {\n    var tempHeaders = {\n      \"Authorization\": \"\".concat(getBasicAuth(APP_CLIENT, APP_PASS))\n    };\n    setHeader = _objectSpread({}, setHeader, tempHeaders);\n  }\n\n  if (options.headerType) {\n    var _tempHeaders3 = {\n      'Content-Type': options.headerType\n    };\n    setHeader = _objectSpread({}, setHeader, _tempHeaders3);\n  }\n\n  var bas = getBasicAuth(APP_CLIENT, APP_PASS);\n  var head = {\n    headers: {\n      \"Authorization\": bas,\n      'Content-Type': \"application/x-www-form-urlencoded\"\n    },\n    data: {} // options.headerRequest = {headers:setHeader, data:{}}\n    // options.headerRequest.data = {}\n\n  };\n  console.log(\"options.headerRequest\");\n  console.log(head);\n  var apiRequest = axios.post(options.url, options.data, head);\n  return apiRequest;\n};\nexport var storeJwtAccessToken = function storeJwtAccessToken(accessToken) {\n  localStorage.setItem(USER_ACCESS_TOKEN, accessToken);\n  var decodedToken = jwtDecode(accessToken);\n  localStorage.setItem(USER_AUTHORITIES, decodedToken.authorities);\n};\nexport var storeJwtExpireToken = function storeJwtExpireToken(tokenExpirationTime) {\n  localStorage.setItem(TOKEN_DATE, Date.now());\n  localStorage.setItem(USER_TOKEN_EXPIRATION, tokenExpirationTime);\n};\nexport var isUserAuthenticated = function isUserAuthenticated() {\n  var accessToken = localStorage.getItem(USER_ACCESS_TOKEN);\n\n  if (accessToken == null) {\n    return false;\n  } else if (accessToken) {\n    var startDate = localStorage.getItem(TOKEN_DATE);\n    var endDate = Date.now();\n    var timeExpiration = localStorage.getItem(USER_TOKEN_EXPIRATION);\n    console.log(\"TimeExpiration\");\n    console.log(timeExpiration);\n    var timeDifference = endDate - startDate;\n    var timeDifferenceInSeconds = timeDifference / 1000;\n    console.log(\"TimeDifferenceInSeconds\");\n    console.log(timeDifferenceInSeconds);\n\n    if (timeDifferenceInSeconds > timeExpiration) {\n      return false;\n    }\n\n    return true;\n  }\n\n  return false;\n};","map":{"version":3,"sources":["/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/src/utils/api-utils.js"],"names":["axios","APP_ACCESS_TOKEN","APP_CLIENT","APP_PASS","GETMETHOD","POSTMETHOD","PUTMETHOD","USER_ACCESS_TOKEN","USER_AUTHORITIES","USER_TOKEN_EXPIRATION","TOKEN_DATE","jwtDecode","axiosRequest","options","setHeader","useBasic","tempHeaders","Authorization","getBasicAuth","useAppAccessToken","localStorage","getItem","headerType","headerRequest","headers","console","log","apiRequest","method","get","url","post","data","put","username","password","hash","Buffer","toString","axiosLoginRequest","bas","head","storeJwtAccessToken","accessToken","setItem","decodedToken","authorities","storeJwtExpireToken","tokenExpirationTime","Date","now","isUserAuthenticated","startDate","endDate","timeExpiration","timeDifference","timeDifferenceInSeconds"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {APP_ACCESS_TOKEN, APP_CLIENT, APP_PASS, GETMETHOD,POSTMETHOD,PUTMETHOD,USER_ACCESS_TOKEN,USER_AUTHORITIES,USER_TOKEN_EXPIRATION,TOKEN_DATE} from '../constants'\nimport jwtDecode from \"jwt-decode\";\n\n export const axiosRequest = options =>{\n    let setHeader = {}\n    \n\n    if (options.useBasic) {\n        let tempHeaders={Authorization:`${getBasicAuth(APP_CLIENT, APP_PASS)}`}\n        setHeader = {...setHeader, ...tempHeaders}\n    }\n\n    if (options.useAppAccessToken && localStorage.getItem(APP_ACCESS_TOKEN)) {\n        let tempHeaders = {Authorization:`Bearer ${localStorage.getItem(APP_ACCESS_TOKEN)}`}\n        setHeader = {...setHeader, ...tempHeaders}\n    }\n\n    if(options.headerType){\n        let tempHeaders = {'Content-Type' : options.headerType}\n        setHeader = {...setHeader, ...tempHeaders}\n    }\n\n    \n\n    // if(options.useClientToken){\n    //     let tempHeaders={Authorization:`Bearer ${getClientToken()}`}\n    //     setHeader = {...setHeader, ...tempHeaders}\n    // }\n\n    options.headerRequest = {headers:setHeader}\n    // options.headerRequest.data = {}\n\n    console.log(\"options.headerRequest\");\n\n    console.log(options.headerRequest);\n\n    let apiRequest = null;\n\n    switch (options.method) {\n        case GETMETHOD:\n            apiRequest = axios.get(options.url,options.headerRequest)\n        break;\n        \n        case POSTMETHOD:\n            apiRequest= axios.post(options.url, options.data, options.headerRequest);\n        break;\n        \n        case PUTMETHOD:\n            apiRequest= axios.put(options.url, options.data,options.headerRequest);\n        break;\n\n        default:\n          apiRequest = null;\n    }\n\n    return apiRequest;\n\n}\n\nconst getBasicAuth = (username, password) => {\n    const hash = new Buffer(username + ':' + password).toString('base64');\n    console.log(hash);\n    return \"Basic \" + hash;\n};\n\nexport const axiosLoginRequest = options =>{\n    let setHeader = {}\n    \n\n    if (options.useBasic) {\n        let tempHeaders={\"Authorization\":`${getBasicAuth(APP_CLIENT, APP_PASS)}`}\n        setHeader = {...setHeader, ...tempHeaders}\n    }\n\n    \n    if(options.headerType){\n        let tempHeaders = {'Content-Type' : options.headerType}\n        setHeader = {...setHeader, ...tempHeaders}\n    }\n\n    let bas = getBasicAuth(APP_CLIENT, APP_PASS)\n    let head = {headers:{\"Authorization\": bas,'Content-Type': \"application/x-www-form-urlencoded\"}, data:{}}\n    // options.headerRequest = {headers:setHeader, data:{}}\n    // options.headerRequest.data = {}\n\n    console.log(\"options.headerRequest\");\n\n    console.log(head);\n\n    let apiRequest= axios.post(options.url, options.data, head);\n\n    return apiRequest;\n\n}\n\nexport const storeJwtAccessToken = (accessToken)=>{\n    localStorage.setItem(USER_ACCESS_TOKEN, accessToken);\n    let decodedToken = jwtDecode(accessToken);\n    localStorage.setItem(USER_AUTHORITIES,decodedToken.authorities)\n\n}\nexport const storeJwtExpireToken = (tokenExpirationTime) =>{\n    localStorage.setItem(TOKEN_DATE, Date.now())\n    localStorage.setItem(USER_TOKEN_EXPIRATION,tokenExpirationTime)  \n}\n\nexport const isUserAuthenticated = () =>{\n    let accessToken = localStorage.getItem(USER_ACCESS_TOKEN);\n    if(accessToken==null){\n        return false\n    }\n    else if(accessToken){\n        let startDate = localStorage.getItem(TOKEN_DATE);\n        let endDate = Date.now();\n        let timeExpiration = localStorage.getItem(USER_TOKEN_EXPIRATION);\n        console.log(\"TimeExpiration\");\n        console.log(timeExpiration)\n        let timeDifference = endDate-startDate;\n        let timeDifferenceInSeconds = timeDifference/1000\n        console.log(\"TimeDifferenceInSeconds\")\n        console.log(timeDifferenceInSeconds)\n\n        if(timeDifferenceInSeconds > timeExpiration){\n            return false;\n        }\n        return true;\n    }\n    \n    return false;\n\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}