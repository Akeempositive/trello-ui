{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat-ui/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat-ui/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat-ui/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport axios from 'axios';\nimport { APP_ACCESS_TOKEN, API_BASE_URL, APP_CLIENT, APP_PASS, PAGE_SIZE, CLIENT_TOKEN, GETMETHOD, POSTMETHOD, PUTMETHOD, DELETEMETHOD } from '../../constants';\n\nvar axiosRequest = function axiosRequest(options) {\n  var setHeader = {};\n\n  if (options.useBasic) {\n    var tempHeaders = {\n      Authorization: \"\".concat(getBasicAuth(APP_CLIENT, APP_PASS))\n    };\n    setHeader = _objectSpread({}, setHeader, tempHeaders); // headers.set('Content-Type', 'application/x-www-form-urlencoded;charset=UTF-8');\n  }\n\n  if (options.useAppAccessToken && localStorage.getItem(APP_ACCESS_TOKEN)) {\n    var _tempHeaders = {\n      Authorization: \"Bearer \".concat(localStorage.getItem(APP_ACCESS_TOKEN))\n    };\n    setHeader = _objectSpread({}, setHeader, _tempHeaders);\n  } // if(options.useClientToken){\n  //     let tempHeaders={Authorization:`Bearer ${getClientToken()}`}\n  //     setHeader = {...setHeader, ...tempHeaders}\n  // }\n\n\n  options.headerRequest = {\n    headers: setHeader\n  };\n  var apiRequest = null;\n\n  switch (options.method) {\n    case GETMETHOD:\n      apiRequest = axios.get(options.url, options.headerRequest);\n      break;\n\n    case POSTMETHOD:\n      apiRequest = axios.post(options.url, options.data, options.headerRequest);\n      break;\n\n    case PUTMETHOD:\n      apiRequest = axios.put(options.url, options.data, options.headerRequest);\n      break;\n\n    default:\n      apiRequest = null;\n  }\n\n  return apiRequest;\n};\n\nexport function login(loginRequest) {\n  loginRequest.grant_type = 'password';\n  loginRequest.scope = 'profile';\n  var formBody = [];\n\n  for (var property in loginRequest) {\n    var encodedKey = encodeURIComponent(property);\n    var encodedValue = encodeURIComponent(loginRequest[property]);\n    formBody.push(encodedKey + \"=\" + encodedValue);\n  }\n\n  formBody = formBody.join(\"&\");\n  return axiosRequest({\n    url: API_BASE_URL + '/oauth/token',\n    method: POSTMETHOD,\n    body: formBody,\n    useBasic: true\n  });\n}\n\nvar getBasicAuthentication =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var formData;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // const options =  \n            // { headers:\n            //      {'Content-Type': 'application/json', 'Authorization': `${getBasicAuth(APP_CLIENT, APP_PASS)}` } \n            // };\n            formData = new FormData();\n            formData.append(\"grant_type\", \"client_credentials\"); // let data = {\"grant_type\":\"client_credentials\"}\n            // this doesnt work\n            // return axios.post(`${API_BASE_URL}/oauth/token`,formData, options)\n\n            _context.next = 4;\n            return axiosRequest({\n              useBasic: true,\n              data: formData,\n              url: \"\".concat(API_BASE_URL, \"/oauth/token\"),\n              method: POSTMETHOD\n            }).then(function (response) {\n              console.log(\"calling getBasicAuthentication\");\n              localStorage.setItem(APP_ACCESS_TOKEN, response.data.access_token);\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getBasicAuthentication() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport var signUp = function signUp(form) {\n  console.log(\"signUp\");\n  getBasicAuthentication();\n  return axiosRequest({\n    useAppAccessToken: true,\n    data: form,\n    url: \"\".concat(API_BASE_URL, \"/api/v1/user/create-sign-up\"),\n    method: POSTMETHOD\n  }).then(function (response) {\n    console.log(response);\n  }).catch(function (error) {\n    if (error.response) {\n      console.log(error.response);\n\n      if (error.response.data.status_code == 401) {// redirect\n        // this.setMyRoute('/')\n      }\n\n      localStorage.clear();\n    }\n  });\n  ;\n};\n\nvar getBasicAuth = function getBasicAuth(username, password) {\n  var hash = new Buffer(username + ':' + password).toString('base64');\n  console.log(hash);\n  return \"Basic \" + hash;\n};","map":{"version":3,"sources":["/Users/ddada/Documents/danpersonal/livejavaproject/medthreat-ui/src/pages/signup/login-api.js"],"names":["axios","APP_ACCESS_TOKEN","API_BASE_URL","APP_CLIENT","APP_PASS","PAGE_SIZE","CLIENT_TOKEN","GETMETHOD","POSTMETHOD","PUTMETHOD","DELETEMETHOD","axiosRequest","options","setHeader","useBasic","tempHeaders","Authorization","getBasicAuth","useAppAccessToken","localStorage","getItem","headerRequest","headers","apiRequest","method","get","url","post","data","put","login","loginRequest","grant_type","scope","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","body","getBasicAuthentication","formData","FormData","append","then","response","console","log","setItem","access_token","signUp","form","catch","error","status_code","clear","username","password","hash","Buffer","toString"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {APP_ACCESS_TOKEN,API_BASE_URL, APP_CLIENT, APP_PASS, PAGE_SIZE, CLIENT_TOKEN,GETMETHOD,POSTMETHOD,PUTMETHOD,DELETEMETHOD} from '../../constants';\n\n\nconst axiosRequest = options =>{\n    let setHeader = {}\n    \n\n    if (options.useBasic) {\n        let tempHeaders={Authorization:`${getBasicAuth(APP_CLIENT, APP_PASS)}`}\n        setHeader = {...setHeader, ...tempHeaders}\n        // headers.set('Content-Type', 'application/x-www-form-urlencoded;charset=UTF-8');\n    }\n\n    if (options.useAppAccessToken && localStorage.getItem(APP_ACCESS_TOKEN)) {\n        let tempHeaders = {Authorization:`Bearer ${localStorage.getItem(APP_ACCESS_TOKEN)}`}\n        setHeader = {...setHeader, ...tempHeaders}\n    }\n\n    // if(options.useClientToken){\n    //     let tempHeaders={Authorization:`Bearer ${getClientToken()}`}\n    //     setHeader = {...setHeader, ...tempHeaders}\n    // }\n\n    options.headerRequest = {headers:setHeader}\n\n    let apiRequest = null;\n\n    switch (options.method) {\n        case GETMETHOD:\n            apiRequest = axios.get(options.url,options.headerRequest)\n        break;\n        \n        case POSTMETHOD:\n            apiRequest= axios.post(options.url, options.data, options.headerRequest);\n        break;\n        \n        case PUTMETHOD:\n            apiRequest= axios.put(options.url, options.data,options.headerRequest);\n        break;\n\n        default:\n          apiRequest = null;\n    }\n\n    return apiRequest;\n\n}\n\nexport function login(loginRequest) {\n    loginRequest.grant_type = 'password';\n    loginRequest.scope = 'profile';\n\n    let formBody = [];\n    for (let property in loginRequest) {\n        let encodedKey = encodeURIComponent(property);\n        let encodedValue = encodeURIComponent(loginRequest[property]);\n        formBody.push(encodedKey + \"=\" + encodedValue);\n    }\n    formBody = formBody.join(\"&\");\n\n    return axiosRequest({\n        url: API_BASE_URL + '/oauth/token',\n        method: POSTMETHOD,\n        body: formBody,\n        useBasic: true\n    });\n} \n\nconst getBasicAuthentication = async ()=>{\n    // const options =  \n    // { headers:\n    //      {'Content-Type': 'application/json', 'Authorization': `${getBasicAuth(APP_CLIENT, APP_PASS)}` } \n    // };\n    const formData = new FormData();\n    formData.append(\"grant_type\",\"client_credentials\")\n    // let data = {\"grant_type\":\"client_credentials\"}\n    // this doesnt work\n    // return axios.post(`${API_BASE_URL}/oauth/token`,formData, options)\n\n    await axiosRequest({\n        useBasic: true,\n        data: formData,\n        url: `${API_BASE_URL}/oauth/token`,\n        method: POSTMETHOD\n    }).then(response =>{\n        console.log(\"calling getBasicAuthentication\")\n        localStorage.setItem(APP_ACCESS_TOKEN, response.data.access_token);\n\n    });\n}\n\nexport const signUp=(form)=>{\n    console.log(\"signUp\")\n     getBasicAuthentication()\n    \n    return axiosRequest({\n        useAppAccessToken: true,\n        data: form,\n        url: `${API_BASE_URL}/api/v1/user/create-sign-up`,\n        method: POSTMETHOD\n    }).then(response=>{\n        console.log(response);\n    }).\n    catch((error)=> {\n        if(error.response){\n          console.log(error.response);\n          if(error.response.data.status_code == 401){\n            // redirect\n            // this.setMyRoute('/')\n          }            \n          localStorage.clear()\n        }\n    });; \n}\n\nconst getBasicAuth = (username, password) => {\n    const hash = new Buffer(username + ':' + password).toString('base64');\n    console.log(hash);\n    return \"Basic \" + hash;\n};"]},"metadata":{},"sourceType":"module"}