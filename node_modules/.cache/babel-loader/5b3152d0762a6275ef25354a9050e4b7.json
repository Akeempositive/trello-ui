{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/divider/style\";\nimport _Divider from \"antd/es/divider\";\nimport \"antd/es/avatar/style\";\nimport _Avatar from \"antd/es/avatar\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/checkbox/style\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nimport _classCallCheck from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nvar _jsxFileName = \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/src/pages/doctor/userinfo/userinfo.js\";\nimport React, { Component } from 'react';\nimport Header from '../../../partials/header';\nimport Navbar from '../../../partials/navbar';\nimport BreadCrumb from '../../../partials/breadcrumb';\nimport { fetchOneUser, fetchOneUserAuditTrail, fetchAllroles } from './userinfo-api';\nimport AuditTrailTable from '../../../common/AuditTableComponent';\nvar Meta = _Card.Meta;\n\nvar UserInfoPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserInfoPage, _Component);\n\n  function UserInfoPage(props) {\n    var _this;\n\n    _classCallCheck(this, UserInfoPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserInfoPage).call(this, props));\n\n    _this.getSingleUser = function (userId) {\n      _this.setState({\n        isUserloading: true\n      });\n\n      fetchOneUser(userId).then(function (response) {\n        console.log(\"Users Response\");\n        console.log(response.data);\n\n        _this.setState({\n          user: response.data\n        });\n\n        _this.setState({\n          isUserloading: false\n        });\n      }).catch(function (error) {\n        console.log(\"User Error Response\");\n\n        _notification['error']({\n          message: 'MEDTHREAT',\n          description: \"An Error Fetching User .\"\n        });\n\n        _this.setState({\n          isUserloading: false\n        });\n\n        console.log(error);\n      });\n    };\n\n    _this.getSingleUserAuditTrails = function (userId) {\n      _this.setState({\n        isloading: true\n      });\n\n      fetchOneUserAuditTrail(userId).then(function (response) {\n        console.log(\"Audit one Response\");\n        console.log(response.data);\n\n        _this.setState({\n          auditTrails: response.data\n        });\n\n        _this.setState({\n          isloading: false\n        });\n      }).catch(function (error) {\n        console.log(\"Audit Error Response\");\n\n        _notification['error']({\n          message: 'MEDTHREAT',\n          description: \"An Error Fetching Audit Trail .\"\n        });\n\n        _this.setState({\n          isloading: false\n        });\n\n        console.log(error);\n      });\n    };\n\n    _this.getAccontLockedInfo = function (block) {\n      var badge = {\n        clazz: \"badge badge-info\",\n        display: \"Active\"\n      };\n\n      if (block == 1) {\n        badge = {\n          clazz: \"badge badge-danger\",\n          display: \"Blocked\"\n        };\n      }\n\n      return React.createElement(\"span\", {\n        className: badge.clazz,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, badge.display);\n    };\n\n    _this.onSelectRole = function (roles) {\n      _notification['error']({\n        message: 'MEDTHREAT',\n        description: \"\".concat(roles.length, \" Roles Selected .\")\n      });\n\n      _this.setState({\n        newUserRoles: roles\n      });\n\n      console.log('checked = ', roles);\n    };\n\n    _this.addRolesToUser = function () {\n      _this.setState({\n        visible: false\n      });\n\n      var userRoles = _this.state.user.roles;\n      var systemRoles = _this.state.systemRoles;\n      var unAllocatedRoles = systemRoles.forEach(function (systemRole) {\n        if (!systemRole.includes(userRoles)) {\n          return systemRole;\n        }\n      });\n      var options = [];\n      unAllocatedRoles.forEach(function (unAllocatedRole) {\n        var obj = {\n          label: unAllocatedRole.name,\n          value: unAllocatedRole.id\n        };\n        options.push(obj);\n      });\n\n      _this.setState({\n        checkBoxModal: {\n          title: \"Allocate Roles\",\n          roles: options\n        }\n      });\n\n      _this.setState({\n        visible: true\n      });\n\n      console.log(\"lol\");\n    };\n\n    _this.removeRolesToUser = function () {\n      _this.setState({\n        visible: false\n      });\n\n      var userRoles = _this.state.user.roles;\n      var options = [];\n      userRoles.forEach(function (userRole) {\n        var obj = {\n          label: userRole.name,\n          value: userRole.id\n        };\n        options.push(obj);\n      });\n\n      _this.setState({\n        checkBoxModal: {\n          title: \"Allocate Roles\",\n          roles: options\n        }\n      });\n\n      _this.setState({\n        visible: true\n      });\n\n      console.log(\"lol\");\n    };\n\n    _this.updateRoles = function () {};\n\n    _this.canUpdateRole = function () {\n      if (_this.state.newUserRoles.length > 0) {\n        return true;\n      }\n\n      return false;\n    };\n\n    _this.cancelUpdates = function () {\n      _this.setState({\n        checkBoxModal: {\n          title: \" \",\n          roles: []\n        }\n      });\n\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.state = {\n      user: {\n        roles: []\n      },\n      systemRoles: [],\n      userId: null,\n      auditTrails: [],\n      isloading: true,\n      isUserloading: true,\n      checkBoxModal: {\n        title: '',\n        roles: []\n      },\n      visible: false,\n      newUserRoles: []\n    };\n    return _this;\n  }\n\n  _createClass(UserInfoPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var params = this.props.match.params;\n      this.setState({\n        userId: params.userId\n      });\n      this.getSingleUser(params.userId);\n      this.getSingleUserAuditTrails(params.userId);\n      this.getAllRoles();\n    }\n  }, {\n    key: \"getAllRoles\",\n    value: function getAllRoles() {\n      var _this2 = this;\n\n      this.setState({\n        isUserloading: true\n      });\n      fetchAllroles().then(function (response) {\n        console.log(\"Roles Response\");\n        console.log(response.data);\n\n        _this2.setState({\n          systemRoles: response.data\n        });\n\n        _this2.setState({\n          isUserloading: false\n        });\n      }).catch(function (error) {\n        console.log(\"Roles Error Response\");\n\n        _notification['error']({\n          message: 'MEDTHREAT',\n          description: \"An Error Occured Fetching Roles .\"\n        });\n\n        _this2.setState({\n          isUserloading: false\n        });\n\n        console.log(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var bodystyle = {\n        background: \"#f1f2f7\",\n        display: \"table\",\n        fontFamily: \"'Open Sans' sans-serif !important\",\n        fontSize: \"16px\",\n        width: \"100%\"\n      };\n      var _this$state = this.state,\n          user = _this$state.user,\n          checkBoxModal = _this$state.checkBoxModal;\n      return React.createElement(\"div\", {\n        style: bodystyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"right-panel \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), React.createElement(BreadCrumb, {\n        menu: \"User\",\n        submenu: \"User Information\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"content mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(_Modal, {\n        title: checkBoxModal.title,\n        visible: this.state.visible,\n        onOk: this.updateRoles,\n        okButtonProps: {\n          disabled: this.canUpdateRole()\n        },\n        onCancel: this.cancelUpdates,\n        okText: \"UPDATE\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(_Checkbox.Group, {\n        options: checkBoxModal.roles,\n        onChange: this.onSelectRole,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }))), React.createElement(_Spin, {\n        spinning: this.state.isUserloading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(_Card, {\n        style: {\n          width: \"100%\",\n          marginTop: 16\n        },\n        actions: [React.createElement(\"a\", {\n          onClick: function onClick() {\n            _this3.addRolesToUser();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        }, React.createElement(_Icon, {\n          type: \"plus-circle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        })), React.createElement(\"a\", {\n          onClick: function onClick() {\n            _this3.removeRolesToUser();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        }, React.createElement(_Icon, {\n          type: \"minus-circle\",\n          key: \"edit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        })), React.createElement(_Icon, {\n          type: \"ellipsis\",\n          key: \"ellipsis\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        })],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(Meta, {\n        avatar: React.createElement(_Avatar, {\n          size: \"large\",\n          icon: \"user\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }),\n        title: \"User details\",\n        description: \"User description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, \"FullName\"), \": \", user.firstName, \" \", user.lastName), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"Phone Number \"), \": \", user.phoneNo), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, \"Email\"), \": \", user.email), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, \" UnAuthorized Activity Count block\"), \": \", user.illegalCount), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, \" Account Status\"), \":  \", this.getAccontLockedInfo(user.block)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, \"Roles:\"), user.roles.map(function (role) {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"badge badge-secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }, role.name), React.createElement(_Divider, {\n          type: \"vertical\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278\n          },\n          __self: this\n        }));\n      })))))), React.createElement(_Spin, {\n        spinning: this.state.isloading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(AuditTrailTable, {\n        auditTrails: this.state.auditTrails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return UserInfoPage;\n}(Component);\n\nexport default UserInfoPage;","map":{"version":3,"sources":["/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/src/pages/doctor/userinfo/userinfo.js"],"names":["React","Component","Header","Navbar","BreadCrumb","fetchOneUser","fetchOneUserAuditTrail","fetchAllroles","AuditTrailTable","Meta","UserInfoPage","props","getSingleUser","userId","setState","isUserloading","then","response","console","log","data","user","catch","error","message","description","getSingleUserAuditTrails","isloading","auditTrails","getAccontLockedInfo","block","badge","clazz","display","onSelectRole","roles","length","newUserRoles","addRolesToUser","visible","userRoles","state","systemRoles","unAllocatedRoles","forEach","systemRole","includes","options","unAllocatedRole","obj","label","name","value","id","push","checkBoxModal","title","removeRolesToUser","userRole","updateRoles","canUpdateRole","cancelUpdates","params","match","getAllRoles","bodystyle","background","fontFamily","fontSize","width","disabled","marginTop","firstName","lastName","phoneNo","email","illegalCount","map","role"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from '../../../partials/header';\nimport Navbar from '../../../partials/navbar'\nimport BreadCrumb from '../../../partials/breadcrumb'\nimport {fetchOneUser,fetchOneUserAuditTrail,fetchAllroles} from './userinfo-api'\nimport {\n    Form,\n    Input,\n    Divider,\n    Icon,Card, Avatar,Checkbox,Modal,\n    Spin,\n    notification,Popconfirm\n  } from 'antd';\n  import AuditTrailTable from '../../../common/AuditTableComponent'\n\n\nconst { Meta } = Card;\n\nclass UserInfoPage extends Component  {\n    constructor(props) {\n        super(props);\n        this.state={\n            user:{roles:[]},\n            systemRoles:[],\n            userId:null,\n            auditTrails:[],\n            isloading:true,\n            isUserloading:true,\n            checkBoxModal:{\n                title:'',\n                roles:[]\n            },\n            visible:false,\n            newUserRoles:[]\n        }\n           \n    }\n\n    componentDidMount(){\n        const {match: { params }} = this.props;\n        this.setState({userId:params.userId})\n        this.getSingleUser(params.userId)\n        this.getSingleUserAuditTrails(params.userId)\n        this.getAllRoles()\n    }\n\n    \n    \n    getAllRoles(){\n        this.setState({isUserloading:true})\n        fetchAllroles()\n        .then(response=>{\n            console.log(\"Roles Response\");\n            console.log(response.data)\n            this.setState({systemRoles:response.data})\n            this.setState({isUserloading:false})\n        })\n        .catch((error)=> {\n            console.log(\"Roles Error Response\");\n      \n            notification['error']({\n            message: 'MEDTHREAT',\n            description:\n                `An Error Occured Fetching Roles .`,\n            });\n\n            this.setState({isUserloading:false})\n            console.log(error);\n\n        });\n    }\n\n    getSingleUser = (userId) =>{\n        this.setState({isUserloading:true})\n        fetchOneUser(userId)\n        .then(response=>{\n            console.log(\"Users Response\");\n            console.log(response.data)\n            this.setState({user:response.data})\n            this.setState({isUserloading:false})\n        })\n        .catch((error)=> {\n            console.log(\"User Error Response\");\n      \n            notification['error']({\n            message: 'MEDTHREAT',\n            description:\n                `An Error Fetching User .`,\n            });\n\n            this.setState({isUserloading:false})\n            console.log(error);\n\n        });\n    }\n\n    getSingleUserAuditTrails = (userId) =>{\n        this.setState({isloading:true})\n        fetchOneUserAuditTrail(userId)\n        .then(response=>{\n            console.log(\"Audit one Response\");\n            console.log(response.data)\n            this.setState({auditTrails:response.data})\n            this.setState({isloading:false})\n        })\n        .catch((error)=> {\n            console.log(\"Audit Error Response\");\n      \n            notification['error']({\n            message: 'MEDTHREAT',\n            description:\n                `An Error Fetching Audit Trail .`,\n            });\n\n            this.setState({isloading:false})\n            console.log(error);\n\n        });\n    }\n\n    getAccontLockedInfo = (block)=>{\n        let badge = {clazz:\"badge badge-info\", display:\"Active\"}\n        if(block==1){\n            badge = {clazz:\"badge badge-danger\", display:\"Blocked\"}\n        }    \n        return (\n            <span className={badge.clazz}>\n                {badge.display}\n            </span>\n        );                  \n    }\n\n    onSelectRole = (roles)=>{\n\n        notification['error']({\n            message: 'MEDTHREAT',\n            description:\n                `${roles.length} Roles Selected .`,\n        });\n\n        this.setState({newUserRoles:roles})\n        console.log('checked = ', roles);\n    }\n\n    addRolesToUser=()=>{\n        this.setState({visible:false})\n\n        let userRoles = this.state.user.roles\n        let systemRoles= this.state.systemRoles\n        let unAllocatedRoles = systemRoles.forEach(systemRole=>{\n            if(!systemRole.includes(userRoles)){\n                return systemRole\n            }\n\n        })\n        \n        let options = [];\n        unAllocatedRoles.forEach(unAllocatedRole=>{\n            let obj = { label: unAllocatedRole.name, value: unAllocatedRole.id }\n            options.push(obj);\n        })\n\n        this.setState({checkBoxModal:{title:\"Allocate Roles\",roles:options}})\n\n        this.setState({visible:true})\n\n\n        console.log(\"lol\")\n    }\n    removeRolesToUser=()=>{\n        this.setState({visible:false})\n\n        let userRoles = this.state.user.roles        \n        \n        let options = [];\n        userRoles.forEach(userRole=>{\n            let obj = { label: userRole.name, value: userRole.id }\n            options.push(obj);\n        })\n\n        this.setState({checkBoxModal:{title:\"Allocate Roles\",roles:options}})\n        this.setState({visible:true})\n\n        console.log(\"lol\")\n    }\n\n    updateRoles=()=>{\n\n    }\n\n    canUpdateRole=()=>{\n        if(this.state.newUserRoles.length > 0){\n            return true\n        }\n        return false;\n    }\n\n    cancelUpdates=()=>{\n        this.setState({checkBoxModal:{title:\" \",roles:[]}})\n        this.setState({visible:false})\n    }\n\n  render() {\n    const bodystyle =  {\n        background: \"#f1f2f7\",\n        display: \"table\",\n        fontFamily: \"'Open Sans' sans-serif !important\",\n        fontSize: \"16px\",\n        width: \"100%\" }\n\n    const {user,checkBoxModal}=this.state\n\n\n    return (\n        <div style={bodystyle}>\n        {/* <!-- Left Panel --> */}\n\n            <Navbar></Navbar>\n            {/* <!-- /#left-panel --> */}\n            {/* <!-- Left Panel --> */}\n\n            {/* <!-- Right Panel --> */}\n\n            <div  class=\"right-panel \">\n                <Header></Header>\n                {/* <!-- /header --> */}\n                {/* <!-- Header--> */}\n\n                <BreadCrumb menu=\"User\" submenu=\"User Information\"></BreadCrumb>\n\n                <div class=\"content mt-3\">\n                    \n                    <div class=\"animated fadeIn\">\n                        <div className=\"row\">\n                            <Modal\n                            title={checkBoxModal.title}\n                            visible={this.state.visible}\n                            onOk={this.updateRoles}\n                            okButtonProps={{ disabled: this.canUpdateRole() }}\n                            onCancel={this.cancelUpdates}\n                            okText=\"UPDATE\"\n                            >\n                            <Checkbox.Group options={checkBoxModal.roles} onChange={this.onSelectRole} />\n                                \n                            </Modal>\n                        </div>\n                        <Spin spinning={this.state.isUserloading}>\n                            <div class=\"row\">\n\n                                <div className=\"col-md-12\">\n                                    <Card style={{ width: \"100%\", marginTop: 16 }}\n                                        actions={[\n                                            <a onClick={()=>{this.addRolesToUser()}}><Icon type=\"plus-circle\" /></a>,\n                                            <a onClick={()=>{this.removeRolesToUser()}}><Icon type=\"minus-circle\" key=\"edit\" /></a>,\n                                            <Icon type=\"ellipsis\" key=\"ellipsis\" />,\n                                        ]} >\n                                        <Meta\n                                            avatar={\n                                                <Avatar size=\"large\" icon=\"user\" />\n                                            }\n                                            title=\"User details\"\n                                            description=\"User description\"\n                                        />\n                                        <p><b>FullName</b>: {user.firstName} {user.lastName}</p>\n                                        <p><b>Phone Number </b>: {user.phoneNo}</p>\n                                        <p><b>Email</b>: {user.email}</p>\n                                        <p><b> UnAuthorized Activity Count block</b>: {user.illegalCount}</p>\n                                        <p><b> Account Status</b>:  {this.getAccontLockedInfo(user.block)}</p>\n                                        <p>\n                                            <b>Roles:</b>\n                                            {user.roles.map(role => {\n                                                return (\n                                                    <span>\n                                                        <span className=\"badge badge-secondary\">\n                                                            {role.name}\n\n                                                        </span>\n                                                        <Divider type=\"vertical\" />\n                                                    </span>\n                                                    \n                                                );   \n                                            })}\n\n                                        </p>\n\n                                    </Card>\n                                    \n                                </div>\n                                \n                            </div>\n                        </Spin>\n\n                        <Spin spinning={this.state.isloading}>\n\n                            {/* Table for drugs */}\n                            <div class=\"row\">\n\n                                <div className=\"col-md-12\">\n                                    <AuditTrailTable auditTrails={this.state.auditTrails}></AuditTrailTable>\n\n                                    {/* <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <strong className=\"card-title\">Data Table</strong>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <Table columns={this.getTableHeader()} dataSource={this.state.users} />\n                                        </div>\n                                        \n                                    </div> */}\n                                </div>\n\n\n                            </div>\n\n                        </Spin>\n\n                    </div>\n                </div>\n                {/* <!-- .content --> */}\n            </div>\n            {/* <!-- /#right-panel --> */}\n\n            {/* <!-- Right Panel --> */}\n        </div>\n    );\n  }\n}\n\nexport default UserInfoPage;\n"]},"metadata":{},"sourceType":"module"}