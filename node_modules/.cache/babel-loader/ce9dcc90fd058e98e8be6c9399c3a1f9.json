{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/popconfirm/style\";\nimport _Popconfirm from \"antd/es/popconfirm\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nimport _classCallCheck from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/src/pages/doctor/auditTrail/auditTrail.js\";\nimport React, { Component } from 'react';\nimport Header from '../../../partials/header';\nimport Navbar from '../../../partials/navbar';\nimport BreadCrumb from '../../../partials/breadcrumb';\nimport { fetchAllAuditTrails } from './auditTrails-api';\nimport AuditTrailTable from '../../../common/AuditTableComponent';\n\nvar AuditTrailPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AuditTrailPage, _Component);\n\n  function AuditTrailPage(props) {\n    var _this;\n\n    _classCallCheck(this, AuditTrailPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AuditTrailPage).call(this, props));\n\n    _this.getLegalStatusTag = function (legal_status) {\n      var clazzName = \"badge badge-primary\";\n\n      if (legal_status == \"LEGAL\") {\n        clazzName = \"badge badge-success\";\n      } else if (legal_status == \"ILLEGAL\") {\n        clazzName = \"badge badge-danger\";\n      }\n\n      return React.createElement(\"span\", {\n        className: clazzName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, legal_status);\n    };\n\n    _this.getTableHeader = function () {\n      var columns = [{\n        title: 'Full Name',\n        dataIndex: 'user',\n        key: 'user',\n        render: function render(user) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, user.firstName, \" \", user.lastName);\n        }\n      }, {\n        title: 'Email',\n        dataIndex: 'email',\n        key: 'email'\n      }, {\n        title: 'Request',\n        dataIndex: 'request',\n        key: 'request'\n      }, {\n        title: 'Target Url',\n        dataIndex: 'target_url',\n        key: 'target_url'\n      }, {\n        title: 'ip',\n        dataIndex: 'ip',\n        key: 'ip'\n      }, {\n        title: 'Legal Status',\n        dataIndex: 'legal_status',\n        key: 'legal_status',\n        render: function render(legal_status) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, _this.getLegalStatusTag(legal_status));\n        }\n      }, {\n        title: 'Action',\n        dataIndex: 'action',\n        key: 'action'\n      }];\n      return columns;\n    };\n\n    _this.getAllAuditTrails = function () {\n      _this.setState({\n        isloading: true\n      });\n\n      fetchAllAuditTrails().then(function (response) {\n        console.log(\"drug Response\");\n        console.log(response.data);\n\n        _this.setState({\n          auditTrails: response.data\n        });\n\n        _this.setState({\n          isloading: false\n        });\n      }).catch(function (error) {\n        console.log(\"drug Error Response\");\n\n        _notification['error']({\n          message: 'MEDTHREAT',\n          description: \"An Error Fetching Drug .\"\n        });\n\n        console.log(error.response.status);\n      });\n    };\n\n    _this.deleteDrug = function (id) {\n      console.log(id);\n    };\n\n    _this.cancelDrug = function () {};\n\n    _this.mapDrugTables = function () {\n      var items = React.createElement(\"tr\", {\n        style: {\n          width: '100%'\n        },\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"No drug\");\n\n      if (_this.state.drugs) {\n        items = _this.state.drugs.map(function (drug) {\n          return React.createElement(\"tr\", {\n            key: drug.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185\n            },\n            __self: this\n          }, drug.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 186\n            },\n            __self: this\n          }, drug.amount), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 187\n            },\n            __self: this\n          }, drug.alias), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 188\n            },\n            __self: this\n          }, React.createElement(_Popconfirm, {\n            title: \"Are you sure delete this Item?\",\n            onConfirm: function onConfirm(e) {\n              return _this.deleteDrug(drug);\n            },\n            onCancel: _this.cancelDrug(),\n            okText: \"Yes\",\n            cancelText: \"No\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 189\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: \"#\",\n            style: {\n              margin: '5px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196\n            },\n            __self: this\n          }, \"Delete\")), React.createElement(\"button\", {\n            type: \"button\",\n            class: \"btn btn-primary btn-sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199\n            },\n            __self: this\n          }, \"Delete\")));\n        });\n      }\n\n      return items;\n    };\n\n    _this.state = {\n      auditTrails: [],\n      isloading: true // this.onsubmitDrug = this.onsubmitDrug.bind(this);\n      // this.deleteDrug = this.deleteDrug.bind(this);\n\n    };\n    return _this;\n  }\n\n  _createClass(AuditTrailPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getAllAuditTrails();\n    } // <span class=\"badge badge-primary\">Primary</span>\n    //                                 <span class=\"badge badge-secondary\">Secondary</span>\n    //                                 <span class=\"badge badge-success\">Success</span>\n    //                                 <span class=\"badge badge-danger\">Danger</span>\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var bodystyle = {\n        background: \"#f1f2f7\",\n        display: \"table\",\n        fontFamily: \"'Open Sans' sans-serif !important\",\n        fontSize: \"16px\",\n        width: \"100%\"\n      };\n      return React.createElement(\"div\", {\n        style: bodystyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"right-panel \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }), React.createElement(BreadCrumb, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"content mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(_Spin, {\n        spinning: this.state.isloading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(AuditTrailTable, {\n        auditTrails: this.state.auditTrails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return AuditTrailPage;\n}(Component);\n\nexport default AuditTrailPage;","map":{"version":3,"sources":["/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/src/pages/doctor/auditTrail/auditTrail.js"],"names":["React","Component","Header","Navbar","BreadCrumb","fetchAllAuditTrails","AuditTrailTable","AuditTrailPage","props","getLegalStatusTag","legal_status","clazzName","getTableHeader","columns","title","dataIndex","key","render","user","firstName","lastName","getAllAuditTrails","setState","isloading","then","response","console","log","data","auditTrails","catch","error","message","description","status","deleteDrug","id","cancelDrug","mapDrugTables","items","width","state","drugs","map","drug","name","amount","alias","e","margin","bodystyle","background","display","fontFamily","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from '../../../partials/header';\nimport Navbar from '../../../partials/navbar'\nimport BreadCrumb from '../../../partials/breadcrumb'\nimport {fetchAllAuditTrails} from './auditTrails-api'\nimport {Spin,notification,Popconfirm,Table, Divider, Tag} from 'antd';\nimport AuditTrailTable from '../../../common/AuditTableComponent'\n\nclass AuditTrailPage extends Component  {\n    constructor(props) {\n        super(props);\n        this.state={\n            auditTrails:[],\n            isloading:true\n        }\n            // this.onsubmitDrug = this.onsubmitDrug.bind(this);\n            // this.deleteDrug = this.deleteDrug.bind(this);\n\n    }\n\n    componentDidMount(){\n\n        this.getAllAuditTrails()\n    }\n\n    // <span class=\"badge badge-primary\">Primary</span>\n    //                                 <span class=\"badge badge-secondary\">Secondary</span>\n    //                                 <span class=\"badge badge-success\">Success</span>\n    //                                 <span class=\"badge badge-danger\">Danger</span>\n\n     \n\n    getLegalStatusTag = (legal_status)=>{\n        let clazzName = \"badge badge-primary\"\n        if(legal_status==\"LEGAL\"){\n            clazzName=\"badge badge-success\"\n        }\n        else if(legal_status==\"ILLEGAL\"){\n            clazzName=\"badge badge-danger\"\n        }\n        \n        return (\n            <span className={clazzName}>\n                {legal_status}\n            </span>\n        );\n        \n                        \n    }\n    getTableHeader = ()=>{\n        const columns = [\n            {\n              title: 'Full Name',\n              dataIndex: 'user',\n              key: 'user',\n              render: user => (\n                <span>\n                    \n                    \n                    {user.firstName} {user.lastName}\n                           \n                </span>\n              ),\n            },\n            {\n              title: 'Email',\n              dataIndex: 'email',\n              key: 'email',\n            },\n            {\n              title: 'Request',\n              dataIndex: 'request',\n              key: 'request',\n            },\n            {\n                title: 'Target Url',\n                dataIndex: 'target_url',\n                key: 'target_url',\n            },\n\n            {\n                title: 'ip',\n                dataIndex: 'ip',\n                key: 'ip',\n            },\n            \n            {\n                title: 'Legal Status',\n                dataIndex: 'legal_status',\n                key: 'legal_status',\n                render: legal_status => (\n                    <span>\n                        {this.getLegalStatusTag(legal_status)}\n                        \n                      \n                    </span>\n                  ),\n            },\n           \n            {\n                title: 'Action',\n                dataIndex: 'action',\n                key: 'action',\n            },\n          ];\n\n          return columns\n    }\n\n    \n    // onsubmitDrug = (e) => {\n    //     e.preventDefault();\n    //     this.setState({isloading:true})\n    //     this.props.form.validateFields((err, values) => {\n    //         if (!err) {\n    //             console.log(values);\n    //             createDrug(values)\n    //             .then(response =>{\n    //                 console.log(response.data);\n    //                 if(response.data){\n    //                     notification['success']({\n    //                         message: 'MEDTHREAT',\n    //                         description:\n    //                           'Drug Created Successfully',\n    //                       });\n    //                     this.props.form.resetFields();\n    //                     this.getAllDrugs()\n    //                 }\n    //             })\n    //             .catch((error)=> {\n    //                 console.log(\"Drug Error Response\");\n              \n    //                 notification['error']({\n    //                 message: 'MEDTHREAT',\n    //                 description:\n    //                     `Error Occured Creating Drug .`,\n    //                 });\n    //                 this.setState({isloading:false})\n    //                 console.log(error.response.status);\n        \n    //             });\n    //         }\n    //     });\n    // }\n\n    getAllAuditTrails = () =>{\n        this.setState({isloading:true})\n        fetchAllAuditTrails()\n        .then(response=>{\n            console.log(\"drug Response\");\n            console.log(response.data)\n            this.setState({auditTrails:response.data})\n            this.setState({isloading:false})\n        })\n        .catch((error)=> {\n            console.log(\"drug Error Response\");\n      \n            notification['error']({\n            message: 'MEDTHREAT',\n            description:\n                `An Error Fetching Drug .`,\n            });\n            \n            console.log(error.response.status);\n\n        });\n    }\n\n    deleteDrug = (id)=>{\n        console.log( id)\n\n    }\n    cancelDrug = ()=>{\n\n    }\n\n    mapDrugTables = () =>{\n        let items = <tr style={{ width: '100%' }} className=\"col-md-12\" >No drug</tr>\n\n        if (this.state.drugs) {\n\n            items = this.state.drugs.map(drug => {\n              return (\n                <tr key={drug.id}>\n                    <td>{drug.name}</td>\n                    <td>{drug.amount}</td>\n                    <td>{drug.alias}</td>\n                    <td>\n                    <Popconfirm\n                        title=\"Are you sure delete this Item?\"\n                        onConfirm={(e)=>this.deleteDrug(drug)}\n                        onCancel={this.cancelDrug()}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <a href=\"#\" style={{margin:'5px'}} >Delete</a>\n                        {/* <a style={{margin:'5px'}} type=\"button\" class=\"btn btn-primary\">Update</a>     */}\n                    </Popconfirm>\n                        <button type=\"button\" class=\"btn btn-primary btn-sm\">Delete</button>\n\n                            {/* <Button className='m-1' color=\"primary\" size=\"xs\"\n                                onClick={() => { this.setPublicationUpdate(item) }}>\n                                Update\n                            </Button> */}\n                            {/* <Button className='m-1' color=\"danger\" size=\"xs\"\n                                onClick={() => { this.deleteItem(item) }}>\n                                Delete\n                            </Button> */}\n                    </td>  \n                </tr>\n              )\n            });\n        }\n\n        return items;\n\n    }\n\n  render() {\n    const bodystyle =  {\n        background: \"#f1f2f7\",\n        display: \"table\",\n        fontFamily: \"'Open Sans' sans-serif !important\",\n        fontSize: \"16px\",\n        width: \"100%\" }\n\n    return (\n        <div style={bodystyle}>\n        {/* <!-- Left Panel --> */}\n\n            <Navbar></Navbar>\n            {/* <!-- /#left-panel --> */}\n            {/* <!-- Left Panel --> */}\n\n            {/* <!-- Right Panel --> */}\n\n            <div  class=\"right-panel \">\n                <Header></Header>\n                {/* <!-- /header --> */}\n                {/* <!-- Header--> */}\n\n                <BreadCrumb></BreadCrumb>\n\n                <div class=\"content mt-3\">\n                    \n                    <div class=\"animated fadeIn\">\n                        <Spin spinning={this.state.isloading}>\n\n                            {/* Table for drugs */}\n                            <div class=\"row\">\n\n                            <div className=\"col-md-12\">\n\n                                <AuditTrailTable auditTrails={this.state.auditTrails}></AuditTrailTable>\n                                \n                                {/* <div className=\"card\">\n                                    <div className=\"card-header\">\n                                        <strong className=\"card-title\">Data Table</strong>\n                                    </div>\n                                    <div className=\"card-body\">\n                                        <Table columns={this.getTableHeader()} dataSource={this.state.auditTrails} />\n                                    </div>\n                                    \n                                </div> */}\n                            </div>\n\n\n                        </div>\n\n                        </Spin>\n\n                    </div>\n                </div>\n                {/* <!-- .content --> */}\n            </div>\n            {/* <!-- /#right-panel --> */}\n\n            {/* <!-- Right Panel --> */}\n        </div>\n    );\n  }\n}\n\nexport default AuditTrailPage;\n"]},"metadata":{},"sourceType":"module"}