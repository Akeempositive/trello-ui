{"ast":null,"code":"import { API_BASE_URL, APP_CLIENT, APP_PASS, PAGE_SIZE, CLIENT_TOKEN, GETMETHOD, POSTMETHOD, PUTMETHOD, DELETEMETHOD } from '../../constants';\nimport { axiosLoginRequest } from '../../utils/api-utils';\nimport axios from 'axios';\nexport function login(loginRequest) {\n  loginRequest.grant_type = 'password';\n  loginRequest.scope = 'profile';\n  var formBody = [];\n\n  for (var property in loginRequest) {\n    var encodedKey = encodeURIComponent(property);\n    var encodedValue = encodeURIComponent(loginRequest[property]);\n    formBody.push(\"\".concat(encodedKey, \"=\").concat(encodedValue));\n  } // const formData = new FormData();\n  // for (let property in loginRequest) {\n  //     let formDataKey = property;\n  //     let formDataValue = loginRequest[property];\n  //     formData.append(formDataKey,formDataValue )\n  // }\n\n\n  formBody = formBody.join('&');\n  console.log(formBody); // let head = {headers:{\"Authorization\": \"Basic bWVkdGhyZWF0OjEyMzQ1Ng==\",'Content-Type': \"application/x-www-form-urlencoded\"}, data:{}}\n  // console.log(head);\n  // return axios.post(API_BASE_URL + '/oauth/token',formBody, head)\n  // options.url, options.data, options.headerRequest\n\n  return axiosLoginRequest({\n    url: API_BASE_URL + '/oauth/token',\n    method: POSTMETHOD,\n    data: formBody,\n    useBasic: true,\n    // headerType: 'application/json'\n    headerType: 'application/x-www-form-urlencoded'\n  });\n}\n\nvar storeToken = function storeToken(token) {\n  storeJwtAccessToken(token.access_token);\n  storeJwtExpireToken(token.expires_in);\n};","map":{"version":3,"sources":["/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/src/pages/login/login-api.js"],"names":["API_BASE_URL","APP_CLIENT","APP_PASS","PAGE_SIZE","CLIENT_TOKEN","GETMETHOD","POSTMETHOD","PUTMETHOD","DELETEMETHOD","axiosLoginRequest","axios","login","loginRequest","grant_type","scope","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","console","log","url","method","data","useBasic","headerType","storeToken","token","storeJwtAccessToken","access_token","storeJwtExpireToken","expires_in"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,UAAtB,EAAkCC,QAAlC,EAA4CC,SAA5C,EAAuDC,YAAvD,EAAoEC,SAApE,EAA8EC,UAA9E,EAAyFC,SAAzF,EAAmGC,YAAnG,QAAsH,iBAAtH;AACA,SAAQC,iBAAR,QAAiC,uBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,OAAO,SAASC,KAAT,CAAeC,YAAf,EAA6B;AAChCA,EAAAA,YAAY,CAACC,UAAb,GAA0B,UAA1B;AACAD,EAAAA,YAAY,CAACE,KAAb,GAAqB,SAArB;AAEA,MAAIC,QAAQ,GAAG,EAAf;;AACA,OAAK,IAAIC,QAAT,IAAqBJ,YAArB,EAAmC;AAC/B,QAAIK,UAAU,GAAGC,kBAAkB,CAACF,QAAD,CAAnC;AACA,QAAIG,YAAY,GAAGD,kBAAkB,CAACN,YAAY,CAACI,QAAD,CAAb,CAArC;AACAD,IAAAA,QAAQ,CAACK,IAAT,WAAiBH,UAAjB,cAA+BE,YAA/B;AACH,GAT+B,CAWhC;AAEA;AACA;AACA;AACA;AACA;;;AACAJ,EAAAA,QAAQ,GAAGA,QAAQ,CAACM,IAAT,CAAc,GAAd,CAAX;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ,EAnBgC,CAqBhC;AACA;AACA;AAEA;;AACA,SAAON,iBAAiB,CAAC;AACrBe,IAAAA,GAAG,EAAExB,YAAY,GAAG,cADC;AAErByB,IAAAA,MAAM,EAAEnB,UAFa;AAGrBoB,IAAAA,IAAI,EAAEX,QAHe;AAIrBY,IAAAA,QAAQ,EAAE,IAJW;AAKrB;AAEAC,IAAAA,UAAU,EAAE;AAPS,GAAD,CAAxB;AASH;;AAED,IAAMC,UAAU,GAAE,SAAZA,UAAY,CAACC,KAAD,EAAU;AACxBC,EAAAA,mBAAmB,CAACD,KAAK,CAACE,YAAP,CAAnB;AACAC,EAAAA,mBAAmB,CAACH,KAAK,CAACI,UAAP,CAAnB;AACH,CAHD","sourcesContent":["import {API_BASE_URL, APP_CLIENT, APP_PASS, PAGE_SIZE, CLIENT_TOKEN,GETMETHOD,POSTMETHOD,PUTMETHOD,DELETEMETHOD} from '../../constants';\nimport {axiosLoginRequest} from  '../../utils/api-utils'\nimport axios from 'axios';\n\n\n\nexport function login(loginRequest) {\n    loginRequest.grant_type = 'password';\n    loginRequest.scope = 'profile';\n\n    let formBody = [];\n    for (let property in loginRequest) {\n        let encodedKey = encodeURIComponent(property);\n        let encodedValue = encodeURIComponent(loginRequest[property]);\n        formBody.push(`${encodedKey}=${encodedValue}`);\n    }\n\n    // const formData = new FormData();\n\n    // for (let property in loginRequest) {\n    //     let formDataKey = property;\n    //     let formDataValue = loginRequest[property];\n    //     formData.append(formDataKey,formDataValue )\n    // }\n    formBody = formBody.join('&');\n    console.log(formBody);\n\n    // let head = {headers:{\"Authorization\": \"Basic bWVkdGhyZWF0OjEyMzQ1Ng==\",'Content-Type': \"application/x-www-form-urlencoded\"}, data:{}}\n    // console.log(head);\n    // return axios.post(API_BASE_URL + '/oauth/token',formBody, head)\n\n    // options.url, options.data, options.headerRequest\n    return axiosLoginRequest({\n        url: API_BASE_URL + '/oauth/token',\n        method: POSTMETHOD,\n        data: formBody,\n        useBasic: true,\n        // headerType: 'application/json'\n\n        headerType: 'application/x-www-form-urlencoded'\n    });\n}\n\nconst storeToken= (token) =>{\n    storeJwtAccessToken(token.access_token);\n    storeJwtExpireToken(token.expires_in)\n}\n\n\n"]},"metadata":{},"sourceType":"module"}