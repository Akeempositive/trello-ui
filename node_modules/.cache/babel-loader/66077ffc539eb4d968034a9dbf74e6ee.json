{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/switch/style\";\nimport _Switch from \"antd/es/switch\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport _defineProperty from \"C:\\\\Users\\\\Positive\\\\Documents\\\\Projects\\\\trello-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"C:\\\\Users\\\\Positive\\\\Documents\\\\Projects\\\\trello-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport \"antd/es/popconfirm/style\";\nimport _Popconfirm from \"antd/es/popconfirm\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Positive\\\\Documents\\\\Projects\\\\trello-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _classCallCheck from \"C:\\\\Users\\\\Positive\\\\Documents\\\\Projects\\\\trello-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Positive\\\\Documents\\\\Projects\\\\trello-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Positive\\\\Documents\\\\Projects\\\\trello-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Positive\\\\Documents\\\\Projects\\\\trello-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Positive\\\\Documents\\\\Projects\\\\trello-ui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nvar _jsxFileName = \"C:\\\\Users\\\\Positive\\\\Documents\\\\Projects\\\\trello-ui\\\\src\\\\pages\\\\doctor\\\\drugpage\\\\drug.js\";\nimport React, { Component } from 'react';\nimport Header from '../../../partials/header';\nimport Navbar from '../../../partials/navbar';\nimport BreadCrumb from '../../../partials/breadcrumb';\nimport { fetchAllDrugs, createDrug, updateDeleteDrug, updateCreatedDrug } from './drug-api';\nimport { hasAuthority, getForbiddenCount } from '../../../utils/api-utils';\nvar FormItem = _Form.Item;\n\nvar DrugPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DrugPage, _Component);\n\n  function DrugPage() {\n    _classCallCheck(this, DrugPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DrugPage).apply(this, arguments));\n  }\n\n  _createClass(DrugPage, [{\n    key: \"render\",\n    value: function render() {\n      var AntWrappedDrug = _Form.create()(Drug);\n\n      return React.createElement(AntWrappedDrug, {\n        rediredt: this.props.history.push,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return DrugPage;\n}(Component);\n\nvar Drug =\n/*#__PURE__*/\nfunction (_Component2) {\n  _inherits(Drug, _Component2);\n\n  function Drug(props) {\n    var _this;\n\n    _classCallCheck(this, Drug);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Drug).call(this, props));\n\n    _this.onsubmitDrug = function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        isloading: true\n      });\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log(values);\n          createDrug(values).then(function (response) {\n            console.log(response.data);\n\n            if (response.data) {\n              _notification['success']({\n                message: 'MEDTHREAT',\n                description: 'Drug Created Successfully'\n              });\n\n              _this.props.form.resetFields();\n\n              _this.getAllDrugs();\n            }\n          }).catch(function (error) {\n            console.log(\"Drug Error Response\");\n\n            _notification['error']({\n              message: 'MEDTHREAT',\n              description: \"Error Occured Creating Drug .\"\n            });\n\n            _this.setState({\n              isloading: false\n            });\n\n            console.log(error.response.status);\n            getForbiddenCount(_this.props.rediredt);\n          });\n        }\n\n        _this.setState({\n          isloading: false\n        });\n      });\n    };\n\n    _this.getAllDrugs = function () {\n      _this.setState({\n        isloading: true\n      });\n\n      fetchAllDrugs().then(function (response) {\n        console.log(\"drug Response\");\n        console.log(response.data);\n\n        _this.setState({\n          drugs: response.data\n        });\n\n        _this.setState({\n          isloading: false\n        });\n      }).catch(function (error) {\n        console.log(\"drug Error Response\");\n\n        _notification['error']({\n          message: 'MEDTHREAT',\n          description: \"An Error Fetching Drug .\"\n        });\n\n        console.log(error.response.status);\n        getForbiddenCount(_this.props.rediredt);\n      });\n    };\n\n    _this.deleteDrug = function (id) {\n      console.log(id);\n      updateDeleteDrug(id).then(function (response) {\n        console.log(\"drug Response\");\n        console.log(response.data);\n\n        _this.getAllDrugs(); // this.setState({drugs:response.data})\n        // this.setState({isloading:false})\n\n      }).catch(function (error) {\n        console.log(\"drug Error Response\");\n\n        _notification['error']({\n          message: 'MEDTHREAT',\n          description: \"An Error Occured Deleting Drug .\"\n        });\n\n        console.log(error); // this.props.rediredt(\"/\")\n        // let rt = this.props\n        // getForbiddenCount(rt)\n\n        getForbiddenCount(_this.props.rediredt);\n      });\n    };\n\n    _this.updateDrug = function () {\n      _this.setState({\n        visible: false\n      });\n\n      var _this$state = _this.state,\n          drug = _this$state.drug,\n          name = _this$state.name,\n          amount = _this$state.amount,\n          alias = _this$state.alias;\n      var updatedDrugRequest = {\n        id: drug.id,\n        name: name.value,\n        amount: amount.value,\n        alias: alias.value\n      };\n      updateCreatedDrug(updatedDrugRequest).then(function (response) {\n        console.log(response.data);\n\n        if (response.data) {\n          _notification['success']({\n            message: 'MEDTHREAT',\n            description: 'Drug Updated Successfully'\n          }); // this.props.form.resetFields();\n\n\n          _this.getAllDrugs();\n\n          _this.setState({\n            drug: {}\n          });\n        }\n      }).catch(function (error) {\n        console.log(\"Drug Error Response\");\n\n        _notification['error']({\n          message: 'MEDTHREAT',\n          description: \"Error Occured Updating Drug .\"\n        });\n\n        _this.setState({\n          isloading: false\n        });\n\n        console.log(error.response.status);\n        getForbiddenCount(_this.props.rediredt);\n      });\n    };\n\n    _this.enableDrugModal = function (drug) {\n      _this.setState({\n        drug: drug\n      });\n\n      _this.setState({\n        name: {\n          value: drug.name,\n          validateStatus: 'success'\n        }\n      });\n\n      _this.setState({\n        amount: {\n          value: drug.amount,\n          validateStatus: 'success'\n        }\n      });\n\n      _this.setState({\n        alias: {\n          value: drug.alias,\n          validateStatus: 'success'\n        }\n      });\n\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.cancelDrugModal = function (drug) {\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.cancelDrug = function () {};\n\n    _this.validateInput = function (input) {\n      if (input) {\n        return {\n          validateStatus: 'success',\n          errorMsg: null\n        };\n      } else {\n        return {\n          validateStatus: 'error',\n          errorMsg: \"This field is required\"\n        };\n      }\n    };\n\n    _this.insiderAttackSwitch = function (e) {\n      console.log(\"insiderAttackSwitch\");\n      console.log(e);\n\n      _this.setState({\n        insiderAttackStatus: e\n      });\n    };\n\n    _this.mapDrugTables = function () {\n      var items = React.createElement(\"tr\", {\n        style: {\n          width: '100%'\n        },\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"No drug\");\n\n      if (_this.state.drugs) {\n        items = _this.state.drugs.map(function (drug) {\n          return React.createElement(\"tr\", {\n            key: drug.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 263\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 264\n            },\n            __self: this\n          }, drug.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 265\n            },\n            __self: this\n          }, drug.amount), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 266\n            },\n            __self: this\n          }, drug.alias), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 267\n            },\n            __self: this\n          }, hasAuthority([\"ROLE_USER_DELETE_DRUG\"]) || _this.state.insiderAttackStatus ? React.createElement(_Popconfirm, {\n            title: \"Are you sure delete this Item?\",\n            onConfirm: function onConfirm(e) {\n              return _this.deleteDrug(drug.id);\n            },\n            onCancel: _this.cancelDrug(),\n            okText: \"Yes\",\n            cancelText: \"No\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 271\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            style: {\n              margin: '5px'\n            },\n            type: \"button\",\n            class: \"btn btn-danger btn-sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 278\n            },\n            __self: this\n          }, \"DELETE\")) : \"\", hasAuthority([\"ROLE_USER_UPDATE_DRUG\"]) || _this.state.insiderAttackStatus ? React.createElement(\"button\", {\n            type: \"button\",\n            onClick: function onClick(e) {\n              return _this.enableDrugModal(drug);\n            },\n            class: \"btn btn-primary btn-sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 287\n            },\n            __self: this\n          }, \"UPDATE\") : \"\"));\n        });\n      }\n\n      return items;\n    };\n\n    _this.state = {\n      drugs: [],\n      isloading: true,\n      drug: {},\n      visible: false,\n      name: {\n        value: '',\n        validateStatus: ''\n      },\n      amount: {\n        value: '',\n        validateStatus: ''\n      },\n      alias: {\n        value: '',\n        validateStatus: ''\n      },\n      insiderAttackStatus: false\n    };\n    _this.onsubmitDrug = _this.onsubmitDrug.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.deleteDrug = _this.deleteDrug.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Drug, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getAllDrugs();\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(event, validationFun) {\n      var target = event.target;\n      var inputName = target.name;\n      var inputValue = target.value;\n      this.setState(_defineProperty({}, inputName, _objectSpread({\n        value: inputValue\n      }, validationFun(inputValue))));\n    }\n  }, {\n    key: \"isFormInvalid\",\n    value: function isFormInvalid() {\n      return !(this.state.name.validateStatus === 'success' && this.state.amount.validateStatus === 'success' && this.state.alias.validateStatus === 'success');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var bodystyle = {\n        background: \"#f1f2f7\",\n        display: \"table\",\n        fontFamily: \"'Open Sans' sans-serif !important\",\n        fontSize: \"16px\",\n        width: \"100%\"\n      };\n      return React.createElement(\"div\", {\n        style: bodystyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"right-panel \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }), React.createElement(BreadCrumb, {\n        menu: \"Drug\",\n        submenu: \" \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"content mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, React.createElement(_Modal, {\n        title: \"UPDATE DRUG Modal\",\n        visible: this.state.visible,\n        onOk: this.updateDrug,\n        okButtonProps: {\n          disabled: this.isFormInvalid()\n        },\n        onCancel: this.cancelDrugModal,\n        okText: \"UPDATE\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, React.createElement(_Form, {\n        onSubmit: this.handleSubmit,\n        className: \"signup-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        label: \"Name\",\n        validateStatus: this.state.name.validateStatus,\n        help: this.state.name.errorMsg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, React.createElement(_Input, {\n        size: \"large\",\n        name: \"name\",\n        autoComplete: \"off\",\n        placeholder: \"Drug name\",\n        value: this.state.name.value,\n        onChange: function onChange(event) {\n          return _this2.handleInputChange(event, _this2.validateInput);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      })), React.createElement(FormItem, {\n        label: \"Amount\",\n        validateStatus: this.state.amount.validateStatus,\n        help: this.state.amount.errorMsg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, React.createElement(_Input, {\n        size: \"large\",\n        name: \"amount\",\n        autoComplete: \"off\",\n        placeholder: \"Amount in number e.g 100\",\n        value: this.state.amount.value,\n        onChange: function onChange(event) {\n          return _this2.handleInputChange(event, _this2.validateInput);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      })), React.createElement(FormItem, {\n        label: \"Alias\",\n        validateStatus: this.state.alias.validateStatus,\n        help: this.state.alias.errorMsg,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(_Input, {\n        size: \"large\",\n        name: \"alias\",\n        autoComplete: \"off\",\n        placeholder: \"Alias e.g Pz\",\n        value: this.state.alias.value,\n        onChange: function onChange(event) {\n          return _this2.handleInputChange(event, _this2.validateInput);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }))))), React.createElement(_Spin, {\n        spinning: this.state.isloading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, hasAuthority([\"ROLE_USER_CREATE_DRUG\"]) || this.state.insiderAttackStatus ? React.createElement(\"div\", {\n        class: \"col-lg-9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, \"Drug\"), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, \" Form\")), React.createElement(\"form\", {\n        onSubmit: this.onsubmitDrug,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"card-body card-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        class: \" form-control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, \"Name\"), getFieldDecorator('name', {\n        rules: [{\n          required: true,\n          message: 'Please input your Name!'\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"lock\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 433\n          },\n          __self: this\n        }),\n        name: \"name\",\n        placeholder: \"Enter your Drug name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"company\",\n        class: \" form-control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443\n        },\n        __self: this\n      }, \"Amount\"), getFieldDecorator('amount', {\n        rules: [{\n          required: true,\n          message: 'Please input Amount!'\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"lock\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 455\n          },\n          __self: this\n        }),\n        name: \"amount\",\n        placeholder: \"Enter your Amount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        for: \"company\",\n        class: \" form-control-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466\n        },\n        __self: this\n      }, \"Alias\"), getFieldDecorator('alias', {\n        rules: [{\n          required: true,\n          message: 'Please input Alias !'\n        }]\n      })(React.createElement(_Input, {\n        prefix: React.createElement(_Icon, {\n          type: \"lock\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 478\n          },\n          __self: this\n        }),\n        name: \"alias\",\n        placeholder: \"Enter your Drug Alias\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 477\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn pull-right btn-primary btn-flat m-b-30 m-t-30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      }, \"Create\"))))))) : \" \", React.createElement(\"div\", {\n        class: \"col-lg-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509\n        },\n        __self: this\n      }, \"Insider\"), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }, \" Attacker\")), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }, React.createElement(_Switch, {\n        checkedChildren: \"Enabled\",\n        unCheckedChildren: \"Disabled\",\n        onChange: function onChange(e) {\n          return _this2.insiderAttackSwitch(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 530\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 531\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      }, \"Data Table\")), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        id: \"bootstrap-data-table-export\",\n        className: \"table table-striped table-bordered\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 536\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 537\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 538\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }, \"Amount\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }, \"Alias\"), hasAuthority([\"ROLE_USER_UPDATE_DRUG\", \"ROLE_USER_DELETE_DRUG\"]) || this.state.insiderAttackStatus ? React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }, \"Settings\") : \"\")), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551\n        },\n        __self: this\n      }, this.mapDrugTables())))))))))));\n    }\n  }]);\n\n  return Drug;\n}(Component);\n\nexport default DrugPage;","map":{"version":3,"sources":["C:\\Users\\Positive\\Documents\\Projects\\trello-ui\\src\\pages\\doctor\\drugpage\\drug.js"],"names":["React","Component","Header","Navbar","BreadCrumb","fetchAllDrugs","createDrug","updateDeleteDrug","updateCreatedDrug","hasAuthority","getForbiddenCount","FormItem","Item","DrugPage","AntWrappedDrug","create","Drug","props","history","push","onsubmitDrug","e","preventDefault","setState","isloading","form","validateFields","err","values","console","log","then","response","data","message","description","resetFields","getAllDrugs","catch","error","status","rediredt","drugs","deleteDrug","id","updateDrug","visible","state","drug","name","amount","alias","updatedDrugRequest","value","enableDrugModal","validateStatus","cancelDrugModal","cancelDrug","validateInput","input","errorMsg","insiderAttackSwitch","insiderAttackStatus","mapDrugTables","items","width","map","margin","bind","event","validationFun","target","inputName","inputValue","getFieldDecorator","bodystyle","background","display","fontFamily","fontSize","disabled","isFormInvalid","handleSubmit","handleInputChange","rules","required"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Header from '../../../partials/header';\r\nimport Navbar from '../../../partials/navbar'\r\nimport BreadCrumb from '../../../partials/breadcrumb'\r\nimport {fetchAllDrugs,createDrug,updateDeleteDrug,updateCreatedDrug} from './drug-api'\r\nimport {hasAuthority,getForbiddenCount} from  '../../../utils/api-utils'\r\n\r\nimport {\r\n    Form,\r\n    Input,\r\n    Tooltip,\r\n    Icon,\r\n    Switch,\r\n    Modal,\r\n    Spin, \r\n    notification,\r\n    Popconfirm\r\n  } from 'antd';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass DrugPage extends Component {\r\n    render() {\r\n        const AntWrappedDrug = Form.create()(Drug);\r\n        return (\r\n            <AntWrappedDrug rediredt ={this.props.history.push} />           \r\n        );\r\n    }\r\n}\r\n\r\nclass Drug extends Component  {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            drugs:[],\r\n            isloading:true,\r\n            drug:{},\r\n            visible:false,\r\n\r\n            name: {\r\n                value: '',\r\n                validateStatus:''\r\n            },\r\n            amount: {\r\n                value: '',\r\n                validateStatus:''\r\n            },\r\n            alias: {\r\n                value: '',\r\n                validateStatus:''\r\n            },\r\n\r\n            insiderAttackStatus:false,\r\n            \r\n        }\r\n            this.onsubmitDrug = this.onsubmitDrug.bind(this);\r\n            this.deleteDrug = this.deleteDrug.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getAllDrugs()\r\n    }\r\n\r\n    onsubmitDrug = (e) => {\r\n        e.preventDefault();\r\n        this.setState({isloading:true})\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log(values);\r\n                createDrug(values)\r\n                .then(response =>{\r\n                    console.log(response.data);\r\n                    if(response.data){\r\n                        notification['success']({\r\n                            message: 'MEDTHREAT',\r\n                            description:\r\n                              'Drug Created Successfully',\r\n                          });\r\n                        this.props.form.resetFields();\r\n                        this.getAllDrugs()\r\n                    }\r\n                })\r\n                .catch((error)=> {\r\n                    console.log(\"Drug Error Response\");\r\n\r\n              \r\n                    notification['error']({\r\n                    message: 'MEDTHREAT',\r\n                    description:\r\n                        `Error Occured Creating Drug .`,\r\n                    });\r\n                    this.setState({isloading:false})\r\n                    console.log(error.response.status);\r\n\r\n                    getForbiddenCount(this.props.rediredt)\r\n        \r\n                });\r\n            }\r\n            this.setState({isloading:false})\r\n\r\n        });\r\n    }\r\n\r\n    getAllDrugs = () =>{\r\n        this.setState({isloading:true})\r\n        fetchAllDrugs()\r\n        .then(response=>{\r\n            console.log(\"drug Response\");\r\n            console.log(response.data)\r\n            this.setState({drugs:response.data})\r\n            this.setState({isloading:false})\r\n        })\r\n        .catch((error)=> {\r\n            console.log(\"drug Error Response\");\r\n      \r\n            notification['error']({\r\n            message: 'MEDTHREAT',\r\n            description:\r\n                `An Error Fetching Drug .`,\r\n            });\r\n            \r\n            console.log(error.response.status);\r\n            getForbiddenCount(this.props.rediredt)\r\n        });\r\n    }\r\n\r\n    deleteDrug = (id)=>{\r\n        console.log( id)\r\n        updateDeleteDrug(id)\r\n        .then(response=>{\r\n            console.log(\"drug Response\");\r\n            console.log(response.data)\r\n            this.getAllDrugs()\r\n\r\n            // this.setState({drugs:response.data})\r\n            // this.setState({isloading:false})\r\n        })\r\n        .catch((error)=> {\r\n            console.log(\"drug Error Response\");\r\n      \r\n            notification['error']({\r\n            message: 'MEDTHREAT',\r\n            description:\r\n                `An Error Occured Deleting Drug .`,\r\n            });\r\n            \r\n            console.log(error);\r\n            // this.props.rediredt(\"/\")\r\n\r\n            // let rt = this.props\r\n\r\n            // getForbiddenCount(rt)\r\n            getForbiddenCount(this.props.rediredt)\r\n\r\n        });\r\n    }\r\n\r\n    updateDrug = ()=>{\r\n        this.setState({visible:false})\r\n        const {drug,name, amount, alias}=this.state\r\n        let updatedDrugRequest = {\r\n            id:drug.id,\r\n            name:name.value,\r\n            amount:amount.value,\r\n            alias:alias.value\r\n        }\r\n        updateCreatedDrug(updatedDrugRequest)\r\n        .then(response =>{\r\n            console.log(response.data);\r\n            if(response.data){\r\n                notification['success']({\r\n                    message: 'MEDTHREAT',\r\n                    description:\r\n                      'Drug Updated Successfully',\r\n                  });\r\n                // this.props.form.resetFields();\r\n                this.getAllDrugs()\r\n                this.setState({drug:{}})\r\n            }\r\n        })\r\n        .catch((error)=> {\r\n            console.log(\"Drug Error Response\");\r\n      \r\n            notification['error']({\r\n            message: 'MEDTHREAT',\r\n            description:\r\n                `Error Occured Updating Drug .`,\r\n            });\r\n            this.setState({isloading:false})\r\n            console.log(error.response.status);\r\n            getForbiddenCount(this.props.rediredt)\r\n\r\n        });\r\n\r\n    }\r\n\r\n    enableDrugModal =(drug)=>{\r\n        this.setState({drug})\r\n        this.setState({name:{value: drug.name, validateStatus:'success'}})\r\n        this.setState({amount:{value: drug.amount, validateStatus:'success'}})\r\n        this.setState({alias:{value: drug.alias, validateStatus:'success'}})\r\n        this.setState({visible:true})\r\n    }\r\n\r\n    cancelDrugModal =(drug)=>{\r\n        \r\n        this.setState({visible:false})\r\n    }\r\n\r\n    cancelDrug = ()=>{\r\n\r\n    }\r\n\r\n    validateInput = (input) => {\r\n        if (input) {\r\n            return {\r\n                validateStatus: 'success',\r\n                errorMsg: null,\r\n            };\r\n        } else {\r\n            \r\n            return {\r\n                validateStatus: 'error',\r\n                errorMsg: `This field is required`\r\n            };\r\n        }\r\n    }\r\n\r\n    handleInputChange(event, validationFun) {\r\n        const target = event.target;\r\n        const inputName = target.name;\r\n        const inputValue = target.value;\r\n\r\n        this.setState({\r\n            [inputName]: {\r\n                value: inputValue,\r\n                ...validationFun(inputValue)\r\n            }\r\n        });\r\n    }\r\n\r\n    isFormInvalid() {\r\n        return !(this.state.name.validateStatus === 'success' &&\r\n            this.state.amount.validateStatus === 'success' &&\r\n            this.state.alias.validateStatus === 'success' \r\n                    );\r\n    }\r\n\r\n    insiderAttackSwitch = (e)=>{\r\n        console.log(\"insiderAttackSwitch\")\r\n        console.log(e)\r\n        this.setState({insiderAttackStatus:e})\r\n    }\r\n\r\n    mapDrugTables = () =>{\r\n        let items = <tr style={{ width: '100%' }} className=\"col-md-12\" >No drug</tr>\r\n\r\n        if (this.state.drugs) {\r\n\r\n            items = this.state.drugs.map(drug => {\r\n              return (\r\n                <tr key={drug.id}>\r\n                    <td>{drug.name}</td>\r\n                    <td>{drug.amount}</td>\r\n                    <td>{drug.alias}</td>\r\n                    <td>\r\n                        {\r\n                            hasAuthority([\"ROLE_USER_DELETE_DRUG\"]) || this.state.insiderAttackStatus\r\n                            ?\r\n                                <Popconfirm\r\n                                    title=\"Are you sure delete this Item?\"\r\n                                    onConfirm={(e)=>this.deleteDrug(drug.id)}\r\n                                    onCancel={this.cancelDrug()}\r\n                                    okText=\"Yes\"\r\n                                    cancelText=\"No\"\r\n                                >\r\n                                    <button style={{margin:'5px'}} type=\"button\" class=\"btn btn-danger btn-sm\">DELETE</button>    \r\n                                </Popconfirm>\r\n                            :\r\n                            \"\"\r\n                        }\r\n\r\n                        {\r\n                            hasAuthority([\"ROLE_USER_UPDATE_DRUG\"]) || this.state.insiderAttackStatus\r\n                            ?\r\n                                <button type=\"button\" onClick={(e)=>this.enableDrugModal(drug)} class=\"btn btn-primary btn-sm\">UPDATE</button>\r\n                            :\r\n                            \"\"\r\n                        }\r\n                    \r\n                    \r\n\r\n                            {/* <Button className='m-1' color=\"primary\" size=\"xs\"\r\n                                onClick={() => { this.setPublicationUpdate(item) }}>\r\n                                Update\r\n                            </Button> */}\r\n                            {/* <Button className='m-1' color=\"danger\" size=\"xs\"\r\n                                onClick={() => { this.deleteItem(item) }}>\r\n                                Delete\r\n                            </Button> */}\r\n                    </td>  \r\n                </tr>\r\n              )\r\n            });\r\n        }\r\n\r\n        return items;\r\n\r\n    }\r\n\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form;\r\n    const bodystyle =  {\r\n        background: \"#f1f2f7\",\r\n        display: \"table\",\r\n        fontFamily: \"'Open Sans' sans-serif !important\",\r\n        fontSize: \"16px\",\r\n        width: \"100%\" }\r\n\r\n    return (\r\n        <div style={bodystyle}>\r\n        {/* <!-- Left Panel --> */}\r\n\r\n            <Navbar></Navbar>\r\n            {/* <!-- /#left-panel --> */}\r\n            {/* <!-- Left Panel --> */}\r\n\r\n            {/* <!-- Right Panel --> */}\r\n\r\n            <div  class=\"right-panel \">\r\n                <Header></Header>\r\n                {/* <!-- /header --> */}\r\n                {/* <!-- Header--> */}\r\n\r\n                <BreadCrumb menu=\"Drug\" submenu=\" \"></BreadCrumb>\r\n\r\n                <div class=\"content mt-3\">\r\n                    \r\n                    <div class=\"animated fadeIn\">\r\n                        <Modal\r\n                        title=\"UPDATE DRUG Modal\"\r\n                        visible={this.state.visible}\r\n                        onOk={this.updateDrug}\r\n                        okButtonProps={{ disabled: this.isFormInvalid() }}\r\n                        onCancel={this.cancelDrugModal}\r\n                        okText=\"UPDATE\"\r\n                        >\r\n                            <div className=\"row\">\r\n                                <Form onSubmit={this.handleSubmit} className=\"signup-form\">\r\n                                    <FormItem\r\n                                        label=\"Name\"\r\n                                        validateStatus={this.state.name.validateStatus}\r\n                                        help={this.state.name.errorMsg}>\r\n                                        <Input\r\n                                            size=\"large\"\r\n                                            name=\"name\"\r\n                                            autoComplete=\"off\"\r\n                                            placeholder=\"Drug name\"\r\n                                            value={this.state.name.value}\r\n                                            onChange={(event) => this.handleInputChange(event, this.validateInput)}/>\r\n                                    </FormItem>\r\n\r\n                                    <FormItem\r\n                                        label=\"Amount\"\r\n                                        validateStatus={this.state.amount.validateStatus}\r\n                                        help={this.state.amount.errorMsg}>\r\n                                        <Input\r\n                                            size=\"large\"\r\n                                            name=\"amount\"\r\n                                            autoComplete=\"off\"\r\n                                            placeholder=\"Amount in number e.g 100\"\r\n                                            value={this.state.amount.value}\r\n                                            onChange={(event) => this.handleInputChange(event, this.validateInput)}/>\r\n                                    </FormItem>\r\n\r\n                                    <FormItem\r\n                                        label=\"Alias\"\r\n                                        validateStatus={this.state.alias.validateStatus}\r\n                                        help={this.state.alias.errorMsg}>\r\n                                        <Input\r\n                                            size=\"large\"\r\n                                            name=\"alias\"\r\n                                            autoComplete=\"off\"\r\n                                            placeholder=\"Alias e.g Pz\"\r\n                                            value={this.state.alias.value}\r\n                                            onChange={(event) => this.handleInputChange(event, this.validateInput)}/>\r\n                                    </FormItem>\r\n                                    \r\n                                    {/* <FormItem>\r\n                                        <Button type=\"primary\"\r\n                                                htmlType=\"submit\"\r\n                                                size=\"large\"\r\n                                                className=\"signup-form-button\"\r\n                                                disabled={this.isFormInvalid()}>Update</Button>\r\n                                    </FormItem> */}\r\n                                </Form>\r\n                            </div>\r\n                            \r\n                        </Modal>\r\n\r\n\r\n                        <Spin spinning={this.state.isloading}>\r\n                            {/* Table for drugs */}\r\n                            <div className=\"row\">\r\n                            {\r\n                                hasAuthority([\"ROLE_USER_CREATE_DRUG\"]) || this.state.insiderAttackStatus\r\n                                ?\r\n\r\n                                    \r\n                                    <div class=\"col-lg-9\">\r\n                                        <div class=\"card\">\r\n                                            <div class=\"card-header\">\r\n                                                <strong>Drug</strong>\r\n                                                <small> Form</small>\r\n                                            </div>\r\n                                            <form onSubmit={this.onsubmitDrug}>\r\n                                                <div class=\"card-body card-block\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <FormItem>\r\n                                                            <label  class=\" form-control-label\">\r\n                                                                Name\r\n                                                            </label>\r\n                                                            {getFieldDecorator('name', {\r\n                                                                rules: [\r\n                                                                    {\r\n                                                                        required: true,\r\n                                                                        message: 'Please input your Name!'\r\n                                                                    }\r\n                                                                ]\r\n                                                            })(\r\n                                                                <Input\r\n                                                                    prefix={<Icon type=\"lock\"/>}\r\n                                                                    name=\"name\"\r\n                                                                    placeholder=\"Enter your Drug name\"\r\n                                                                />\r\n\r\n                                                            )}\r\n                                                        </FormItem>    \r\n                                                    </div>\r\n                                                    <div class=\"form-group\">\r\n                                                        <FormItem>\r\n                                                            <label for=\"company\" class=\" form-control-label\">\r\n                                                                Amount\r\n                                                            </label>\r\n                                                            {getFieldDecorator('amount', {\r\n                                                                rules: [\r\n                                                                    {\r\n                                                                        required: true,\r\n                                                                        message: 'Please input Amount!'\r\n                                                                    }\r\n                                                                ]\r\n                                                            })(\r\n                                                                <Input\r\n                                                                    prefix={<Icon type=\"lock\"/>}\r\n                                                                    name=\"amount\"\r\n                                                                    placeholder=\"Enter your Amount\"\r\n                                                                />\r\n\r\n                                                            )}\r\n                                                        </FormItem>    \r\n                                                    </div>\r\n\r\n                                                    <div class=\"form-group\">\r\n                                                        <FormItem>\r\n                                                            <label for=\"company\" class=\" form-control-label\">\r\n                                                                Alias\r\n                                                            </label>\r\n                                                            {getFieldDecorator('alias', {\r\n                                                                rules: [\r\n                                                                    {\r\n                                                                        required: true,\r\n                                                                        message: 'Please input Alias !'\r\n                                                                    }\r\n                                                                ]\r\n                                                            })(\r\n                                                                <Input\r\n                                                                    prefix={<Icon type=\"lock\"/>}\r\n                                                                    name=\"alias\"\r\n                                                                    placeholder=\"Enter your Drug Alias\"\r\n                                                                />\r\n\r\n                                                            )}\r\n                                                        </FormItem>    \r\n                                                    </div>\r\n\r\n                                                    <div class=\"form-group\">\r\n                                                        <FormItem>\r\n                                                            <button type=\"submit\" className=\"btn pull-right btn-primary btn-flat m-b-30 m-t-30\">Create</button>\r\n                                                        </FormItem>\r\n                                                    </div>\r\n\r\n                                                    \r\n\r\n                                                </div>\r\n                                            </form>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    \r\n                                 \r\n                                 : \r\n                                 \r\n                                 \" \"\r\n                            }\r\n                                <div class=\"col-lg-3\">\r\n                                    <div class=\"card\">\r\n                                        <div class=\"card-header\">\r\n                                            <strong>Insider</strong>\r\n                                            <small> Attacker</small>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <Switch \r\n                                            checkedChildren=\"Enabled\" \r\n                                            unCheckedChildren=\"Disabled\" \r\n                                            onChange={(e)=>this.insiderAttackSwitch(e)} \r\n                                            />\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n\r\n                                </div>\r\n\r\n                            </div>\r\n                            \r\n\r\n                            {/* Table for drugs */}\r\n                            <div class=\"row\">\r\n\r\n                                <div className=\"col-md-12\">\r\n                                    <div className=\"card\">\r\n                                        <div className=\"card-header\">\r\n                                            <strong className=\"card-title\">Data Table</strong>\r\n                                        </div>\r\n                                        <div className=\"card-body\">\r\n                                            <table id=\"bootstrap-data-table-export\" className=\"table table-striped table-bordered\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>Name</th>\r\n                                                        <th>Amount</th>\r\n                                                        <th>Alias</th>\r\n                                                        {\r\n                                                            hasAuthority([\"ROLE_USER_UPDATE_DRUG\",\"ROLE_USER_DELETE_DRUG\"]) || this.state.insiderAttackStatus\r\n                                                            ?\r\n                                                                <th>Settings</th>\r\n                                                            :\r\n                                                            \"\"\r\n                                                        }\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {this.mapDrugTables()}  \r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n\r\n                        </Spin>\r\n\r\n                    </div>\r\n                </div>\r\n                {/* <!-- .content --> */}\r\n            </div>\r\n            {/* <!-- /#right-panel --> */}\r\n\r\n            {/* <!-- Right Panel --> */}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DrugPage;\r\n"]},"metadata":{},"sourceType":"module"}