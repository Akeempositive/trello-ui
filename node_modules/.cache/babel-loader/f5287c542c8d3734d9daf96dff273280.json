{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/popconfirm/style\";\nimport _Popconfirm from \"antd/es/popconfirm\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nimport \"antd/es/divider/style\";\nimport _Divider from \"antd/es/divider\";\nimport _classCallCheck from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/src/pages/doctor/user/userpage.js\";\nimport React, { Component } from 'react';\nimport Header from '../../../partials/header';\nimport Navbar from '../../../partials/navbar';\nimport BreadCrumb from '../../../partials/breadcrumb';\nimport { fetchAllUsers } from './user-api';\n\nvar UserPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserPage, _Component);\n\n  function UserPage(props) {\n    var _this;\n\n    _classCallCheck(this, UserPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserPage).call(this, props));\n\n    _this.getAccontLockedInfo = function (block) {\n      var badge = {\n        clazz: \"badge badge-info\",\n        display: \"Active\"\n      };\n\n      if (block == 0) {\n        badge = {\n          class: \"badge badge-danger\",\n          display: \"Blocked\"\n        };\n      }\n\n      return React.createElement(\"span\", {\n        className: badge.clazz,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, badge.display);\n    };\n\n    _this.getTableHeader = function () {\n      // let t={\n      //     \"createdAt\": null,\n      //     \"updatedAt\": null,\n      //     \"id\": 6,\n      //     \"firstName\": \"Truth Test\",\n      //     \"lastName\": \"Truth Test\",\n      //     \"phoneNo\": \"08055775577\",\n      //     \"email\": \"test6@test.com\",\n      //     \"roles\": [],\n      //     \"illegalCount\": 0,\n      //     \"block\": 1\n      // }\n      var columns = [{\n        title: 'First Name',\n        dataIndex: 'firstName',\n        key: 'firstName'\n      }, {\n        title: 'Last Name',\n        dataIndex: 'lastName',\n        key: 'lastName'\n      }, {\n        title: 'Email',\n        dataIndex: 'email',\n        key: 'email'\n      }, {\n        title: 'Phone Number',\n        dataIndex: 'phoneNo',\n        key: 'phoneNo'\n      }, {\n        title: 'Roles',\n        dataIndex: 'roles',\n        key: 'roles',\n        render: function render(roles) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            },\n            __self: this\n          }, roles.map(function (role) {\n            return React.createElement(\"span\", {\n              className: \"badge badge-secondary\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 107\n              },\n              __self: this\n            }, \"role\");\n          }));\n        }\n      }, {\n        title: 'UnAuthorized Activity',\n        dataIndex: 'illegalCount',\n        key: 'illegalCount'\n      }, {\n        title: 'Account Status',\n        dataIndex: 'block',\n        key: 'block',\n        render: function render(block) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127\n            },\n            __self: this\n          }, _this.getAccontLockedInfo(block));\n        }\n      }, {\n        title: 'Action',\n        key: 'action',\n        render: function render(text, record) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 137\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }, \"iD \", record.id), React.createElement(_Divider, {\n            type: \"vertical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          }), React.createElement(\"a\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140\n            },\n            __self: this\n          }, \"Delete\"), React.createElement(_Divider, {\n            type: \"vertical\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141\n            },\n            __self: this\n          }), React.createElement(\"a\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            },\n            __self: this\n          }, \"View Audit Trail\"));\n        }\n      }];\n      return columns;\n    };\n\n    _this.getAllUsers = function () {\n      _this.setState({\n        isloading: true\n      });\n\n      fetchAllUsers().then(function (response) {\n        console.log(\"Users Response\");\n        var users = response.data;\n        console.log(response.data);\n\n        _this.setState({\n          allu: users\n        });\n\n        _this.setState({\n          isloading: false\n        });\n      }).catch(function (error) {\n        console.log(\"User Error Response\");\n\n        _notification['error']({\n          message: 'MEDTHREAT',\n          description: \"An Error Fetching Users .\"\n        });\n\n        _this.setState({\n          isloading: false\n        });\n\n        console.log(error);\n      });\n    };\n\n    _this.deleteDrug = function (id) {\n      console.log(id);\n    };\n\n    _this.cancelDrug = function () {};\n\n    _this.mapDrugTables = function () {\n      var items = React.createElement(\"tr\", {\n        style: {\n          width: '100%'\n        },\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"No drug\");\n\n      if (_this.state.drugs) {\n        items = _this.state.drugs.map(function (drug) {\n          return React.createElement(\"tr\", {\n            key: drug.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 228\n            },\n            __self: this\n          }, drug.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 229\n            },\n            __self: this\n          }, drug.amount), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 230\n            },\n            __self: this\n          }, drug.alias), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 231\n            },\n            __self: this\n          }, React.createElement(_Popconfirm, {\n            title: \"Are you sure delete this Item?\",\n            onConfirm: function onConfirm(e) {\n              return _this.deleteDrug(drug);\n            },\n            onCancel: _this.cancelDrug(),\n            okText: \"Yes\",\n            cancelText: \"No\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 232\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: \"#\",\n            style: {\n              margin: '5px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 239\n            },\n            __self: this\n          }, \"Delete\")), React.createElement(\"button\", {\n            type: \"button\",\n            class: \"btn btn-primary btn-sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 242\n            },\n            __self: this\n          }, \"Delete\")));\n        });\n      }\n\n      return items;\n    };\n\n    _this.state = {\n      allu: [{\n        \"createdAt\": null,\n        \"updatedAt\": null,\n        \"id\": 6,\n        \"firstName\": \"Truth Test\",\n        \"lastName\": \"Truth Test\",\n        \"phoneNo\": \"08055775577\",\n        \"email\": \"test6@test.com\",\n        \"roles\": [\"hello\", \"hhv\"],\n        \"illegalCount\": 0,\n        \"block\": 1\n      }],\n      isloading: true // this.onsubmitDrug = this.onsubmitDrug.bind(this);\n      // this.deleteDrug = this.deleteDrug.bind(this);\n\n    };\n    return _this;\n  }\n\n  _createClass(UserPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getAllUsers();\n    } // <span class=\"badge badge-primary\">Primary</span>\n    //                                 <span class=\"badge badge-secondary\">Secondary</span>\n    //                                 <span class=\"badge badge-success\">Success</span>\n    //                                 <span class=\"badge badge-danger\">Danger</span>\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var bodystyle = {\n        background: \"#f1f2f7\",\n        display: \"table\",\n        fontFamily: \"'Open Sans' sans-serif !important\",\n        fontSize: \"16px\",\n        width: \"100%\"\n      };\n      return React.createElement(\"div\", {\n        style: bodystyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"right-panel \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }), React.createElement(BreadCrumb, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"content mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, React.createElement(_Spin, {\n        spinning: this.state.isloading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, \"Data Table\")), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(_Table, {\n        columns: this.getTableHeader(),\n        dataSource: this.state.allu,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }))))))))));\n    }\n  }]);\n\n  return UserPage;\n}(Component);\n\nexport default UserPage;","map":{"version":3,"sources":["/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/src/pages/doctor/user/userpage.js"],"names":["React","Component","Header","Navbar","BreadCrumb","fetchAllUsers","UserPage","props","getAccontLockedInfo","block","badge","clazz","display","class","getTableHeader","columns","title","dataIndex","key","render","roles","map","role","text","record","id","getAllUsers","setState","isloading","then","response","console","log","users","data","allu","catch","error","message","description","deleteDrug","cancelDrug","mapDrugTables","items","width","state","drugs","drug","name","amount","alias","e","margin","bodystyle","background","fontFamily","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from '../../../partials/header';\nimport Navbar from '../../../partials/navbar'\nimport BreadCrumb from '../../../partials/breadcrumb'\nimport {fetchAllUsers} from './user-api'\nimport {\n    Form,\n    Input,\n    Tooltip,\n    Icon,\n    Cascader,\n    Select,\n    Row,\n    Col,\n    Spin,\n    notification,Popconfirm,Table, Divider, Tag \n  } from 'antd';\n\nclass UserPage extends Component  {\n    constructor(props) {\n        super(props);\n        this.state={\n            allu:[{\n                \"createdAt\": null,\n                \"updatedAt\": null,\n                \"id\": 6,\n                \"firstName\": \"Truth Test\",\n                \"lastName\": \"Truth Test\",\n                \"phoneNo\": \"08055775577\",\n                \"email\": \"test6@test.com\",\n                \"roles\": [\"hello\",\"hhv\"],\n                \"illegalCount\": 0,\n                \"block\": 1\n            }],\n            isloading:true\n        }\n            // this.onsubmitDrug = this.onsubmitDrug.bind(this);\n            // this.deleteDrug = this.deleteDrug.bind(this);\n\n    }\n\n    componentDidMount(){\n        this.getAllUsers()\n    }\n\n    // <span class=\"badge badge-primary\">Primary</span>\n    //                                 <span class=\"badge badge-secondary\">Secondary</span>\n    //                                 <span class=\"badge badge-success\">Success</span>\n    //                                 <span class=\"badge badge-danger\">Danger</span>\n\n     \n\n    getAccontLockedInfo = (block)=>{\n        let badge = {clazz:\"badge badge-info\", display:\"Active\"}\n        if(block==0){\n            badge = {class:\"badge badge-danger\", display:\"Blocked\"}\n        }    \n        return (\n            <span className={badge.clazz}>\n                {badge.display}\n            </span>\n        );                  \n    }\n\n    getTableHeader = ()=>{\n        // let t={\n        //     \"createdAt\": null,\n        //     \"updatedAt\": null,\n        //     \"id\": 6,\n        //     \"firstName\": \"Truth Test\",\n        //     \"lastName\": \"Truth Test\",\n        //     \"phoneNo\": \"08055775577\",\n        //     \"email\": \"test6@test.com\",\n        //     \"roles\": [],\n        //     \"illegalCount\": 0,\n        //     \"block\": 1\n        // }\n        const columns = [\n            {\n              title: 'First Name',\n              dataIndex: 'firstName',\n              key: 'firstName',\n            },\n            {\n                title: 'Last Name',\n                dataIndex: 'lastName',\n                key: 'lastName',\n            },\n            {\n              title: 'Email',\n              dataIndex: 'email',\n              key: 'email',\n            },\n            {\n              title: 'Phone Number',\n              dataIndex: 'phoneNo',\n              key: 'phoneNo',\n            },\n            {\n                title: 'Roles',\n                dataIndex: 'roles',\n                key: 'roles',\n                render: roles => (\n                    <span>\n                      {roles.map(role => {\n                        return (\n                            <span className=\"badge badge-secondary\">\n                                role\n                            </span>\n                        );   \n                      })}\n                    </span>\n                ),\n            },\n\n            {\n                title: 'UnAuthorized Activity',\n                dataIndex: 'illegalCount',\n                key: 'illegalCount',\n            },\n            \n            {\n                title: 'Account Status',\n                dataIndex: 'block',\n                key: 'block',\n                render: block => (\n                    <span>\n                        {this.getAccontLockedInfo(block)}  \n                    </span>\n                  ),\n            },\n           \n            {\n                title: 'Action',\n                key: 'action',\n                render: (text, record) => (\n                  <span>\n                    <a>iD {record.id}</a>\n                    <Divider type=\"vertical\" />\n                    <a>Delete</a>\n                    <Divider type=\"vertical\" />\n                    <a>View Audit Trail</a>\n                  </span>\n                ),\n              },\n          ];\n\n          return columns\n    }\n\n    \n    // onsubmitDrug = (e) => {\n    //     e.preventDefault();\n    //     this.setState({isloading:true})\n    //     this.props.form.validateFields((err, values) => {\n    //         if (!err) {\n    //             console.log(values);\n    //             createDrug(values)\n    //             .then(response =>{\n    //                 console.log(response.data);\n    //                 if(response.data){\n    //                     notification['success']({\n    //                         message: 'MEDTHREAT',\n    //                         description:\n    //                           'Drug Created Successfully',\n    //                       });\n    //                     this.props.form.resetFields();\n    //                     this.getAllDrugs()\n    //                 }\n    //             })\n    //             .catch((error)=> {\n    //                 console.log(\"Drug Error Response\");\n              \n    //                 notification['error']({\n    //                 message: 'MEDTHREAT',\n    //                 description:\n    //                     `Error Occured Creating Drug .`,\n    //                 });\n    //                 this.setState({isloading:false})\n    //                 console.log(error.response.status);\n        \n    //             });\n    //         }\n    //     });\n    // }\n\n    getAllUsers = () =>{\n        this.setState({isloading:true})\n        fetchAllUsers()\n        .then(response=>{\n            console.log(\"Users Response\");\n            let users = response.data\n            console.log(response.data)\n            this.setState({allu:users})\n            this.setState({isloading:false})\n        })\n        .catch((error)=> {\n            console.log(\"User Error Response\");\n      \n            notification['error']({\n            message: 'MEDTHREAT',\n            description:\n                `An Error Fetching Users .`,\n            });\n\n            this.setState({isloading:false})\n            console.log(error);\n\n        });\n    }\n\n    deleteDrug = (id)=>{\n        console.log( id)\n\n    }\n    cancelDrug = ()=>{\n\n    }\n\n    mapDrugTables = () =>{\n        let items = <tr style={{ width: '100%' }} className=\"col-md-12\" >No drug</tr>\n\n        if (this.state.drugs) {\n\n            items = this.state.drugs.map(drug => {\n              return (\n                <tr key={drug.id}>\n                    <td>{drug.name}</td>\n                    <td>{drug.amount}</td>\n                    <td>{drug.alias}</td>\n                    <td>\n                    <Popconfirm\n                        title=\"Are you sure delete this Item?\"\n                        onConfirm={(e)=>this.deleteDrug(drug)}\n                        onCancel={this.cancelDrug()}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <a href=\"#\" style={{margin:'5px'}} >Delete</a>\n                        {/* <a style={{margin:'5px'}} type=\"button\" class=\"btn btn-primary\">Update</a>     */}\n                    </Popconfirm>\n                        <button type=\"button\" class=\"btn btn-primary btn-sm\">Delete</button>\n\n                            {/* <Button className='m-1' color=\"primary\" size=\"xs\"\n                                onClick={() => { this.setPublicationUpdate(item) }}>\n                                Update\n                            </Button> */}\n                            {/* <Button className='m-1' color=\"danger\" size=\"xs\"\n                                onClick={() => { this.deleteItem(item) }}>\n                                Delete\n                            </Button> */}\n                    </td>  \n                </tr>\n              )\n            });\n        }\n\n        return items;\n\n    }\n\n  render() {\n    const bodystyle =  {\n        background: \"#f1f2f7\",\n        display: \"table\",\n        fontFamily: \"'Open Sans' sans-serif !important\",\n        fontSize: \"16px\",\n        width: \"100%\" }\n\n    return (\n        <div style={bodystyle}>\n        {/* <!-- Left Panel --> */}\n\n            <Navbar></Navbar>\n            {/* <!-- /#left-panel --> */}\n            {/* <!-- Left Panel --> */}\n\n            {/* <!-- Right Panel --> */}\n\n            <div  class=\"right-panel \">\n                <Header></Header>\n                {/* <!-- /header --> */}\n                {/* <!-- Header--> */}\n\n                <BreadCrumb></BreadCrumb>\n\n                <div class=\"content mt-3\">\n                    \n                    <div class=\"animated fadeIn\">\n                        <Spin spinning={this.state.isloading}>\n\n                            {/* Table for drugs */}\n                            <div class=\"row\">\n\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-header\">\n                                        <strong className=\"card-title\">Data Table</strong>\n                                    </div>\n                                    <div className=\"card-body\">\n                                        <Table columns={this.getTableHeader()} dataSource={this.state.allu} />\n                                    </div>\n                                    \n                                </div>\n                            </div>\n\n\n                        </div>\n\n                        </Spin>\n\n                    </div>\n                </div>\n                {/* <!-- .content --> */}\n            </div>\n            {/* <!-- /#right-panel --> */}\n\n            {/* <!-- Right Panel --> */}\n        </div>\n    );\n  }\n}\n\nexport default UserPage;\n"]},"metadata":{},"sourceType":"module"}