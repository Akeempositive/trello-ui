{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/divider/style\";\nimport _Divider from \"antd/es/divider\";\nimport \"antd/es/avatar/style\";\nimport _Avatar from \"antd/es/avatar\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/popconfirm/style\";\nimport _Popconfirm from \"antd/es/popconfirm\";\nimport \"antd/es/notification/style\";\nimport _notification from \"antd/es/notification\";\nimport _classCallCheck from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nvar _jsxFileName = \"/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/src/pages/doctor/userinfo/userinfo.js\";\nimport React, { Component } from 'react';\nimport Header from '../../../partials/header';\nimport Navbar from '../../../partials/navbar';\nimport BreadCrumb from '../../../partials/breadcrumb';\nimport { fetchOneUser, fetchOneUserAuditTrail } from './userinfo-api';\nimport AuditTrailTable from '../../../common/AuditTableComponent';\nvar Meta = _Card.Meta;\n\nvar UserInfoPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserInfoPage, _Component);\n\n  function UserInfoPage(props) {\n    var _this;\n\n    _classCallCheck(this, UserInfoPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserInfoPage).call(this, props));\n\n    _this.getSingleUser = function (userId) {\n      _this.setState({\n        isUserloading: true\n      });\n\n      fetchOneUser(userId).then(function (response) {\n        console.log(\"Users Response\");\n        console.log(response.data);\n\n        _this.setState({\n          user: response.data\n        });\n\n        _this.setState({\n          isUserloading: false\n        });\n      }).catch(function (error) {\n        console.log(\"User Error Response\");\n\n        _notification['error']({\n          message: 'MEDTHREAT',\n          description: \"An Error Fetching User .\"\n        });\n\n        _this.setState({\n          isUserloading: false\n        });\n\n        console.log(error);\n      });\n    };\n\n    _this.getSingleUserAuditTrails = function (userId) {\n      _this.setState({\n        isloading: true\n      });\n\n      fetchOneUserAuditTrail(userId).then(function (response) {\n        console.log(\"Audit one Response\");\n        console.log(response.data);\n\n        _this.setState({\n          auditTrails: response.data\n        });\n\n        _this.setState({\n          isloading: false\n        });\n      }).catch(function (error) {\n        console.log(\"Audit Error Response\");\n\n        _notification['error']({\n          message: 'MEDTHREAT',\n          description: \"An Error Fetching Audit Trail .\"\n        });\n\n        _this.setState({\n          isloading: false\n        });\n\n        console.log(error);\n      });\n    };\n\n    _this.getAccontLockedInfo = function (block) {\n      var badge = {\n        clazz: \"badge badge-info\",\n        display: \"Active\"\n      };\n\n      if (block == 0) {\n        badge = {\n          clazz: \"badge badge-danger\",\n          display: \"Blocked\"\n        };\n      }\n\n      return React.createElement(\"span\", {\n        className: badge.clazz,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, badge.display);\n    };\n\n    _this.deleteDrug = function (id) {\n      console.log(id);\n    };\n\n    _this.cancelDrug = function () {};\n\n    _this.mapDrugTables = function () {\n      var items = React.createElement(\"tr\", {\n        style: {\n          width: '100%'\n        },\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"No drug\");\n\n      if (_this.state.drugs) {\n        items = _this.state.drugs.map(function (drug) {\n          return React.createElement(\"tr\", {\n            key: drug.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 118\n            },\n            __self: this\n          }, React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119\n            },\n            __self: this\n          }, drug.name), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, drug.amount), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121\n            },\n            __self: this\n          }, drug.alias), React.createElement(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 122\n            },\n            __self: this\n          }, React.createElement(_Popconfirm, {\n            title: \"Are you sure delete this Item?\",\n            onConfirm: function onConfirm(e) {\n              return _this.deleteDrug(drug);\n            },\n            onCancel: _this.cancelDrug(),\n            okText: \"Yes\",\n            cancelText: \"No\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: \"#\",\n            style: {\n              margin: '5px'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, \"Delete\")), React.createElement(\"button\", {\n            type: \"button\",\n            class: \"btn btn-primary btn-sm\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }, \"Delete\")));\n        });\n      }\n\n      return items;\n    };\n\n    _this.test = function () {\n      console.log(\"lol\");\n    };\n\n    _this.state = {\n      user: {\n        roles: []\n      },\n      userId: null,\n      auditTrails: [],\n      isloading: true,\n      isUserloading: true\n    };\n    return _this;\n  }\n\n  _createClass(UserInfoPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var params = this.props.match.params;\n      this.setState({\n        userId: params.userId\n      });\n      this.getSingleUser(params.userId);\n      this.getSingleUserAuditTrails(params.userId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var bodystyle = {\n        background: \"#f1f2f7\",\n        display: \"table\",\n        fontFamily: \"'Open Sans' sans-serif !important\",\n        fontSize: \"16px\",\n        width: \"100%\"\n      };\n      var user = this.state.user;\n      return React.createElement(\"div\", {\n        style: bodystyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"right-panel \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), React.createElement(BreadCrumb, {\n        menu: \"User\",\n        submenu: \"User Information\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"content mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(_Spin, {\n        spinning: this.state.isUserloading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(_Card, {\n        style: {\n          width: \"100%\",\n          marginTop: 16\n        },\n        actions: [React.createElement(\"a\", {\n          onClick: function onClick() {\n            _this2.test();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(_Icon, {\n          type: \"setting\",\n          key: \"setting\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        })), React.createElement(_Icon, {\n          type: \"edit\",\n          key: \"edit\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }), React.createElement(_Icon, {\n          type: \"ellipsis\",\n          key: \"ellipsis\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        })],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Meta, {\n        avatar: React.createElement(_Avatar, {\n          size: \"large\",\n          icon: \"user\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }),\n        title: \"User details\",\n        description: \"User description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"FullName\"), \": \", user.firstName, \" \", user.lastName), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Phone Number \"), \": \", user.phoneNo), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Email\"), \": \", user.email), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \" UnAuthorized Activity Count block\"), \": \", user.illegalCount), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \" Account Status\"), \":  \", this.getAccontLockedInfo(user.block)), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Roles:\"), user.roles.map(function (role) {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"badge badge-secondary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, role.name), React.createElement(_Divider, {\n          type: \"vertical\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218\n          },\n          __self: this\n        }));\n      })))))), React.createElement(_Spin, {\n        spinning: this.state.isloading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(AuditTrailTable, {\n        auditTrails: this.state.auditTrails,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return UserInfoPage;\n}(Component);\n\nexport default UserInfoPage;","map":{"version":3,"sources":["/Users/ddada/Documents/danpersonal/livejavaproject/medthreat/medthreat-ui2/src/pages/doctor/userinfo/userinfo.js"],"names":["React","Component","Header","Navbar","BreadCrumb","fetchOneUser","fetchOneUserAuditTrail","AuditTrailTable","Meta","UserInfoPage","props","getSingleUser","userId","setState","isUserloading","then","response","console","log","data","user","catch","error","message","description","getSingleUserAuditTrails","isloading","auditTrails","getAccontLockedInfo","block","badge","clazz","display","deleteDrug","id","cancelDrug","mapDrugTables","items","width","state","drugs","map","drug","name","amount","alias","e","margin","test","roles","params","match","bodystyle","background","fontFamily","fontSize","marginTop","firstName","lastName","phoneNo","email","illegalCount","role"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from '../../../partials/header';\nimport Navbar from '../../../partials/navbar'\nimport BreadCrumb from '../../../partials/breadcrumb'\nimport {fetchOneUser,fetchOneUserAuditTrail} from './userinfo-api'\nimport {\n    Form,\n    Input,\n    Divider,\n    Icon,Card, Avatar,\n    Spin,\n    notification,Popconfirm\n  } from 'antd';\n  import AuditTrailTable from '../../../common/AuditTableComponent'\n\n\nconst { Meta } = Card;\n\nclass UserInfoPage extends Component  {\n    constructor(props) {\n        super(props);\n        this.state={\n            user:{roles:[]},\n            userId:null,\n            auditTrails:[],\n            isloading:true,\n            isUserloading:true\n        }\n           \n    }\n\n    componentDidMount(){\n        const {match: { params }} = this.props;\n        this.setState({userId:params.userId})\n        this.getSingleUser(params.userId)\n        this.getSingleUserAuditTrails(params.userId)\n    }\n\n    \n    \n    \n\n    getSingleUser = (userId) =>{\n        this.setState({isUserloading:true})\n        fetchOneUser(userId)\n        .then(response=>{\n            console.log(\"Users Response\");\n            console.log(response.data)\n            this.setState({user:response.data})\n            this.setState({isUserloading:false})\n        })\n        .catch((error)=> {\n            console.log(\"User Error Response\");\n      \n            notification['error']({\n            message: 'MEDTHREAT',\n            description:\n                `An Error Fetching User .`,\n            });\n\n            this.setState({isUserloading:false})\n            console.log(error);\n\n        });\n    }\n\n    getSingleUserAuditTrails = (userId) =>{\n        this.setState({isloading:true})\n        fetchOneUserAuditTrail(userId)\n        .then(response=>{\n            console.log(\"Audit one Response\");\n            console.log(response.data)\n            this.setState({auditTrails:response.data})\n            this.setState({isloading:false})\n        })\n        .catch((error)=> {\n            console.log(\"Audit Error Response\");\n      \n            notification['error']({\n            message: 'MEDTHREAT',\n            description:\n                `An Error Fetching Audit Trail .`,\n            });\n\n            this.setState({isloading:false})\n            console.log(error);\n\n        });\n    }\n\n    getAccontLockedInfo = (block)=>{\n        let badge = {clazz:\"badge badge-info\", display:\"Active\"}\n        if(block==0){\n            badge = {clazz:\"badge badge-danger\", display:\"Blocked\"}\n        }    \n        return (\n            <span className={badge.clazz}>\n                {badge.display}\n            </span>\n        );                  \n    }\n\n    deleteDrug = (id)=>{\n        console.log( id)\n\n    }\n    cancelDrug = ()=>{\n\n    }\n\n    mapDrugTables = () =>{\n        let items = <tr style={{ width: '100%' }} className=\"col-md-12\" >No drug</tr>\n\n        if (this.state.drugs) {\n\n            items = this.state.drugs.map(drug => {\n              return (\n                <tr key={drug.id}>\n                    <td>{drug.name}</td>\n                    <td>{drug.amount}</td>\n                    <td>{drug.alias}</td>\n                    <td>\n                    <Popconfirm\n                        title=\"Are you sure delete this Item?\"\n                        onConfirm={(e)=>this.deleteDrug(drug)}\n                        onCancel={this.cancelDrug()}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <a href=\"#\" style={{margin:'5px'}} >Delete</a>\n                        {/* <a style={{margin:'5px'}} type=\"button\" class=\"btn btn-primary\">Update</a>     */}\n                    </Popconfirm>\n                        <button type=\"button\" class=\"btn btn-primary btn-sm\">Delete</button>\n\n                            {/* <Button className='m-1' color=\"primary\" size=\"xs\"\n                                onClick={() => { this.setPublicationUpdate(item) }}>\n                                Update\n                            </Button> */}\n                            {/* <Button className='m-1' color=\"danger\" size=\"xs\"\n                                onClick={() => { this.deleteItem(item) }}>\n                                Delete\n                            </Button> */}\n                    </td>  \n                </tr>\n              )\n            });\n        }\n\n        return items;\n\n    }\n\n    test=()=>{\n        console.log(\"lol\")\n    }\n\n  render() {\n    const bodystyle =  {\n        background: \"#f1f2f7\",\n        display: \"table\",\n        fontFamily: \"'Open Sans' sans-serif !important\",\n        fontSize: \"16px\",\n        width: \"100%\" }\n\n    const {user}=this.state\n\n    return (\n        <div style={bodystyle}>\n        {/* <!-- Left Panel --> */}\n\n            <Navbar></Navbar>\n            {/* <!-- /#left-panel --> */}\n            {/* <!-- Left Panel --> */}\n\n            {/* <!-- Right Panel --> */}\n\n            <div  class=\"right-panel \">\n                <Header></Header>\n                {/* <!-- /header --> */}\n                {/* <!-- Header--> */}\n\n                <BreadCrumb menu=\"User\" submenu=\"User Information\"></BreadCrumb>\n\n                <div class=\"content mt-3\">\n                    \n                    <div class=\"animated fadeIn\">\n                        <Spin spinning={this.state.isUserloading}>\n                            <div class=\"row\">\n\n                                <div className=\"col-md-12\">\n                                    <Card style={{ width: \"100%\", marginTop: 16 }}\n                                        actions={[\n                                            <a onClick={()=>{this.test()}}><Icon type=\"setting\" key=\"setting\" /></a>,\n                                            <Icon type=\"edit\" key=\"edit\" />,\n                                            <Icon type=\"ellipsis\" key=\"ellipsis\" />,\n                                        ]} >\n                                        <Meta\n                                            avatar={\n                                                <Avatar size=\"large\" icon=\"user\" />\n                                            }\n                                            title=\"User details\"\n                                            description=\"User description\"\n                                        />\n                                        <p><b>FullName</b>: {user.firstName} {user.lastName}</p>\n                                        <p><b>Phone Number </b>: {user.phoneNo}</p>\n                                        <p><b>Email</b>: {user.email}</p>\n                                        <p><b> UnAuthorized Activity Count block</b>: {user.illegalCount}</p>\n                                        <p><b> Account Status</b>:  {this.getAccontLockedInfo(user.block)}</p>\n                                        <p>\n                                            <b>Roles:</b>\n                                            {user.roles.map(role => {\n                                                return (\n                                                    <span>\n                                                        <span className=\"badge badge-secondary\">\n                                                            {role.name}\n\n                                                        </span>\n                                                        <Divider type=\"vertical\" />\n                                                    </span>\n                                                    \n                                                );   \n                                            })}\n\n                                        </p>\n\n                                    </Card>\n                                    \n                                </div>\n                                \n                            </div>\n                        </Spin>\n\n                        <Spin spinning={this.state.isloading}>\n\n                            {/* Table for drugs */}\n                            <div class=\"row\">\n\n                                <div className=\"col-md-12\">\n                                    <AuditTrailTable auditTrails={this.state.auditTrails}></AuditTrailTable>\n\n                                    {/* <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <strong className=\"card-title\">Data Table</strong>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <Table columns={this.getTableHeader()} dataSource={this.state.users} />\n                                        </div>\n                                        \n                                    </div> */}\n                                </div>\n\n\n                            </div>\n\n                        </Spin>\n\n                    </div>\n                </div>\n                {/* <!-- .content --> */}\n            </div>\n            {/* <!-- /#right-panel --> */}\n\n            {/* <!-- Right Panel --> */}\n        </div>\n    );\n  }\n}\n\nexport default UserInfoPage;\n"]},"metadata":{},"sourceType":"module"}