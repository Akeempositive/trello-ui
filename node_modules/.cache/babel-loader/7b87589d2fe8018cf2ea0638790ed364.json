{"ast":null,"code":"import \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport _classCallCheck from \"/Users/ddada/Documents/danpersonal/livejavaproject/trelloMaster/trello-ui/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ddada/Documents/danpersonal/livejavaproject/trelloMaster/trello-ui/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ddada/Documents/danpersonal/livejavaproject/trelloMaster/trello-ui/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ddada/Documents/danpersonal/livejavaproject/trelloMaster/trello-ui/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ddada/Documents/danpersonal/livejavaproject/trelloMaster/trello-ui/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ddada/Documents/danpersonal/livejavaproject/trelloMaster/trello-ui/src/pages/dashboard/dashboard.js\";\nimport React, { Component } from 'react';\nimport Header from '../../partials/header';\nimport Navbar from '../../partials/navbar';\nimport BreadCrumb from '../../partials/breadcrumb';\nimport { fetchAllUsers, unBlockUser, blockUser } from './dashboard-api';\nimport { tasks } from './dashboard-datasource'; // import {hasAuthority} from  '../../utils/api-utils'\n\nvar DashboarPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DashboarPage, _Component);\n\n  function DashboarPage(props) {\n    var _this;\n\n    _classCallCheck(this, DashboarPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DashboarPage).call(this, props));\n\n    _this.getTableHeader = function () {\n      var columns = [{\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name'\n      }, {\n        title: 'Description',\n        dataIndex: 'description',\n        key: 'description'\n      }, {\n        title: 'Email',\n        dataIndex: 'email',\n        key: 'email'\n      }, {\n        title: 'Phone Number',\n        dataIndex: 'phoneNo',\n        key: 'phoneNo'\n      }, {\n        title: 'Status',\n        dataIndex: 'status',\n        key: 'status',\n        render: function render(status) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, status.map(function (stat) {\n            return React.createElement(\"span\", {\n              className: \"badge badge-secondary\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 68\n              },\n              __self: this\n            }, stat);\n          }));\n        }\n      }];\n      return columns;\n    };\n\n    _this.getAllTask = function () {\n      _this.setState({\n        isloading: true\n      });\n\n      _this.setState({\n        tasks: tasks\n      });\n\n      _this.setState({\n        isloading: false\n      });\n    };\n\n    _this.state = {\n      tasks: [],\n      isloading: true // this.onsubmitDrug = this.onsubmitDrug.bind(this);\n\n    };\n    return _this;\n  }\n\n  _createClass(DashboarPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getAllTask();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var bodystyle = {\n        background: \"#f1f2f7\",\n        display: \"table\",\n        fontFamily: \"'Open Sans' sans-serif !important\",\n        fontSize: \"16px\",\n        width: \"100%\"\n      };\n      return React.createElement(\"div\", {\n        style: bodystyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"right-panel \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(BreadCrumb, {\n        menu: \"User\",\n        submenu: \" \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"content mt-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"animated fadeIn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(_Spin, {\n        spinning: this.state.isloading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Data Table\")), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(_Table, {\n        columns: this.getTableHeader(),\n        dataSource: this.state.tasks,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }))))))))));\n    }\n  }]);\n\n  return DashboarPage;\n}(Component);\n\nexport default DashboarPage;","map":{"version":3,"sources":["/Users/ddada/Documents/danpersonal/livejavaproject/trelloMaster/trello-ui/src/pages/dashboard/dashboard.js"],"names":["React","Component","Header","Navbar","BreadCrumb","fetchAllUsers","unBlockUser","blockUser","tasks","DashboarPage","props","getTableHeader","columns","title","dataIndex","key","render","status","map","stat","getAllTask","setState","isloading","state","bodystyle","background","display","fontFamily","fontSize","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from '../../partials/header';\nimport Navbar from '../../partials/navbar'\nimport BreadCrumb from '../../partials/breadcrumb'\nimport {fetchAllUsers,unBlockUser,blockUser} from './dashboard-api'\nimport{tasks} from './dashboard-datasource'\n// import {hasAuthority} from  '../../utils/api-utils'\n\nimport {\n    Form,\n    Input,\n    Tooltip,\n    Icon,\n    Cascader,\n    Select,\n    Row,\n    Col,\n    Spin,\n    notification,Popconfirm,Table, Divider, Tag \n  } from 'antd';\n\nclass DashboarPage extends Component  {\n    constructor(props) {\n        super(props);\n        this.state={\n            tasks:[],\n            isloading:true\n        }\n            // this.onsubmitDrug = this.onsubmitDrug.bind(this);\n\n    }\n\n    componentDidMount(){\n        this.getAllTask()\n    } \n\n    getTableHeader = ()=>{\n        \n        const columns = [\n            {\n              title: 'Name',\n              dataIndex: 'name',\n              key: 'name',\n            },\n            {\n                title: 'Description',\n                dataIndex: 'description',\n                key: 'description',\n            },\n            {\n              title: 'Email',\n              dataIndex: 'email', \n              key: 'email',\n            },\n            {\n              title: 'Phone Number',\n              dataIndex: 'phoneNo',\n              key: 'phoneNo',\n            },\n            {\n                title: 'Status',\n                dataIndex: 'status',\n                key: 'status',\n                render: status => (\n                    <span>\n                      {status.map(stat => {\n                        return (\n                            <span className=\"badge badge-secondary\">\n                                {stat}\n                            </span>\n                        );   \n                      })}\n                    </span>\n                ),\n            },\n           \n            // {\n            //     title: 'Action',\n            //     key: 'action',\n            //     render: (text, record) => (\n            //       <span>\n            //         {\n            //             hasAuthority([\"ROLE_ADMIN_BLOCK_USER\"]) \n            //             ?\n\n            //                 (record.block==0) ?\n\n            //                 <Popconfirm\n            //                     title=\"Are you sure you want to Block this User?\"\n            //                     onConfirm={(e)=>{this.blockUzer(record.email)}}\n            //                     onCancel={this.cancelDrug()}\n            //                     okText=\"Yes\"\n            //                     cancelText=\"No\"\n            //                 >\n            //                     <button type=\"button\" style={{marginBottom:'5px'}}  class=\"btn btn-danger btn-sm\">Block</button>\n            //                 </Popconfirm>\n\n            //                 :\n\n            //                 <Popconfirm\n            //                     title=\"Are you sure you want to UnBlock this User?\"\n            //                     onConfirm={(e)=>{this.unblockUzer(record.email)}}\n            //                     onCancel={this.cancelDrug()}\n            //                     okText=\"Yes\"\n            //                     cancelText=\"No\"\n            //                 >\n            //                     <button type=\"button\" style={{marginBottom:'5px'}}  class=\"btn btn-primary btn-sm\">UnBlock</button>\n            //                 </Popconfirm>\n            //             :\n            //             \"\"\n\n            //         }\n                    \n            //         {/* <button type=\"button\" style={{marginBottom:'5px'}}  class=\"btn btn-primary btn-sm\">Block</button> */}\n            //         <Divider type=\"vertical\" />\n            //         <button onClick={(e)=>{this.props.history.push(`/single-user/${record.id}`);}} type=\"button\" class=\"btn btn-primary btn-sm\">View Audit Trail</button>\n            //       </span>\n            //     ),\n            //   },\n          ];\n\n        return columns\n    }\n\n    \n    \n\n    getAllTask = () =>{\n        this.setState({isloading:true})\n        this.setState({tasks:tasks})\n        this.setState({isloading:false})\n\n    }\n\n\n\n  render() {\n    const bodystyle =  {\n        background: \"#f1f2f7\",\n        display: \"table\",\n        fontFamily: \"'Open Sans' sans-serif !important\",\n        fontSize: \"16px\",\n        width: \"100%\" }\n\n    return (\n        <div style={bodystyle}>\n        {/* <!-- Left Panel --> */}\n\n            <Navbar></Navbar>\n            {/* <!-- /#left-panel --> */}\n            {/* <!-- Left Panel --> */}\n\n            {/* <!-- Right Panel --> */}\n\n            <div  class=\"right-panel \">\n                <Header></Header>\n                {/* <!-- /header --> */}\n                {/* <!-- Header--> */}\n\n                <BreadCrumb menu=\"User\" submenu=\" \"></BreadCrumb>\n\n                <div class=\"content mt-3\">\n                    \n                    <div class=\"animated fadeIn\">\n                        <Spin spinning={this.state.isloading}>\n\n                            {/* Table for drugs */}\n                            <div class=\"row\">\n\n                            <div className=\"col-md-12\">\n                                <div className=\"card\">\n                                    <div className=\"card-header\">\n                                        <strong className=\"card-title\">Data Table</strong>\n                                    </div>\n                                    <div className=\"card-body\">\n                                        <Table columns={this.getTableHeader()} dataSource={this.state.tasks} />\n                                    </div>\n                                    \n                                </div>\n                            </div>\n\n\n                        </div>\n\n                        </Spin>\n\n                    </div>\n                </div>\n                {/* <!-- .content --> */}\n            </div>\n            {/* <!-- /#right-panel --> */}\n\n            {/* <!-- Right Panel --> */}\n        </div>\n    );\n  }\n}\n\nexport default DashboarPage;\n"]},"metadata":{},"sourceType":"module"}